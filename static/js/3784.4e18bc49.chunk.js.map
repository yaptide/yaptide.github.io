{"version":3,"file":"static/js/3784.4e18bc49.chunk.js","mappings":"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","sources":["../node_modules/jsroot/modules/draw/TPolyMarker3D.mjs","../node_modules/jsroot/modules/draw/draw3d.mjs"],"sourcesContent":["import { settings, isObject } from '../core.mjs';\nimport { PointsCreator } from '../base/base3d.mjs';\n\n/** @summary direct draw function for TPolyMarker3D object\n  * @private */\nasync function drawPolyMarker3D() {\n   const fp = this.$fp || this.getFramePainter();\n\n   delete this.$fp;\n\n   if (!isObject(fp) || !fp.grx || !fp.gry || !fp.grz)\n      return this;\n\n   const poly = this.getObject(), sizelimit = 50000, fP = poly.fP;\n   let step = 1, numselect = 0;\n\n   for (let i = 0; i < fP.length; i += 3) {\n      if ((fP[i] < fp.scale_xmin) || (fP[i] > fp.scale_xmax) ||\n          (fP[i+1] < fp.scale_ymin) || (fP[i+1] > fp.scale_ymax) ||\n          (fP[i+2] < fp.scale_zmin) || (fP[i+2] > fp.scale_zmax)) continue;\n      ++numselect;\n   }\n\n   if ((settings.OptimizeDraw > 0) && (numselect > sizelimit)) {\n      step = Math.floor(numselect/sizelimit);\n      if (step <= 2) step = 2;\n   }\n\n   const size = Math.floor(numselect/step),\n         pnts = new PointsCreator(size, fp.webgl, fp.size_x3d/100),\n         index = new Int32Array(size);\n   let select = 0, icnt = 0;\n\n   for (let i = 0; i < fP.length; i += 3) {\n      if ((fP[i] < fp.scale_xmin) || (fP[i] > fp.scale_xmax) ||\n          (fP[i+1] < fp.scale_ymin) || (fP[i+1] > fp.scale_ymax) ||\n          (fP[i+2] < fp.scale_zmin) || (fP[i+2] > fp.scale_zmax)) continue;\n\n      if (step > 1) {\n         select = (select+1) % step;\n         if (select !== 0) continue;\n      }\n\n      index[icnt++] = i;\n\n      pnts.addPoint(fp.grx(fP[i]), fp.gry(fP[i+1]), fp.grz(fP[i+2]));\n   }\n\n   return pnts.createPoints({ color: this.getColor(poly.fMarkerColor), style: poly.fMarkerStyle }).then(mesh => {\n      mesh.tip_color = (poly.fMarkerColor === 3) ? 0xFF0000 : 0x00FF00;\n      mesh.tip_name = poly.fName || 'Poly3D';\n      mesh.poly = poly;\n      mesh.fp = fp;\n      mesh.scale0 = 0.7*pnts.scale;\n      mesh.index = index;\n\n      fp.add3DMesh(mesh, this, true);\n\n      mesh.tooltip = function(intersect) {\n         let indx = Math.floor(intersect.index / this.nvertex);\n         if ((indx < 0) || (indx >= this.index.length)) return null;\n\n         indx = this.index[indx];\n\n         const fp = this.fp,\n               grx = fp.grx(this.poly.fP[indx]),\n               gry = fp.gry(this.poly.fP[indx+1]),\n               grz = fp.grz(this.poly.fP[indx+2]);\n\n         return {\n            x1: grx - this.scale0,\n            x2: grx + this.scale0,\n            y1: gry - this.scale0,\n            y2: gry + this.scale0,\n            z1: grz - this.scale0,\n            z2: grz + this.scale0,\n            color: this.tip_color,\n            lines: [this.tip_name,\n                     'pnt: ' + indx/3,\n                     'x: ' + fp.axisAsText('x', this.poly.fP[indx]),\n                     'y: ' + fp.axisAsText('y', this.poly.fP[indx+1]),\n                     'z: ' + fp.axisAsText('z', this.poly.fP[indx+2])\n                   ]\n         };\n      };\n\n      fp.render3D(100); // set timeout to be able draw other points\n\n      return this;\n   });\n}\n\nexport { drawPolyMarker3D };\n","import { isObject, isFunc } from '../core.mjs';\nimport { createLineSegments, create3DLineMaterial } from '../base/base3d.mjs';\nimport { drawDummy3DGeom } from '../geom/TGeoPainter.mjs';\nimport { drawPolyMarker3D as drawPolyMarker3Dplain } from './TPolyMarker3D.mjs';\n\n\n/** @summary Prepare frame painter for 3D drawing\n  * @private */\nfunction before3DDraw(painter) {\n   const fp = painter.getFramePainter();\n\n   if (!fp?.mode3d || !painter.getObject())\n      return null;\n\n   if (fp?.toplevel)\n      return fp;\n\n   const main = painter.getMainPainter();\n\n   if (main && !isFunc(main.drawExtras))\n      return null;\n\n   const pr = main ? Promise.resolve(main) : drawDummy3DGeom(painter);\n\n   return pr.then(geop => {\n      const pp = painter.getPadPainter();\n      if (pp) pp._disable_dragging = true;\n\n      if (geop._dummy && isFunc(painter.get3DBox))\n         geop.extendCustomBoundingBox(painter.get3DBox());\n      return geop.drawExtras(painter.getObject(), '', true, true);\n   });\n}\n\n/** @summary Function to extract 3DBox for poly marker and line\n  * @private */\nfunction get3DBox() {\n   const obj = this.getObject();\n   if (!obj?.fP.length)\n      return null;\n   const box = { min: { x: 0, y: 0, z: 0 }, max: { x: 0, y: 0, z: 0 } };\n\n   for (let k = 0; k < obj.fP.length; k += 3) {\n      const x = obj.fP[k],\n            y = obj.fP[k + 1],\n            z = obj.fP[k + 2];\n      if (k === 0) {\n         box.min.x = box.max.x = x;\n         box.min.y = box.max.y = y;\n         box.min.z = box.max.z = z;\n      } else {\n         box.min.x = Math.min(x, box.min.x);\n         box.max.x = Math.max(x, box.max.x);\n         box.min.y = Math.min(y, box.min.y);\n         box.max.y = Math.max(y, box.max.y);\n         box.min.z = Math.min(z, box.min.z);\n         box.max.z = Math.max(z, box.max.z);\n      }\n   }\n\n   return box;\n}\n\n\n/** @summary direct draw function for TPolyMarker3D object (optionally with geo painter)\n  * @private */\nasync function drawPolyMarker3D() {\n   this.get3DBox = get3DBox;\n\n   const fp = before3DDraw(this);\n\n   if (!isObject(fp) || !fp.grx || !fp.gry || !fp.grz)\n      return fp;\n\n   this.$fp = fp;\n\n   return drawPolyMarker3Dplain.bind(this)();\n}\n\n/** @summary Direct draw function for TPolyLine3D object\n  * @desc Takes into account dashed properties\n  * @private */\nasync function drawPolyLine3D() {\n   this.get3DBox = get3DBox;\n\n   const line = this.getObject(),\n         fp = before3DDraw(this);\n\n   if (!isObject(fp) || !fp.grx || !fp.gry || !fp.grz)\n      return fp;\n\n   const limit = 3*line.fN, p = line.fP, pnts = [];\n\n   for (let n = 3; n < limit; n += 3) {\n      pnts.push(fp.grx(p[n-3]), fp.gry(p[n-2]), fp.grz(p[n-1]),\n                fp.grx(p[n]), fp.gry(p[n+1]), fp.grz(p[n+2]));\n   }\n\n   const lines = createLineSegments(pnts, create3DLineMaterial(this, line));\n\n   fp.add3DMesh(lines, this, true);\n\n   fp.render3D(100);\n\n   return true;\n}\n\nexport { drawPolyMarker3D, drawPolyLine3D };\n"],"names":["async","drawPolyMarker3D","fp","this","$fp","getFramePainter","isObject","grx","gry","grz","poly","getObject","fP","step","numselect","i","length","scale_xmin","scale_xmax","scale_ymin","scale_ymax","scale_zmin","scale_zmax","settings","OptimizeDraw","Math","floor","size","pnts","PointsCreator","webgl","size_x3d","index","Int32Array","select","icnt","addPoint","createPoints","color","getColor","fMarkerColor","style","fMarkerStyle","then","mesh","tip_color","tip_name","fName","scale0","scale","add3DMesh","tooltip","intersect","indx","nvertex","x1","x2","y1","y2","z1","z2","lines","axisAsText","render3D","before3DDraw","painter","mode3d","toplevel","main","getMainPainter","isFunc","drawExtras","Promise","resolve","drawDummy3DGeom","geop","pp","getPadPainter","_disable_dragging","_dummy","get3DBox","extendCustomBoundingBox","obj","box","min","x","y","z","max","k","drawPolyMarker3Dplain","bind","drawPolyLine3D","line","limit","fN","p","n","push","createLineSegments","create3DLineMaterial"],"sourceRoot":""}