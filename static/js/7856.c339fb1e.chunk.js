"use strict";(self.webpackChunkthreejs_editor_react=self.webpackChunkthreejs_editor_react||[]).push([[7856],{5033:(e,t,r)=>{r.d(t,{Y:()=>a});var s=r(9490),i=r(273);async function a(){const e=this.$fp||this.getFramePainter();if(delete this.$fp,!(0,s.isObject)(e)||!e.grx||!e.gry||!e.grz)return this;const t=this.getObject(),r=t.fP;let a=1,n=0;for(let s=0;s<r.length;s+=3)r[s]<e.scale_xmin||r[s]>e.scale_xmax||r[s+1]<e.scale_ymin||r[s+1]>e.scale_ymax||r[s+2]<e.scale_zmin||r[s+2]>e.scale_zmax||++n;s.settings.OptimizeDraw>0&&n>5e4&&(a=Math.floor(n/5e4),a<=2&&(a=2));const o=Math.floor(n/a),l=new i._l(o,e.webgl,e.size_x3d/100),c=new Int32Array(o);let p=0,d=0;for(let s=0;s<r.length;s+=3)r[s]<e.scale_xmin||r[s]>e.scale_xmax||r[s+1]<e.scale_ymin||r[s+1]>e.scale_ymax||r[s+2]<e.scale_zmin||r[s+2]>e.scale_zmax||a>1&&(p=(p+1)%a,0!==p)||(c[d++]=s,l.addPoint(e.grx(r[s]),e.gry(r[s+1]),e.grz(r[s+2])));return l.createPoints({color:this.getColor(t.fMarkerColor),style:t.fMarkerStyle}).then((r=>(r.tip_color=3===t.fMarkerColor?16711680:65280,r.tip_name=t.fName||"Poly3D",r.poly=t,r.fp=e,r.scale0=.7*l.scale,r.index=c,e.add3DMesh(r,this,!0),r.tooltip=function(e){let t=Math.floor(e.index/this.nvertex);if(t<0||t>=this.index.length)return null;t=this.index[t];const r=this.fp,s=r.grx(this.poly.fP[t]),i=r.gry(this.poly.fP[t+1]),a=r.grz(this.poly.fP[t+2]);return{x1:s-this.scale0,x2:s+this.scale0,y1:i-this.scale0,y2:i+this.scale0,z1:a-this.scale0,z2:a+this.scale0,color:this.tip_color,lines:[this.tip_name,"pnt: "+t/3,"x: "+r.axisAsText("x",this.poly.fP[t]),"y: "+r.axisAsText("y",this.poly.fP[t+1]),"z: "+r.axisAsText("z",this.poly.fP[t+2])]}},e.render3D(100),this)))}},7856:(e,t,r)=>{r.r(t),r.d(t,{drawLeafPlayer:()=>g,drawTree:()=>b,drawTreePlayer:()=>x,drawTreePlayerKey:()=>y});var s=r(9490),i=r(8260),a=r(6203),n=r(8527),o=r(1597),l=r(6950),c=r(2848),p=r(1225),d=r(9914),h=r(1971),u=r(5033),f=r(9726);async function w(e,t,r){const i=t?._typename;return i&&(0,s.isStr)(i)?0===i.indexOf(s.clTH1)?c.TH1Painter.draw(e,t,r):0===i.indexOf(s.clTH2)?p.TH2Painter.draw(e,t,r):0===i.indexOf(s.clTH3)?d.TH3Painter.draw(e,t,r):0===i.indexOf(s.clTGraph)?h.k.draw(e,t,r):i===s.clTPolyMarker3D&&t.$hist?d.TH3Painter.draw(e,t.$hist,r).then((()=>{const s=new l.JW(e,t,r);return s.addToPadPrimitives(),s.redraw=u.Y,s.redraw()})):Promise.reject(Error(`Object of type ${i} cannot be draw with TTree`)):Promise.reject(Error("Object without type cannot be draw with TTree"))}async function _(e,t){if(t||this.last_pr){if(this.dump||this.testio){if(!t)return;if((0,s.isBatchMode)()){const t=new o.b8(this.drawid);return t.selectDom().property("_json_object_",e),t}if((0,s.isFunc)(s.internals.drawInspector))return s.internals.drawInspector(this.drawid,e);const r=(0,s.create)(s.clTObjString);return r.fString=(0,s.toJSON)(e,2),(0,l.as)(this.drawid,r)}return this.last_pr||(this.last_pr=Promise.resolve(!0)),this.last_pr.then((()=>(this.obj_painter?this.last_pr=this.obj_painter.redrawObject(e).then((()=>this.obj_painter)):e?this.last_pr=w(this.drawid,e).then((e=>(this.obj_painter=e,t||(this.last_pr=null),e))):(t&&console.log("no result after tree drawing"),this.last_pr=!1),t?this.last_pr:null)))}}function m(e){return e.draw_first=!0,e.configureOnline=function(e,t,r,s,i){this.setItemName(e,"",this),this.url=t,this.root_version=s,this.askey=r,this.draw_expr=i},e.configureTree=function(e){this.local_tree=e},e.showExtraButtons=function(e){const t=this.selectDom(),r=this.local_tree?.fEntries||0;t.select(".treedraw_more").remove(),t.select(".treedraw_buttons").node().innerHTML+=`Cut: <input class="treedraw_cut ui-corner-all ui-widget" style="width:8em;margin-left:5px" title="cut expression"></input>Opt: <input class="treedraw_opt ui-corner-all ui-widget" style="width:5em;margin-left:5px" title="histogram draw options"></input>Num: <input class="treedraw_number" type='number' min="0" max="${r}" step="1000" style="width:7em;margin-left:5px" title="number of entries to process (default all)"></input>First: <input class="treedraw_first" type='number' min="0" max="${r}" step="1000" style="width:7em;margin-left:5px" title="first entry to process (default first)"></input><button class="treedraw_clear" title="Clear drawing">Clear</button>`,t.select(".treedraw_exe").on("click",(()=>this.performDraw())),t.select(".treedraw_cut").property("value",e?.parse_cut||"").on("change",(()=>this.performDraw())),t.select(".treedraw_opt").property("value",e?.drawopt||"").on("change",(()=>this.performDraw())),t.select(".treedraw_number").attr("value",e?.numentries||""),t.select(".treedraw_first").attr("value",e?.firstentry||""),t.select(".treedraw_clear").on("click",(()=>(0,l.tP)(this.drawid)))},e.showPlayer=function(e){const t=this.selectDom();this.drawid="jsroot_tree_player_"+s.internals.id_counter+++"_draw";const r=e?.parse_cut||e?.numentries||e?.firstentry;t.html(`<div style="display:flex; flex-flow:column; height:100%; width:100%;"><div class="treedraw_buttons" style="flex: 0 1 auto;margin-top:0.2em;"><button class="treedraw_exe" title="Execute draw expression" style="margin-left:0.5em">Draw</button>Expr:<input class="treedraw_varexp treedraw_varexp_info" style="width:12em;margin-left:5px" title="draw expression"></input><label class="treedraw_varexp_info">\u24d8</label><button class="treedraw_more">More</button></div><div style="flex: 0 1 auto"><hr/></div><div id="${this.drawid}" style="flex: 1 1 auto; overflow:hidden;"></div></div>`),this.setTopPainter(),this.local_tree&&t.select(".treedraw_buttons").attr("title","Tree draw player for: "+this.local_tree.fName),t.select(".treedraw_exe").on("click",(()=>this.performDraw())),t.select(".treedraw_varexp").attr("value",e?.parse_expr||this.draw_expr||"px:py").on("change",(()=>this.performDraw())),t.select(".treedraw_varexp_info").attr("title","Example of valid draw expressions:\n  px - 1-dim draw\n  px:py - 2-dim draw\n  px:py:pz - 3-dim draw\n  px+py:px-py - use any expressions\n  px:py>>Graph - create and draw TGraph\n  px:py>>dump - dump extracted variables\n  px:py>>h(50,-5,5,50,-5,5) - custom histogram\n  px:py;hbins:100 - custom number of bins"),r?this.showExtraButtons(e):t.select(".treedraw_more").on("click",(()=>this.showExtraButtons(e))),this.checkResize(),(0,f.d7)(this)},e.getValue=function(e){const t=this.selectDom().select(e);if(t.empty())return;const r=t.property("value");return void 0!==r?r:t.attr("value")},e.performLocalDraw=function(){if(!this.local_tree)return;const e=this.selectDom(),t={expr:this.getValue(".treedraw_varexp")};e.select(".treedraw_more").empty()&&(t.cut=this.getValue(".treedraw_cut"),t.cut||delete t.cut,t.drawopt=this.getValue(".treedraw_opt"),"dump"===t.drawopt&&(t.dump=!0,t.drawopt=""),t.drawopt||delete t.drawopt,t.numentries=parseInt(this.getValue(".treedraw_number")),Number.isInteger(t.numentries)||delete t.numentries,t.firstentry=parseInt(this.getValue(".treedraw_first")),Number.isInteger(t.firstentry)||delete t.firstentry),(0,l.tP)(this.drawid),t.drawid=this.drawid,t.progress=_.bind(t),(0,n.treeDraw)(this.local_tree,t).then((e=>t.progress(e,!0)))},e.getDrawOpt=function(){let e="player";const t=this.getValue(".treedraw_varexp");return t&&(e+=":"+t),e},e.performDraw=function(){if(this.local_tree)return this.performLocalDraw();const e=this.selectDom();let t=this.url+"/exe.json.gz?compact=3&method=Draw",r=this.getValue(".treedraw_varexp"),i="h_tree_draw",a="";const n=r.indexOf(">>");if(n<0)r+=`>>${i}`;else{i=r.slice(n+2),"+"===i[0]&&(i=i.slice(1));const e=i.indexOf("(");e>0&&(i=i.slice(0,e))}if(e.select(".treedraw_more").empty()){const e=this.getValue(".treedraw_cut");let s=this.getValue(".treedraw_number"),i=this.getValue(".treedraw_first");a=this.getValue(".treedraw_opt"),t+=`&prototype="const char*,const char*,Option_t*,Long64_t,Long64_t"&varexp="${r}"&selection="${e}"`,s||(s="TTree::kMaxEntries"),i||(i="0"),t+=`&option="${a}"&nentries=${s}&firstentry=${i}`}else t+=`&prototype="Option_t*"&opt="${r}"`;t+=`&_ret_object_=${i}`;const o=()=>{(0,s.httpRequest)(t,"object").then((e=>{(0,l.tP)(this.drawid),w(this.drawid,e,a)}))};this.draw_expr=r,this.askey?(this.askey=!1,(0,s.httpRequest)(this.url+"/root.json.gz?compact=3","text").then(o)):o()},e.checkResize=function(){(0,l.XR)(this.drawid)},e}function x(e,t,r,a){let n=e.findItem(t),l="",c=0;const p=e.getTopOnlineItem(n);if(!n||!p)return null;if(a){for(l=n._name;n&&!n._ttree;)n=n._parent;if(!n)return null;t=e.itemFullName(n)}const d=e.getOnlineItemUrl(t);if(!d)return null;const h=p._root_version||400129,u=e.getDisplay();if(!u)return null;const f=u.findFrame(t,!0);if(!f)return null;const w=(0,i.Lt)(f).attr("id"),_=new o.b8(w);if(n._childs&&!a)for(let i=0;i<n._childs.length;++i){const e=n._childs[i];e&&e._kind&&0===e._kind.indexOf(s.prROOT+"TLeaf")&&c<2&&(c++>0&&(l+=":"),l+=e._name)}return m(_),_.configureOnline(t,d,r,h,l),_.showPlayer(),_}function y(e,t){return x(e,t,!0)}function g(e,t){return x(e,t,!1,!0)}async function b(e,t,r){let i,o,c=t,p=r;if(t._typename===n.clTBranchFunc?(p={expr:`.${t.func}()`,branch:t.branch},r&&0===r.indexOf("dump")?p.expr+=">>"+r:r&&(p.expr+=r),c=t.branch.$tree):t.$branch?(p={expr:`.${t.fName}${r||""}`,branch:t.$branch},p.branch.fType!==n.kClonesNode&&p.branch.fType!==n.kSTLNode||(p.expr=r,p.direct_branch=!0),c=t.$branch.$tree):t.$tree?(!r&&t.fStreamerType&&t.fStreamerType!==a.V$&&t.fStreamerType>=a.Ph&&t.fStreamerType<=a.Ql&&(r="dump"),p={expr:r,branch:t},c=t.$tree):(p||(p="player"),(0,s.isStr)(p)&&(p={expr:p})),!c)throw Error("No TTree object available for TTree::Draw");if((0,s.isStr)(p.expr)){const e=p.expr.indexOf("player");0===e?(p.player=!0,p.expr=p.expr.slice(6),":"===p.expr[0]&&(p.expr=p.expr.slice(1))):e>=0&&e===p.expr.length-6&&(p.player=!0,p.expr=p.expr.slice(0,e),e>0&&";"===p.expr[e-1]&&(p.expr=p.expr.slice(0,e-1)))}if(p.player?(i=new l.JW(e,t,r),m(i),i.configureTree(c),i.showPlayer(p),p.drawid=i.drawid):p.drawid=e,p.progress=_.bind(p),"testio"===p.expr)p.testio=!0,p.showProgress=e=>(0,f.Rh)(e,-1,(()=>{p._break=1})),o=(0,n.treeIOTest)(c,p);else{if(!p.expr&&!p.branch)return i;o=(0,n.treeDraw)(c,p)}return o.then((e=>p.progress(e,!0)))}n.TDrawSelector.prototype.ShowProgress=function(e){let t,r;if(void 0!==e&&Number.isFinite(e))if(this._break)t="Breaking ... ",r="break";else{if(this.last_progress!==e){const t=e-this.last_progress;this.aver_diff||(this.aver_diff=t),this.aver_diff=.3*t+.7*this.aver_diff}this.last_progress=e;let r=0;this.aver_diff<=0?r=0:this.aver_diff<1e-4?r=3:this.aver_diff<.001?r=2:this.aver_diff<.01&&(r=1),t=`TTree draw ${(100*e).toFixed(r)} % `}else t=r="";return(0,f.Rh)(t,0,(()=>{this._break=1})),r}},1971:(e,t,r)=>{r.d(t,{k:()=>n});var s=r(3921),i=r(2848),a=r(273);class n extends s.TGraphPainter{drawBins3D(e,t){if(!e.mode3d||!e.grx||!e.gry||!e.grz||!e.toplevel)return console.log("Frame painter missing base 3d elements");if(e.zoom_xmin!==e.zoom_xmax&&(this.options.pos3d<e.zoom_xmin||this.options.pos3d>e.zoom_xmax))return;this.createGraphDrawAttributes(!0);const r=this.optimizeBins(1e3);let s=0,i=r.length-1;if(e.zoom_ymin!==e.zoom_ymax){for(;s<i&&r[s].x<e.zoom_ymin;)s++;for(;s<i&&r[i].x>e.zoom_ymax;)i--}if(s===i)return;const n=[],o=e.grx(this.options.pos3d);let l=r[s];for(let a=s+1;a<=i;++a){const t=r[a];n.push(o,e.gry(l.x),e.grz(l.y),o,e.gry(t.x),e.grz(t.y)),l=t}const c=(0,a.Fc)(n,(0,a.DH)(this,t));e.add3DMesh(c,this,!0),e.render3D(100)}async drawAxisHisto(){return i.TH1Painter.draw(this.getDom(),this.createHistogram(),this.options.Axis)}static async draw(e,t,r){return n._drawGraph(new n(e,t),r)}}}}]);
//# sourceMappingURL=7856.c339fb1e.chunk.js.map