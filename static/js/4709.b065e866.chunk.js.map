{"version":3,"file":"static/js/4709.b065e866.chunk.js","mappings":"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","sources":["../node_modules/jsroot/modules/base/RObjectPainter.mjs","../node_modules/jsroot/modules/gpad/RAxisPainter.mjs","../node_modules/jsroot/modules/gpad/RFramePainter.mjs","../node_modules/jsroot/modules/gpad/RPadPainter.mjs","../node_modules/jsroot/modules/base/sha256.mjs","../node_modules/jsroot/modules/webwindow.mjs","../node_modules/jsroot/modules/gpad/RCanvasPainter.mjs"],"sourcesContent":["import { isStr, isFunc, nsREX } from '../core.mjs';\nimport { FontHandler } from './FontHandler.mjs';\nimport { ObjectPainter } from './ObjectPainter.mjs';\n\n\nconst kNormal = 1, /* kLessTraffic = 2, */ kOffline = 3;\n\nclass RObjectPainter extends ObjectPainter {\n\n   constructor(dom, obj, opt, csstype) {\n      super(dom, obj, opt);\n      this.csstype = csstype;\n   }\n\n   /** @summary Evaluate v7 attributes using fAttr storage and configured RStyle */\n   v7EvalAttr(name, dflt) {\n      const obj = this.getObject();\n      if (!obj) return dflt;\n      if (this.cssprefix) name = this.cssprefix + name;\n\n      const type_check = res => {\n         if (dflt === undefined) return res;\n         const typ1 = typeof dflt, typ2 = typeof res;\n         if (typ1 === typ2) return res;\n         if (typ1 === 'boolean') {\n            if (typ2 === 'string') return (res !== '') && (res !== '0') && (res !== 'no') && (res !== 'off');\n            return !!res;\n         }\n         if ((typ1 === 'number') && (typ2 === 'string'))\n            return parseFloat(res);\n         return res;\n      };\n\n      if (obj.fAttr?.m) {\n         const value = obj.fAttr.m[name];\n         if (value) return type_check(value.v); // found value direct in attributes\n      }\n\n      if (this.rstyle?.fBlocks) {\n         const blks = this.rstyle.fBlocks;\n         for (let k = 0; k < blks.length; ++k) {\n            const block = blks[k],\n                  match = (this.csstype && (block.selector === this.csstype)) ||\n                          (obj.fId && (block.selector === ('#' + obj.fId))) ||\n                          (obj.fCssClass && (block.selector === ('.' + obj.fCssClass)));\n\n            if (match && block.map?.m) {\n               const value = block.map.m[name.toLowerCase()];\n               if (value) return type_check(value.v);\n            }\n         }\n      }\n\n      return dflt;\n   }\n\n   /** @summary Set v7 attributes value */\n   v7SetAttr(name, value) {\n      const obj = this.getObject();\n      if (this.cssprefix) name = this.cssprefix + name;\n\n      if (obj?.fAttr?.m)\n         obj.fAttr.m[name] = { v: value };\n   }\n\n   /** @summary Decode pad length from string, return pixel value */\n   v7EvalLength(name, sizepx, dflt) {\n      if (sizepx <= 0) sizepx = 1;\n\n      const value = this.v7EvalAttr(name);\n\n      if (value === undefined)\n         return Math.round(dflt*sizepx);\n\n      if (typeof value === 'number')\n         return Math.round(value*sizepx);\n\n      if (value === null)\n         return 0;\n\n      let norm = 0, px = 0, val = value, operand = 0, pos = 0;\n\n      while (val) {\n         // skip empty spaces\n         while ((pos < val.length) && ((val[pos] === ' ') || (val[pos] === '\\t')))\n            ++pos;\n\n         if (pos >= val.length)\n            break;\n\n         if ((val[pos] === '-') || (val[pos] === '+')) {\n            if (operand) {\n               console.log('Fail to parse RPadLength ' + value);\n               return dflt;\n            }\n            operand = (val[pos] === '-') ? -1 : 1;\n            pos++;\n            continue;\n         }\n\n         if (pos > 0) { val = val.slice(pos); pos = 0; }\n\n         while ((pos < val.length) && (((val[pos] >= '0') && (val[pos] <= '9')) || (val[pos] === '.'))) pos++;\n\n         const v = parseFloat(val.slice(0, pos));\n         if (!Number.isFinite(v)) {\n            console.log(`Fail to parse RPadLength ${value}`);\n            return Math.round(dflt*sizepx);\n         }\n\n         val = val.slice(pos);\n         pos = 0;\n         if (!operand) operand = 1;\n         if (val && (val[0] === '%')) {\n            val = val.slice(1);\n            norm += operand*v*0.01;\n         } else if ((val.length > 1) && (val[0] === 'p') && (val[1] === 'x')) {\n            val = val.slice(2);\n            px += operand*v;\n         } else\n            norm += operand*v;\n\n         operand = 0;\n      }\n\n      return Math.round(norm*sizepx + px);\n   }\n\n   /** @summary Evaluate RColor using attribute storage and configured RStyle */\n   v7EvalColor(name, dflt) {\n      let val = this.v7EvalAttr(name, '');\n      if (!val || !isStr(val)) return dflt;\n\n      if (val === 'auto') {\n         const pp = this.getPadPainter();\n         if (pp?._auto_color_cnt !== undefined) {\n            const pal = pp.getHistPalette(),\n                  cnt = pp._auto_color_cnt++;\n            let num = pp._num_primitives - 1;\n            if (num < 2) num = 2;\n            val = pal ? pal.getColorOrdinal((cnt % num) / num) : 'blue';\n            if (!this._auto_colors) this._auto_colors = {};\n            this._auto_colors[name] = val;\n         } else if (this._auto_colors && this._auto_colors[name])\n            val = this._auto_colors[name];\n         else {\n            console.error(`Autocolor ${name} not defined yet - please check code`);\n            val = '';\n         }\n      } else if (val[0] === '[') {\n         const ordinal = parseFloat(val.slice(1, val.length-1));\n         val = 'black';\n         if (Number.isFinite(ordinal)) {\n             const pal = this.getPadPainter()?.getHistPalette();\n             if (pal) val = pal.getColorOrdinal(ordinal);\n         }\n      }\n      return val;\n   }\n\n   /** @summary Evaluate RAttrText properties\n     * @return {Object} FontHandler, can be used directly for the text drawing */\n   v7EvalFont(name, dflts, fontScale) {\n      if (!dflts)\n         dflts = {};\n      else if (typeof dflts === 'number')\n         dflts = { size: dflts };\n\n      const pp = this.getPadPainter(),\n            rfont = pp?._dfltRFont || { fFamily: 'Arial', fStyle: '', fWeight: '' },\n            text_angle = this.v7EvalAttr(name + '_angle', 0),\n            text_align = this.v7EvalAttr(name + '_align', dflts.align || 'none'),\n            text_color = this.v7EvalColor(name + '_color', dflts.color || 'none'),\n            font_family = this.v7EvalAttr(name + '_font_family', rfont.fFamily || 'Arial'),\n            font_style = this.v7EvalAttr(name + '_font_style', rfont.fStyle || ''),\n            font_weight = this.v7EvalAttr(name + '_font_weight', rfont.fWeight || '');\n       let text_size = this.v7EvalAttr(name + '_size', dflts.size || 12);\n\n       if (isStr(text_size)) text_size = parseFloat(text_size);\n       if (!Number.isFinite(text_size) || (text_size <= 0)) text_size = 12;\n       if (!fontScale) fontScale = pp?.getPadHeight() || 100;\n\n       const handler = new FontHandler(null, text_size, fontScale);\n       handler.setNameStyleWeight(font_family, font_style, font_weight);\n\n       if (text_angle) handler.setAngle(360 - text_angle);\n       if (text_align !== 'none') handler.setAlign(text_align);\n       if (text_color !== 'none') handler.setColor(text_color);\n\n       return handler;\n    }\n\n   /** @summary Create this.fillatt object based on v7 fill attributes */\n   createv7AttFill(prefix) {\n      if (!prefix || !isStr(prefix)) prefix = 'fill_';\n\n      const color = this.v7EvalColor(prefix + 'color', ''),\n            pattern = this.v7EvalAttr(prefix + 'style', 0);\n\n      this.createAttFill({ pattern, color, color_as_svg: true });\n   }\n\n   /** @summary Create this.lineatt object based on v7 line attributes */\n   createv7AttLine(prefix) {\n      if (!prefix || !isStr(prefix)) prefix = 'line_';\n\n      const color = this.v7EvalColor(prefix + 'color', 'black'),\n            width = this.v7EvalAttr(prefix + 'width', 1),\n            style = this.v7EvalAttr(prefix + 'style', 1),\n            pattern = this.v7EvalAttr(prefix + 'pattern');\n\n      this.createAttLine({ color, width, style, pattern });\n\n      if (prefix === 'border_')\n         this.lineatt.setBorder(this.v7EvalAttr(prefix + 'rx', 0), this.v7EvalAttr(prefix + 'ry', 0));\n   }\n\n    /** @summary Create this.markeratt object based on v7 attributes */\n   createv7AttMarker(prefix) {\n      if (!prefix || !isStr(prefix)) prefix = 'marker_';\n\n      const color = this.v7EvalColor(prefix + 'color', 'black'),\n            size = this.v7EvalAttr(prefix + 'size', 0.01),\n            style = this.v7EvalAttr(prefix + 'style', 1),\n            refsize = (size >= 1) ? 1 : (this.getPadPainter()?.getPadHeight() || 100);\n\n      this.createAttMarker({ color, size, style, refsize });\n   }\n\n   /** @summary Create RChangeAttr, which can be applied on the server side\n     * @private */\n   v7AttrChange(req, name, value, kind) {\n      if (!this.snapid)\n         return false;\n\n      if (!req._typename) {\n         req._typename = `${nsREX}RChangeAttrRequest`;\n         req.ids = [];\n         req.names = [];\n         req.values = [];\n         req.update = true;\n      }\n\n      if (this.cssprefix) name = this.cssprefix + name;\n      req.ids.push(this.snapid);\n      req.names.push(name);\n      let obj = null;\n\n      if ((value === null) || (value === undefined)) {\n        if (!kind) kind = 'none';\n        if (kind !== 'none') console.error(`Trying to set ${kind} for none value`);\n      }\n\n      if (!kind) {\n         switch (typeof value) {\n            case 'number': kind = 'double'; break;\n            case 'boolean': kind = 'boolean'; break;\n         }\n      }\n\n      obj = { _typename: `${nsREX}RAttrMap::` };\n      switch (kind) {\n         case 'none': obj._typename += 'NoValue_t'; break;\n         case 'boolean': obj._typename += 'BoolValue_t'; obj.v = !!value; break;\n         case 'int': obj._typename += 'IntValue_t'; obj.v = parseInt(value); break;\n         case 'double': obj._typename += 'DoubleValue_t'; obj.v = parseFloat(value); break;\n         default: obj._typename += 'StringValue_t'; obj.v = isStr(value) ? value : JSON.stringify(value); break;\n      }\n\n      req.values.push(obj);\n      return true;\n   }\n\n   /** @summary Sends accumulated attribute changes to server */\n   v7SendAttrChanges(req, do_update) {\n      const canp = this.getCanvPainter();\n      if (canp && req?._typename) {\n         if (do_update !== undefined)\n            req.update = !!do_update;\n         canp.v7SubmitRequest('', req);\n      }\n   }\n\n   /** @summary Submit request to server-side drawable\n    * @param kind defines request kind, only single request a time can be submitted\n    * @param req is object derived from DrawableRequest, including correct _typename\n    * @param method is method of painter object which will be called when getting reply */\n   v7SubmitRequest(kind, req, method) {\n      const canp = this.getCanvPainter();\n      if (!isFunc(canp?.submitDrawableRequest)) return null;\n\n      // special situation when snapid not yet assigned - just keep ref until snapid is there\n      // maybe keep full list - for now not clear if really needed\n      if (!this.snapid) {\n         this._pending_request = { kind, req, method };\n         return req;\n      }\n\n      return canp.submitDrawableRequest(kind, req, this, method);\n   }\n\n   /** @summary Assign snapid to the painter\n     * @desc Overwrite default method */\n   assignSnapId(id) {\n      this.snapid = id;\n      if (this.snapid && this._pending_request) {\n         const p = this._pending_request;\n         this.v7SubmitRequest(p.kind, p.req, p.method);\n         delete this._pending_request;\n      }\n   }\n\n   /** @summary Return communication mode with the server\n     * @desc\n     * kOffline means no server there,\n     * kLessTraffic advise not to send commands if offline functionality available\n     * kNormal is standard functionality with RCanvas on server side */\n   v7CommMode() {\n      const canp = this.getCanvPainter();\n      if (!canp || !canp.submitDrawableRequest || !canp._websocket)\n         return kOffline;\n\n      return kNormal;\n   }\n\n   v7NormalMode() { return this.v7CommMode() === kNormal; }\n\n   v7OfflineMode() { return this.v7CommMode() === kOffline; }\n\n} // class RObjectPainter\n\nexport { RObjectPainter };\n","import { settings, isFunc } from '../core.mjs';\nimport { select as d3_select, pointer as d3_pointer,\n         drag as d3_drag, timeFormat as d3_timeFormat,\n         scaleTime as d3_scaleTime, scaleSymlog as d3_scaleSymlog,\n         scaleLog as d3_scaleLog, scaleLinear as d3_scaleLinear } from '../d3.mjs';\nimport { makeTranslate, addHighlightStyle } from '../base/BasePainter.mjs';\nimport { AxisPainterMethods, chooseTimeFormat } from './TAxisPainter.mjs';\nimport { createMenu } from '../gui/menu.mjs';\nimport { addDragHandler } from './TFramePainter.mjs';\nimport { kAxisLabels, kAxisNormal, kAxisTime } from '../base/ObjectPainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\n\n\n/**\n * @summary Axis painter for v7\n *\n * @private\n */\n\nclass RAxisPainter extends RObjectPainter {\n\n   /** @summary constructor */\n   constructor(dom, arg1, axis, cssprefix) {\n      const drawable = cssprefix ? arg1.getObject() : arg1;\n      super(dom, drawable, '', cssprefix ? arg1.csstype : 'axis');\n      Object.assign(this, AxisPainterMethods);\n      this.initAxisPainter();\n\n      this.axis = axis;\n      if (cssprefix) { // drawing from the frame\n         this.embedded = true; // indicate that painter embedded into the histo painter\n         // this.csstype = arg1.csstype; // for the moment only via frame one can set axis attributes\n         this.cssprefix = cssprefix;\n         this.rstyle = arg1.rstyle;\n      } else {\n         // this.csstype = 'axis';\n         this.cssprefix = 'axis_';\n      }\n   }\n\n   /** @summary cleanup painter */\n   cleanup() {\n      delete this.axis;\n      delete this.axis_g;\n      this.cleanupAxisPainter();\n      super.cleanup();\n   }\n\n   /** @summary Use in GED to identify kind of axis */\n   getAxisType() { return 'RAttrAxis'; }\n\n   /** @summary Configure only base parameters, later same handle will be used for drawing  */\n   configureZAxis(name, fp) {\n      this.name = name;\n      this.kind = kAxisNormal;\n      this.log = false;\n      const _log = this.v7EvalAttr('log', 0);\n      if (_log) {\n         this.log = true;\n         this.logbase = 10;\n         if (Math.abs(_log - Math.exp(1)) < 0.1)\n            this.logbase = Math.exp(1);\n         else if (_log > 1.9)\n            this.logbase = Math.round(_log);\n      }\n      fp.logz = this.log;\n   }\n\n   /** @summary Configure axis painter\n     * @desc Axis can be drawn inside frame <g> group with offset to 0 point for the frame\n     * Therefore one should distinguish when caclulated coordinates used for axis drawing itself or for calculation of frame coordinates\n     * @private */\n   configureAxis(name, min, max, smin, smax, vertical, frame_range, axis_range, opts) {\n      if (!opts) opts = {};\n      this.name = name;\n      this.full_min = min;\n      this.full_max = max;\n      this.kind = kAxisNormal;\n      this.vertical = vertical;\n      this.log = false;\n      const _log = this.v7EvalAttr('log', 0),\n          _symlog = this.v7EvalAttr('symlog', 0);\n      this.reverse = opts.reverse || false;\n\n      if (this.v7EvalAttr('time')) {\n         this.kind = kAxisTime;\n         this.timeoffset = 0;\n         let toffset = this.v7EvalAttr('timeOffset');\n         if (toffset !== undefined) {\n            toffset = parseFloat(toffset);\n            if (Number.isFinite(toffset)) this.timeoffset = toffset*1000;\n         }\n      } else if (this.axis?.fLabelsIndex) {\n         this.kind = kAxisLabels;\n         delete this.own_labels;\n      } else if (opts.labels)\n         this.kind = kAxisLabels;\n       else\n         this.kind = kAxisNormal;\n\n\n      if (this.kind === kAxisTime)\n         this.func = d3_scaleTime().domain([this.convertDate(smin), this.convertDate(smax)]);\n       else if (_symlog && (_symlog > 0)) {\n         this.symlog = _symlog;\n         this.func = d3_scaleSymlog().constant(_symlog).domain([smin, smax]);\n      } else if (_log) {\n         if (smax <= 0) smax = 1;\n         if ((smin <= 0) || (smin >= smax))\n            smin = smax * 0.0001;\n         this.log = true;\n         this.logbase = 10;\n         if (Math.abs(_log - Math.exp(1)) < 0.1)\n            this.logbase = Math.exp(1);\n         else if (_log > 1.9)\n            this.logbase = Math.round(_log);\n         this.func = d3_scaleLog().base(this.logbase).domain([smin, smax]);\n      } else\n         this.func = d3_scaleLinear().domain([smin, smax]);\n\n      this.scale_min = smin;\n      this.scale_max = smax;\n\n      this.gr_range = axis_range || 1000; // when not specified, one can ignore it\n\n      const range = frame_range ?? [0, this.gr_range];\n\n      this.axis_shift = range[1] - this.gr_range;\n\n      if (this.reverse)\n         this.func.range([range[1], range[0]]);\n      else\n         this.func.range(range);\n\n      if (this.kind === kAxisTime)\n         this.gr = val => this.func(this.convertDate(val));\n      else if (this.log)\n         this.gr = val => (val < this.scale_min) ? (this.vertical ? this.func.range()[0]+5 : -5) : this.func(val);\n      else\n         this.gr = this.func;\n\n      delete this.format;// remove formatting func\n\n      const ndiv = this.v7EvalAttr('ndiv', 508);\n\n      this.nticks = ndiv % 100;\n      this.nticks2 = (ndiv % 10000 - this.nticks) / 100;\n      this.nticks3 = Math.floor(ndiv/10000);\n\n      if (this.nticks > 20) this.nticks = 20;\n\n      const gr_range = Math.abs(this.gr_range) || 100;\n\n      if (this.kind === kAxisTime) {\n         if (this.nticks > 8) this.nticks = 8;\n\n         const scale_range = this.scale_max - this.scale_min,\n               tf2 = chooseTimeFormat(scale_range / gr_range, false);\n         let tf1 = this.v7EvalAttr('timeFormat', '');\n\n         if (!tf1 || (scale_range < 0.1 * (this.full_max - this.full_min)))\n            tf1 = chooseTimeFormat(scale_range / this.nticks, true);\n\n         this.tfunc1 = this.tfunc2 = d3_timeFormat(tf1);\n         if (tf2 !== tf1)\n            this.tfunc2 = d3_timeFormat(tf2);\n\n         this.format = this.formatTime;\n      } else if (this.log) {\n         if (this.nticks2 > 1) {\n            this.nticks *= this.nticks2; // all log ticks (major or minor) created centrally\n            this.nticks2 = 1;\n         }\n         this.noexp = this.v7EvalAttr('noexp', false);\n         if ((this.scale_max < 300) && (this.scale_min > 0.3) && (this.logbase === 10)) this.noexp = true;\n         this.moreloglabels = this.v7EvalAttr('moreloglbls', false);\n\n         this.format = this.formatLog;\n      } else if (this.kind === kAxisLabels) {\n         this.nticks = 50; // for text output allow max 50 names\n         const scale_range = this.scale_max - this.scale_min;\n         if (this.nticks > scale_range)\n            this.nticks = Math.round(scale_range);\n         this.nticks2 = 1;\n\n         this.format = this.formatLabels;\n      } else {\n         this.order = 0;\n         this.ndig = 0;\n         this.format = this.formatNormal;\n      }\n   }\n\n   /** @summary Return scale min */\n   getScaleMin() {\n      return this.func ? this.func.domain()[0] : 0;\n   }\n\n   /** @summary Return scale max */\n   getScaleMax() {\n      return this.func ? this.func.domain()[1] : 0;\n   }\n\n   /** @summary Provide label for axis value */\n   formatLabels(d) {\n      const indx = Math.round(d);\n      if (this.axis?.fLabelsIndex) {\n         if ((indx < 0) || (indx >= this.axis.fNBinsNoOver)) return null;\n         for (let i = 0; i < this.axis.fLabelsIndex.length; ++i) {\n            const pair = this.axis.fLabelsIndex[i];\n            if (pair.second === indx) return pair.first;\n         }\n      } else {\n         const labels = this.getObject().fLabels;\n         if (labels && (indx >= 0) && (indx < labels.length))\n            return labels[indx];\n      }\n      return null;\n   }\n\n   /** @summary Creates array with minor/middle/major ticks */\n   createTicks(only_major_as_array, optionNoexp, optionNoopt, optionInt) {\n      if (optionNoopt && this.nticks && (this.kind === kAxisNormal)) this.noticksopt = true;\n\n      const ticks = this.produceTicks(this.nticks),\n            handle = { nminor: 0, nmiddle: 0, nmajor: 0, func: this.func, minor: ticks, middle: ticks, major: ticks };\n\n      if (only_major_as_array) {\n         const res = handle.major, delta = (this.scale_max - this.scale_min)*1e-5;\n         if (res[0] > this.scale_min + delta) res.unshift(this.scale_min);\n         if (res[res.length-1] < this.scale_max - delta) res.push(this.scale_max);\n         return res;\n      }\n\n      if ((this.nticks2 > 1) && (!this.log || (this.logbase === 10))) {\n         handle.minor = handle.middle = this.produceTicks(handle.major.length, this.nticks2);\n\n         const gr_range = Math.abs(this.func.range()[1] - this.func.range()[0]);\n\n         // avoid black filling by middle-size\n         if ((handle.middle.length <= handle.major.length) || (handle.middle.length > gr_range/3.5))\n            handle.minor = handle.middle = handle.major;\n          else if ((this.nticks3 > 1) && !this.log) {\n            handle.minor = this.produceTicks(handle.middle.length, this.nticks3);\n            if ((handle.minor.length <= handle.middle.length) || (handle.minor.length > gr_range/1.7)) handle.minor = handle.middle;\n         }\n      }\n\n      handle.reset = function() {\n         this.nminor = this.nmiddle = this.nmajor = 0;\n      };\n\n      handle.next = function(doround) {\n         if (this.nminor >= this.minor.length) return false;\n\n         this.tick = this.minor[this.nminor++];\n         this.grpos = this.func(this.tick);\n         if (doround) this.grpos = Math.round(this.grpos);\n         this.kind = 3;\n\n         if ((this.nmiddle < this.middle.length) && (Math.abs(this.grpos - this.func(this.middle[this.nmiddle])) < 1)) {\n            this.nmiddle++;\n            this.kind = 2;\n         }\n\n         if ((this.nmajor < this.major.length) && (Math.abs(this.grpos - this.func(this.major[this.nmajor])) < 1)) {\n            this.nmajor++;\n            this.kind = 1;\n         }\n         return true;\n      };\n\n      handle.last_major = function() {\n         return (this.kind !== 1) ? false : this.nmajor === this.major.length;\n      };\n\n      handle.next_major_grpos = function() {\n         if (this.nmajor >= this.major.length) return null;\n         return this.func(this.major[this.nmajor]);\n      };\n\n      handle.get_modifier = function() { return null; };\n\n      this.order = 0;\n      this.ndig = 0;\n\n      // at the moment when drawing labels, we can try to find most optimal text representation for them\n\n      if ((this.kind === kAxisNormal) && !this.log && (handle.major.length > 0)) {\n         let maxorder = 0, minorder = 0, exclorder3 = false;\n\n         if (!optionNoexp) {\n            const maxtick = Math.max(Math.abs(handle.major[0]), Math.abs(handle.major[handle.major.length-1])),\n                mintick = Math.min(Math.abs(handle.major[0]), Math.abs(handle.major[handle.major.length-1])),\n                ord1 = (maxtick > 0) ? Math.round(Math.log10(maxtick)/3)*3 : 0,\n                ord2 = (mintick > 0) ? Math.round(Math.log10(mintick)/3)*3 : 0;\n\n             exclorder3 = (maxtick < 2e4); // do not show 10^3 for values below 20000\n\n             if (maxtick || mintick) {\n                maxorder = Math.max(ord1, ord2) + 3;\n                minorder = Math.min(ord1, ord2) - 3;\n             }\n         }\n\n         // now try to find best combination of order and ndig for labels\n\n         let bestorder = 0, bestndig = this.ndig, bestlen = 1e10;\n\n         for (let order = minorder; order <= maxorder; order+=3) {\n            if (exclorder3 && (order===3)) continue;\n            this.order = order;\n            this.ndig = 0;\n            let lbls = [], indx = 0, totallen = 0;\n            while (indx<handle.major.length) {\n               const lbl = this.format(handle.major[indx], true);\n               if (lbls.indexOf(lbl) < 0) {\n                  lbls.push(lbl);\n                  totallen += lbl.length;\n                  indx++;\n                  continue;\n               }\n               if (++this.ndig > 11) break; // not too many digits, anyway it will be exponential\n               lbls = []; indx = 0; totallen = 0;\n            }\n\n            // for order === 0 we should virually remove '0.' and extra label on top\n            if (!order && (this.ndig < 4))\n               totallen -= (handle.major.length * 2 + 3);\n\n            if (totallen < bestlen) {\n               bestlen = totallen;\n               bestorder = this.order;\n               bestndig = this.ndig;\n            }\n         }\n\n         this.order = bestorder;\n         this.ndig = bestndig;\n\n         if (optionInt) {\n            if (this.order) console.warn(`Axis painter - integer labels are configured, but axis order ${this.order} is preferable`);\n            if (this.ndig) console.warn(`Axis painter - integer labels are configured, but ${this.ndig} decimal digits are required`);\n            this.ndig = 0;\n            this.order = 0;\n         }\n      }\n\n      return handle;\n   }\n\n   /** @summary Is labels should be centered */\n   isCenteredLabels() {\n      if (this.kind === kAxisLabels) return true;\n      if (this.kind === 'log') return false;\n      return this.v7EvalAttr('labels_center', false);\n   }\n\n   /** @summary Used to move axis labels instead of zooming\n     * @private */\n   processLabelsMove(arg, pos) {\n      if (this.optionUnlab || !this.axis_g) return false;\n\n      const label_g = this.axis_g.select('.axis_labels');\n      if (!label_g || (label_g.size() !== 1)) return false;\n\n      if (arg === 'start') {\n         // no moving without labels\n         const box = label_g.node().getBBox();\n\n         label_g.append('rect')\n                 .classed('drag', true)\n                 .attr('x', box.x)\n                 .attr('y', box.y)\n                 .attr('width', box.width)\n                 .attr('height', box.height)\n                 .style('cursor', 'move')\n                 .call(addHighlightStyle, true);\n         if (this.vertical)\n            this.drag_pos0 = pos[0];\n          else\n            this.drag_pos0 = pos[1];\n\n\n         return true;\n      }\n\n      let offset = label_g.property('fix_offset');\n\n      if (this.vertical) {\n         offset += Math.round(pos[0] - this.drag_pos0);\n         label_g.attr('transform', `translate(${offset})`);\n      } else {\n         offset += Math.round(pos[1] - this.drag_pos0);\n         label_g.attr('transform', `translate(0,${offset})`);\n      }\n      if (!offset) label_g.attr('transform', null);\n\n      if (arg === 'stop') {\n         label_g.select('rect.drag').remove();\n         delete this.drag_pos0;\n         if (offset !== label_g.property('fix_offset')) {\n            label_g.property('fix_offset', offset);\n            const side = label_g.property('side') || 1;\n            this.labelsOffset = offset / (this.vertical ? -side : side);\n            this.changeAxisAttr(1, 'labels_offset', this.labelsOffset / this.scalingSize);\n         }\n      }\n\n      return true;\n   }\n\n   /** @summary Add interactive elements to draw axes title */\n   addTitleDrag(title_g, side) {\n      if (!settings.MoveResize || this.isBatchMode()) return;\n\n      let drag_rect = null,\n          acc_x, acc_y, new_x, new_y, alt_pos, curr_indx;\n\n      const drag_move = d3_drag().subject(Object);\n\n      drag_move\n         .on('start', evnt => {\n            evnt.sourceEvent.preventDefault();\n            evnt.sourceEvent.stopPropagation();\n\n            const box = title_g.node().getBBox(), // check that elements visible, request precise value\n                title_length = this.vertical ? box.height : box.width;\n\n            new_x = acc_x = title_g.property('shift_x');\n            new_y = acc_y = title_g.property('shift_y');\n\n            if (this.titlePos === 'center')\n               curr_indx = 1;\n            else\n               curr_indx = (this.titlePos === 'left') ? 0 : 2;\n\n            // let d = ((this.gr_range > 0) && this.vertical) ? title_length : 0;\n            alt_pos = [0, this.gr_range/2, this.gr_range]; // possible positions\n            const off = this.vertical ? -title_length : title_length,\n                swap = this.isReverseAxis() ? 2 : 0;\n            if (this.title_align === 'middle') {\n               alt_pos[swap] += off/2;\n               alt_pos[2-swap] -= off/2;\n            } else if ((this.title_align === 'begin') ^ this.isTitleRotated()) {\n               alt_pos[1] -= off/2;\n               alt_pos[2-swap] -= off;\n            } else { // end\n               alt_pos[swap] += off;\n               alt_pos[1] += off/2;\n            }\n\n            alt_pos[curr_indx] = this.vertical ? acc_y : acc_x;\n\n            drag_rect = title_g.append('rect')\n                 .attr('x', box.x)\n                 .attr('y', box.y)\n                 .attr('width', box.width)\n                 .attr('height', box.height)\n                 .style('cursor', 'move')\n                 .call(addHighlightStyle, true);\n              // .style('pointer-events','none'); // let forward double click to underlying elements\n          }).on('drag', evnt => {\n               if (!drag_rect) return;\n\n               evnt.sourceEvent.preventDefault();\n               evnt.sourceEvent.stopPropagation();\n\n               acc_x += evnt.dx;\n               acc_y += evnt.dy;\n\n               const p = this.vertical ? acc_y : acc_x;\n               let set_x, set_y, besti = 0;\n\n               for (let i = 1; i < 3; ++i)\n                  if (Math.abs(p - alt_pos[i]) < Math.abs(p - alt_pos[besti])) besti = i;\n\n               if (this.vertical) {\n                  set_x = acc_x;\n                  set_y = alt_pos[besti];\n               } else {\n                  set_x = alt_pos[besti];\n                  set_y = acc_y;\n               }\n\n               new_x = set_x; new_y = set_y; curr_indx = besti;\n               makeTranslate(title_g, new_x, new_y);\n          }).on('end', evnt => {\n               if (!drag_rect) return;\n\n               evnt.sourceEvent.preventDefault();\n               evnt.sourceEvent.stopPropagation();\n\n               const basepos = title_g.property('basepos') || 0;\n\n               title_g.property('shift_x', new_x)\n                      .property('shift_y', new_y);\n\n               this.titleOffset = (this.vertical ? basepos - new_x : new_y - basepos) * side;\n\n               if (curr_indx === 1)\n                  this.titlePos = 'center';\n                else if (curr_indx === 0)\n                  this.titlePos = 'left';\n                else\n                  this.titlePos = 'right';\n\n               this.changeAxisAttr(0, 'title_position', this.titlePos, 'title_offset', this.titleOffset / this.scalingSize);\n\n               drag_rect.remove();\n               drag_rect = null;\n            });\n\n      title_g.style('cursor', 'move').call(drag_move);\n   }\n\n   /** @summary checks if value inside graphical range, taking into account delta */\n   isInsideGrRange(pos, delta1, delta2) {\n      if (!delta1) delta1 = 0;\n      if (delta2 === undefined) delta2 = delta1;\n      if (this.gr_range < 0)\n         return (pos >= this.gr_range - delta2) && (pos <= delta1);\n      return (pos >= -delta1) && (pos <= this.gr_range + delta2);\n   }\n\n   /** @summary returns graphical range */\n   getGrRange(delta) {\n      if (!delta) delta = 0;\n      if (this.gr_range < 0)\n         return this.gr_range - delta;\n      return this.gr_range + delta;\n   }\n\n   /** @summary If axis direction is negative coordinates direction */\n   isReverseAxis() {\n      return !this.vertical !== (this.getGrRange() > 0);\n   }\n\n   /** @summary Draw axis ticks\n     * @private */\n   drawMainLine(axis_g) {\n      let ending = '';\n\n      if (this.endingSize && this.endingStyle) {\n         let sz = (this.gr_range > 0) ? -this.endingSize : this.endingSize;\n         const sz7 = Math.round(sz*0.7);\n         sz = Math.round(sz);\n         if (this.vertical)\n            ending = `l${sz7},${sz}M0,${this.gr_range}l${-sz7},${sz}`;\n         else\n            ending = `l${sz},${sz7}M${this.gr_range},0l${sz},${-sz7}`;\n      }\n\n      axis_g.append('svg:path')\n            .attr('d', 'M0,0' + (this.vertical ? 'v' : 'h') + this.gr_range + ending)\n            .call(this.lineatt.func)\n            .style('fill', ending ? 'none' : null);\n   }\n\n   /** @summary Draw axis ticks\n     * @return {Object} with gaps on left and right side\n     * @private */\n   drawTicks(axis_g, side, main_draw) {\n      if (main_draw) this.ticks = [];\n\n      this.handle.reset();\n\n      let res = '', ticks_plusminus = 0;\n      if (this.ticksSide === 'both') {\n         side = 1;\n         ticks_plusminus = 1;\n      }\n\n      while (this.handle.next(true)) {\n         let h1 = Math.round(this.ticksSize/4), h2 = 0;\n\n         if (this.handle.kind < 3)\n            h1 = Math.round(this.ticksSize/2);\n\n         const grpos = this.handle.grpos - this.axis_shift;\n\n         if ((this.startingSize || this.endingSize) && !this.isInsideGrRange(grpos, -Math.abs(this.startingSize), -Math.abs(this.endingSize))) continue;\n\n         if (this.handle.kind === 1) {\n            // if not showing labels, not show large tick\n            if ((this.kind === kAxisLabels) || (this.format(this.handle.tick, true) !== null)) h1 = this.ticksSize;\n\n            if (main_draw) this.ticks.push(grpos); // keep graphical positions of major ticks\n         }\n\n         if (ticks_plusminus > 0)\n            h2 = -h1;\n         else if (side < 0) {\n            h2 = -h1; h1 = 0;\n         } else\n            h2 = 0;\n\n         res += this.vertical ? `M${h1},${grpos}H${h2}` : `M${grpos},${-h1}V${-h2}`;\n      }\n\n      if (res) {\n         axis_g.append('svg:path')\n               .attr('d', res)\n               .style('stroke', this.ticksColor || this.lineatt.color)\n               .style('stroke-width', !this.ticksWidth || (this.ticksWidth === 1) ? null : this.ticksWidth);\n       }\n\n       const gap0 = Math.round(0.25*this.ticksSize), gap = Math.round(1.25*this.ticksSize);\n       return { '-1': (side > 0) || ticks_plusminus ? gap : gap0,\n                  1: (side < 0) || ticks_plusminus ? gap : gap0 };\n   }\n\n   /** @summary Performs labels drawing\n     * @return {Promise} with gaps in both direction */\n   async drawLabels(axis_g, side, gaps) {\n      const center_lbls = this.isCenteredLabels(),\n            rotate_lbls = this.labelsFont.angle !== 0,\n            label_g = axis_g.append('svg:g').attr('class', 'axis_labels').property('side', side),\n            lbl_pos = this.handle.lbl_pos || this.handle.major;\n      let textscale = 1, maxtextlen = 0, lbls_tilt = false,\n          max_lbl_width = 0, max_lbl_height = 0;\n\n      // function called when text is drawn to analyze width, required to correctly scale all labels\n      function process_drawtext_ready(painter) {\n         max_lbl_width = Math.max(max_lbl_width, this.result_width);\n         max_lbl_height = Math.max(max_lbl_height, this.result_height);\n\n         const textwidth = this.result_width;\n\n         if (textwidth && ((!painter.vertical && !rotate_lbls) || (painter.vertical && rotate_lbls)) && !painter.log) {\n            let maxwidth = this.gap_before*0.45 + this.gap_after*0.45;\n            if (!this.gap_before) maxwidth = 0.9*this.gap_after; else\n            if (!this.gap_after) maxwidth = 0.9*this.gap_before;\n            textscale = Math.min(textscale, maxwidth / textwidth);\n         }\n\n         if ((textscale > 0.0001) && (textscale < 0.8) && !painter.vertical && !rotate_lbls && (maxtextlen > 5) && (side > 0))\n            lbls_tilt = true;\n\n         const scale = textscale * (lbls_tilt ? 3 : 1);\n         if ((scale > 0.0001) && (scale < 1))\n            painter.scaleTextDrawing(1/scale, label_g);\n      }\n\n      const fix_offset = Math.round((this.vertical ? -side : side) * this.labelsOffset),\n            fix_coord = Math.round((this.vertical ? -side : side) * gaps[side]);\n      let lastpos = 0;\n\n      if (fix_offset)\n         label_g.attr('transform', this.vertical ? `translate(${fix_offset})` : `translate(0,${fix_offset})`);\n\n      label_g.property('fix_offset', fix_offset);\n\n      this.startTextDrawing(this.labelsFont, 'font', label_g);\n\n      for (let nmajor = 0; nmajor < lbl_pos.length; ++nmajor) {\n         const lbl = this.format(lbl_pos[nmajor], true);\n         if (lbl === null) continue;\n\n         const arg = { text: lbl, latex: 1, draw_g: label_g };\n         let pos = Math.round(this.func(lbl_pos[nmajor]));\n\n         arg.gap_before = (nmajor > 0) ? Math.abs(Math.round(pos - this.func(lbl_pos[nmajor-1]))) : 0;\n         arg.gap_after = (nmajor < lbl_pos.length-1) ? Math.abs(Math.round(this.func(lbl_pos[nmajor+1])-pos)) : 0;\n\n         if (center_lbls) {\n            const gap = arg.gap_after || arg.gap_before;\n            pos = Math.round(pos - (this.vertical ? 0.5*gap : -0.5*gap));\n            if (!this.isInsideGrRange(pos, 5)) continue;\n         }\n\n         maxtextlen = Math.max(maxtextlen, lbl.length);\n\n         pos -= this.axis_shift;\n\n         if ((this.startingSize || this.endingSize) && !this.isInsideGrRange(pos, -Math.abs(this.startingSize), -Math.abs(this.endingSize))) continue;\n\n         if (this.vertical) {\n            arg.x = fix_coord;\n            arg.y = pos;\n            arg.align = rotate_lbls ? ((side < 0) ? 23 : 20) : ((side < 0) ? 12 : 32);\n         } else {\n            arg.x = pos;\n            arg.y = fix_coord;\n            arg.align = rotate_lbls ? ((side < 0) ? 12 : 32) : ((side < 0) ? 20 : 23);\n            if (this.log && !this.noexp && !this.vertical && arg.align === 23) {\n               arg.align = 21;\n               arg.y += this.labelsFont.size;\n            }\n         }\n\n         arg.post_process = process_drawtext_ready;\n\n         this.drawText(arg);\n\n         if (lastpos && (pos !== lastpos) && ((this.vertical && !rotate_lbls) || (!this.vertical && rotate_lbls))) {\n            const axis_step = Math.abs(pos-lastpos);\n            textscale = Math.min(textscale, 0.9*axis_step/this.labelsFont.size);\n         }\n\n         lastpos = pos;\n      }\n\n      if (this.order) {\n         this.drawText({ x: this.vertical ? side*5 : this.getGrRange(5),\n                         y: this.has_obstacle ? fix_coord : (this.vertical ? this.getGrRange(3) : -3*side),\n                         align: this.vertical ? ((side < 0) ? 30 : 10) : ((this.has_obstacle ^ (side < 0)) ? 13 : 10),\n                         latex: 1,\n                         text: '#times' + this.formatExp(10, this.order),\n                         draw_g: label_g });\n      }\n\n      return this.finishTextDrawing(label_g).then(() => {\n        if (lbls_tilt) {\n           label_g.selectAll('text').each(function() {\n               const txt = d3_select(this), tr = txt.attr('transform');\n               txt.attr('transform', tr + ' rotate(25)').style('text-anchor', 'start');\n           });\n         }\n\n         if (this.vertical)\n            gaps[side] += Math.round(rotate_lbls ? 1.2*max_lbl_height : max_lbl_width + 0.4*this.labelsFont.size) - side*fix_offset;\n         else {\n            const tilt_height = lbls_tilt ? max_lbl_width * Math.sin(25/180*Math.PI) + max_lbl_height * (Math.cos(25/180*Math.PI) + 0.2) : 0;\n\n            gaps[side] += Math.round(Math.max(rotate_lbls ? max_lbl_width + 0.4*this.labelsFont.size : 1.2*max_lbl_height, 1.2*this.labelsFont.size, tilt_height)) + fix_offset;\n         }\n\n         return gaps;\n      });\n   }\n\n   /** @summary Add zomming rect to axis drawing */\n   addZoomingRect(axis_g, side, lgaps) {\n      if (settings.Zooming && !this.disable_zooming && !this.isBatchMode()) {\n         const sz = Math.max(lgaps[side], 10),\n               d = this.vertical ? `v${this.gr_range}h${-side*sz}v${-this.gr_range}` : `h${this.gr_range}v${side*sz}h${-this.gr_range}`;\n         axis_g.append('svg:path')\n               .attr('d', `M0,0${d}z`)\n               .attr('class', 'axis_zoom')\n               .style('opacity', '0')\n               .style('cursor', 'crosshair');\n      }\n   }\n\n   /** @summary Returns true if axis title is rotated */\n   isTitleRotated() {\n      return this.titleFont && (this.titleFont.angle !== (this.vertical ? 270 : 0));\n   }\n\n   /** @summary Draw axis title */\n   async drawTitle(axis_g, side, lgaps) {\n      if (!this.fTitle)\n         return this;\n\n      const title_g = axis_g.append('svg:g').attr('class', 'axis_title'),\n            rotated = this.isTitleRotated();\n      let title_shift_x = 0, title_shift_y = 0, title_basepos = 0;\n\n      this.startTextDrawing(this.titleFont, 'font', title_g);\n\n      this.title_align = this.titleCenter ? 'middle' : (this.titleOpposite ^ (this.isReverseAxis() || rotated) ? 'begin' : 'end');\n\n      if (this.vertical) {\n         title_basepos = Math.round(-side*(lgaps[side]));\n         title_shift_x = title_basepos + Math.round(-side*this.titleOffset);\n         title_shift_y = Math.round(this.titleCenter ? this.gr_range/2 : (this.titleOpposite ? 0 : this.gr_range));\n         this.drawText({ align: [this.title_align, ((side < 0) ^ rotated ? 'top' : 'bottom')],\n                         text: this.fTitle, draw_g: title_g });\n      } else {\n         title_shift_x = Math.round(this.titleCenter ? this.gr_range/2 : (this.titleOpposite ? 0 : this.gr_range));\n         title_basepos = Math.round(side*lgaps[side]);\n         title_shift_y = title_basepos + Math.round(side*this.titleOffset);\n         this.drawText({ align: [this.title_align, ((side > 0) ^ rotated ? 'top' : 'bottom')],\n                         text: this.fTitle, draw_g: title_g });\n      }\n\n      makeTranslate(title_g, title_shift_x, title_shift_y)\n                   .property('basepos', title_basepos)\n                   .property('shift_x', title_shift_x)\n                   .property('shift_y', title_shift_y);\n\n      this.addTitleDrag(title_g, side);\n\n      return this.finishTextDrawing(title_g);\n   }\n\n   /** @summary Extract major draw attributes, which are also used in interactive operations\n     * @private  */\n   extractDrawAttributes(scalingSize) {\n      const pp = this.getPadPainter(),\n          rect = pp?.getPadRect() || { width: 10, height: 10 };\n\n      this.scalingSize = scalingSize || (this.vertical ? rect.width : rect.height);\n\n      this.createv7AttLine('line_');\n\n      this.optionUnlab = this.v7EvalAttr('labels_hide', false);\n\n      this.endingStyle = this.v7EvalAttr('ending_style', '');\n      this.endingSize = Math.round(this.v7EvalLength('ending_size', this.scalingSize, this.endingStyle ? 0.02 : 0));\n      this.startingSize = Math.round(this.v7EvalLength('starting_size', this.scalingSize, 0));\n      this.ticksSize = this.v7EvalLength('ticks_size', this.scalingSize, 0.02);\n      this.ticksSide = this.v7EvalAttr('ticks_side', 'normal');\n      this.ticksColor = this.v7EvalColor('ticks_color', '');\n      this.ticksWidth = this.v7EvalAttr('ticks_width', 1);\n      if (scalingSize && (this.ticksSize < 0))\n         this.ticksSize = -this.ticksSize;\n\n      this.fTitle = this.v7EvalAttr('title_value', '');\n\n      if (this.fTitle) {\n         this.titleFont = this.v7EvalFont('title', { size: 0.03 }, scalingSize || pp?.getPadHeight() || 10);\n         this.titleFont.roundAngle(180, this.vertical ? 270 : 0);\n\n         this.titleOffset = this.v7EvalLength('title_offset', this.scalingSize, 0);\n         this.titlePos = this.v7EvalAttr('title_position', 'right');\n         this.titleCenter = (this.titlePos === 'center');\n         this.titleOpposite = (this.titlePos === 'left');\n      } else {\n         delete this.titleFont;\n         delete this.titleOffset;\n         delete this.titlePos;\n      }\n\n      // TODO: remove old scaling factors for labels and ticks\n      this.labelsFont = this.v7EvalFont('labels', { size: scalingSize ? 0.05 : 0.03 });\n      this.labelsFont.roundAngle(180);\n      if (this.labelsFont.angle) this.labelsFont.angle = 270;\n      this.labelsOffset = this.v7EvalLength('labels_offset', this.scalingSize, 0);\n\n      if (scalingSize) this.ticksSize = this.labelsFont.size*0.5; // old lego scaling factor\n\n      if (this.maxTickSize && (this.ticksSize > this.maxTickSize))\n         this.ticksSize = this.maxTickSize;\n   }\n\n   /** @summary Performs axis drawing\n     * @return {Promise} which resolved when drawing is completed */\n   async drawAxis(layer, transform, side) {\n      let axis_g = layer;\n\n      if (side === undefined) side = 1;\n\n      if (!this.standalone) {\n         axis_g = layer.selectChild(`.${this.name}_container`);\n         if (axis_g.empty())\n            axis_g = layer.append('svg:g').attr('class', `${this.name}_container`);\n         else\n            axis_g.selectAll('*').remove();\n      }\n\n      axis_g.attr('transform', transform);\n\n      this.extractDrawAttributes();\n      this.axis_g = axis_g;\n      this.side = side;\n\n      if (this.ticksSide === 'invert') side = -side;\n\n      if (this.standalone)\n         this.drawMainLine(axis_g);\n\n      const optionNoopt = false,  // no ticks position optimization\n            optionInt = false,    // integer labels\n            optionNoexp = false;  // do not create exp\n\n      this.handle = this.createTicks(false, optionNoexp, optionNoopt, optionInt);\n\n      // first draw ticks\n      const tgaps = this.drawTicks(axis_g, side, true),\n             // draw labels\n            labelsPromise = this.optionUnlab ? Promise.resolve(tgaps) : this.drawLabels(axis_g, side, tgaps);\n\n      return labelsPromise.then(lgaps => {\n         // when drawing axis on frame, zoom rect should be always outside\n         this.addZoomingRect(axis_g, this.standalone ? side : this.side, lgaps);\n\n         return this.drawTitle(axis_g, side, lgaps);\n      });\n   }\n\n   /** @summary Assign handler, which is called when axis redraw by interactive changes\n     * @desc Used by palette painter to reassign iteractive handlers\n     * @private */\n   setAfterDrawHandler(handler) {\n      this._afterDrawAgain = handler;\n   }\n\n   /** @summary Draw axis with the same settings, used by interactive changes */\n   drawAxisAgain() {\n      if (!this.axis_g || !this.side) return;\n\n      this.axis_g.selectAll('*').remove();\n\n      this.extractDrawAttributes();\n\n      let side = this.side;\n      if (this.ticksSide === 'invert') side = -side;\n\n      if (this.standalone)\n         this.drawMainLine(this.axis_g);\n\n      // first draw ticks\n      const tgaps = this.drawTicks(this.axis_g, side, false),\n            labelsPromise = this.optionUnlab ? Promise.resolve(tgaps) : this.drawLabels(this.axis_g, side, tgaps);\n\n      return labelsPromise.then(lgaps => {\n         // when drawing axis on frame, zoom rect should be always outside\n         this.addZoomingRect(this.axis_g, this.standalone ? side : this.side, lgaps);\n\n         return this.drawTitle(this.axis_g, side, lgaps);\n      }).then(() => {\n         if (isFunc(this._afterDrawAgain))\n            this._afterDrawAgain();\n      });\n   }\n\n   /** @summary Draw axis again on opposite frame size */\n   drawAxisOtherPlace(layer, transform, side, only_ticks) {\n      let axis_g = layer.selectChild(`.${this.name}_container2`);\n      if (axis_g.empty())\n         axis_g = layer.append('svg:g').attr('class', `${this.name}_container2`);\n      else\n         axis_g.selectAll('*').remove();\n\n      axis_g.attr('transform', transform);\n\n      if (this.ticksSide === 'invert') side = -side;\n\n      // draw ticks again\n      const tgaps = this.drawTicks(axis_g, side, false),\n\n           // draw labels again\n           promise = this.optionUnlab || only_ticks ? Promise.resolve(tgaps) : this.drawLabels(axis_g, side, tgaps);\n\n      return promise.then(lgaps => {\n         this.addZoomingRect(axis_g, side, lgaps);\n         return true;\n      });\n   }\n\n   /** @summary Change zooming in standalone mode */\n   zoomStandalone(min, max) {\n      this.changeAxisAttr(1, 'zoomMin', min, 'zoomMax', max);\n   }\n\n   /** @summary Redraw axis, used in standalone mode for RAxisDrawable */\n   redraw() {\n      const drawable = this.getObject(),\n            pp = this.getPadPainter(),\n            pos = pp.getCoordinate(drawable.fPos),\n            reverse = this.v7EvalAttr('reverse', false),\n            labels_len = drawable.fLabels.length,\n            min = (labels_len > 0) ? 0 : this.v7EvalAttr('min', 0),\n            max = (labels_len > 0) ? labels_len : this.v7EvalAttr('max', 100);\n      let len = pp.getPadLength(drawable.fVertical, drawable.fLength);\n\n      // in vertical direction axis drawn in negative direction\n      if (drawable.fVertical) len -= pp.getPadHeight();\n\n      let smin = this.v7EvalAttr('zoomMin'),\n          smax = this.v7EvalAttr('zoomMax');\n      if (smin === smax) {\n         smin = min; smax = max;\n      }\n\n      this.configureAxis('axis', min, max, smin, smax, drawable.fVertical, undefined, len, { reverse, labels: labels_len > 0 });\n\n      this.createG();\n\n      this.standalone = true;  // no need to clean axis container\n\n      const promise = this.drawAxis(this.draw_g, makeTranslate(pos.x, pos.y));\n\n      if (this.isBatchMode()) return promise;\n\n      return promise.then(() => {\n         if (settings.ContextMenu) {\n            this.draw_g.on('contextmenu', evnt => {\n               evnt.stopPropagation(); // disable main context menu\n               evnt.preventDefault();  // disable browser context menu\n               createMenu(evnt, this).then(menu => {\n                 menu.add('header:RAxisDrawable');\n                 menu.add('Unzoom', () => this.zoomStandalone());\n                 this.fillAxisContextMenu(menu, '');\n                 menu.show();\n               });\n            });\n         }\n\n         addDragHandler(this, { x: pos.x, y: pos.y, width: this.vertical ? 10 : len, height: this.vertical ? len : 10,\n                                only_move: true, redraw: d => this.positionChanged(d) });\n\n         this.draw_g.on('dblclick', () => this.zoomStandalone());\n\n         if (settings.ZoomWheel) {\n            this.draw_g.on('wheel', evnt => {\n               evnt.stopPropagation();\n               evnt.preventDefault();\n\n               const pos = d3_pointer(evnt, this.draw_g.node()),\n                   coord = this.vertical ? (1 - pos[1] / len) : pos[0] / len,\n                   item = this.analyzeWheelEvent(evnt, coord);\n\n               if (item.changed) this.zoomStandalone(item.min, item.max);\n            });\n         }\n      });\n   }\n\n   /** @summary Process interactive moving of the axis drawing */\n   positionChanged(drag) {\n      const drawable = this.getObject(),\n          rect = this.getPadPainter().getPadRect(),\n          xn = drag.x / rect.width,\n          yn = 1 - drag.y / rect.height;\n\n      drawable.fPos.fHoriz.fArr = [xn];\n      drawable.fPos.fVert.fArr = [yn];\n\n      this.submitCanvExec(`SetPos({${xn.toFixed(4)},${yn.toFixed(4)}})`);\n   }\n\n   /** @summary Change axis attribute, submit changes to server and redraw axis when specified\n     * @desc Arguments as redraw_mode, name1, value1, name2, value2, ... */\n   changeAxisAttr(redraw_mode) {\n      const changes = {};\n      let indx = 1;\n      while (indx < arguments.length - 1) {\n         this.v7AttrChange(changes, arguments[indx], arguments[indx+1]);\n         this.v7SetAttr(arguments[indx], arguments[indx+1]);\n         indx += 2;\n      }\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n      if (redraw_mode === 1) {\n         if (this.standalone)\n            this.redraw();\n         else\n            this.drawAxisAgain();\n      } else if (redraw_mode)\n         this.redrawPad();\n   }\n\n   /** @summary Change axis log scale kind */\n   changeAxisLog(arg) {\n      if ((this.kind === kAxisLabels) || (this.kind === kAxisTime)) return;\n      if (arg === 'toggle') arg = this.log ? 0 : 10;\n\n      arg = parseFloat(arg);\n      if (Number.isFinite(arg)) this.changeAxisAttr(2, 'log', arg, 'symlog', 0);\n   }\n\n   /** @summary Provide context menu for axis */\n   fillAxisContextMenu(menu, kind) {\n      if (kind) menu.add('Unzoom', () => this.getFramePainter().unzoom(kind));\n\n      menu.add('sub:Log scale', () => this.changeAxisLog('toggle'));\n      menu.addchk(!this.log && !this.symlog, 'linear', 0, arg => this.changeAxisLog(arg));\n      menu.addchk(this.log && !this.symlog && (this.logbase === 10), 'log10', () => this.changeAxisLog(10));\n      menu.addchk(this.log && !this.symlog && (this.logbase === 2), 'log2', () => this.changeAxisLog(2));\n      menu.addchk(this.log && !this.symlog && Math.abs(this.logbase - Math.exp(1)) < 0.1, 'ln', () => this.changeAxisLog(Math.exp(1)));\n      menu.addchk(!this.log && this.symlog, 'symlog', 0, () =>\n         menu.input('set symlog constant', this.symlog || 10, 'float').then(v => this.changeAxisAttr(2, 'symlog', v)));\n      menu.add('endsub:');\n\n      menu.add('Divisions', () => menu.input('Set axis devisions', this.v7EvalAttr('ndiv', 508), 'int').then(val => this.changeAxisAttr(2, 'ndiv', val)));\n\n      menu.add('sub:Ticks');\n      menu.addRColorMenu('color', this.ticksColor, col => this.changeAxisAttr(1, 'ticks_color', col));\n      menu.addSizeMenu('size', 0, 0.05, 0.01, this.ticksSize/this.scalingSize, sz => this.changeAxisAttr(1, 'ticks_size', sz));\n      menu.addSelectMenu('side', ['normal', 'invert', 'both'], this.ticksSide, side => this.changeAxisAttr(1, 'ticks_side', side));\n      menu.add('endsub:');\n\n      if (!this.optionUnlab && this.labelsFont) {\n         menu.add('sub:Labels');\n         menu.addSizeMenu('offset', -0.05, 0.05, 0.01, this.labelsOffset/this.scalingSize,\n                         offset => this.changeAxisAttr(1, 'labels_offset', offset));\n         menu.addRAttrTextItems(this.labelsFont, { noangle: 1, noalign: 1 },\n               change => this.changeAxisAttr(1, 'labels_' + change.name, change.value));\n         menu.addchk(this.labelsFont.angle, 'rotate', res => this.changeAxisAttr(1, 'labels_angle', res ? 180 : 0));\n         menu.add('endsub:');\n      }\n\n      menu.add('sub:Title', () => menu.input('Enter axis title', this.fTitle).then(t => this.changeAxisAttr(1, 'title_value', t)));\n\n      if (this.fTitle) {\n         menu.addSizeMenu('offset', -0.05, 0.05, 0.01, this.titleOffset/this.scalingSize,\n                           offset => this.changeAxisAttr(1, 'title_offset', offset));\n\n         menu.addSelectMenu('position', ['left', 'center', 'right'], this.titlePos,\n                            pos => this.changeAxisAttr(1, 'title_position', pos));\n\n         menu.addchk(this.isTitleRotated(), 'rotate', flag => this.changeAxisAttr(1, 'title_angle', flag ? 180 : 0));\n\n         menu.addRAttrTextItems(this.titleFont, { noangle: 1, noalign: 1 }, change => this.changeAxisAttr(1, 'title_' + change.name, change.value));\n      }\n\n      menu.add('endsub:');\n      return true;\n   }\n\n} // class RAxisPainter\n\nexport { RAxisPainter };\n","import { gStyle, settings, create, isFunc, isStr, clTAxis, nsREX } from '../core.mjs';\nimport { pointer as d3_pointer } from '../d3.mjs';\nimport { getSvgLineStyle } from '../base/TAttLineHandler.mjs';\nimport { makeTranslate } from '../base/BasePainter.mjs';\nimport { TAxisPainter } from './TAxisPainter.mjs';\nimport { RAxisPainter } from './RAxisPainter.mjs';\nimport { FrameInteractive, getEarthProjectionFunc } from './TFramePainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\n\n\n/**\n * @summary Painter class for RFrame, main handler for interactivity\n *\n * @private\n */\n\nclass RFramePainter extends RObjectPainter {\n\n   /** @summary constructor\n     * @param {object|string} dom - DOM element for drawing or element id\n     * @param {object} tframe - RFrame object */\n   constructor(dom, tframe) {\n      super(dom, tframe, '', 'frame');\n      this.mode3d = false;\n      this.xmin = this.xmax = 0; // no scale specified, wait for objects drawing\n      this.ymin = this.ymax = 0; // no scale specified, wait for objects drawing\n      this.axes_drawn = false;\n      this.keys_handler = null;\n      this.projection = 0; // different projections\n      this.v7_frame = true; // indicator of v7, used in interactive part\n   }\n\n   /** @summary Returns frame painter - object itself */\n   getFramePainter() { return this; }\n\n   /** @summary Returns true if it is ROOT6 frame\n    * @private */\n   is_root6() { return false; }\n\n   /** @summary Set active flag for frame - can block some events\n    * @private */\n   setFrameActive(on) {\n      this.enabledKeys = on && settings.HandleKeys;\n      // used only in 3D mode\n      if (this.control)\n         this.control.enableKeys = this.enabledKeys;\n   }\n\n   setLastEventPos(pnt) {\n      // set position of last context menu event, can be\n      this.fLastEventPnt = pnt;\n   }\n\n   getLastEventPos() {\n      // return position of last event\n      return this.fLastEventPnt;\n   }\n\n   /** @summary Update graphical attributes */\n   updateAttributes(force) {\n      if ((this.fX1NDC === undefined) || (force && !this.modified_NDC)) {\n         const rect = this.getPadPainter().getPadRect();\n         this.fX1NDC = this.v7EvalLength('margins_left', rect.width, gStyle.fPadLeftMargin) / rect.width;\n         this.fY1NDC = this.v7EvalLength('margins_bottom', rect.height, gStyle.fPadBottomMargin) / rect.height;\n         this.fX2NDC = 1 - this.v7EvalLength('margins_right', rect.width, gStyle.fPadRightMargin) / rect.width;\n         this.fY2NDC = 1 - this.v7EvalLength('margins_top', rect.height, gStyle.fPadTopMargin) / rect.height;\n      }\n\n      if (!this.fillatt)\n         this.createv7AttFill();\n\n      this.createv7AttLine('border_');\n   }\n\n   /** @summary Returns coordinates transformation func */\n   getProjectionFunc() { return getEarthProjectionFunc(this.projection); }\n\n   /** @summary Rcalculate frame ranges using specified projection functions\n     * @desc Not yet used in v7 */\n   recalculateRange(Proj) {\n      this.projection = Proj || 0;\n\n      if ((this.projection === 2) && ((this.scale_ymin <= -90) || (this.scale_ymax >=90))) {\n         console.warn(`Mercator Projection: latitude out of range ${this.scale_ymin} ${this.scale_ymax}`);\n         this.projection = 0;\n      }\n\n      const func = this.getProjectionFunc();\n      if (!func) return;\n\n      const pnts = [func(this.scale_xmin, this.scale_ymin),\n                   func(this.scale_xmin, this.scale_ymax),\n                   func(this.scale_xmax, this.scale_ymax),\n                   func(this.scale_xmax, this.scale_ymin)];\n      if (this.scale_xmin < 0 && this.scale_xmax > 0) {\n         pnts.push(func(0, this.scale_ymin));\n         pnts.push(func(0, this.scale_ymax));\n      }\n      if (this.scale_ymin < 0 && this.scale_ymax > 0) {\n         pnts.push(func(this.scale_xmin, 0));\n         pnts.push(func(this.scale_xmax, 0));\n      }\n\n      this.original_xmin = this.scale_xmin;\n      this.original_xmax = this.scale_xmax;\n      this.original_ymin = this.scale_ymin;\n      this.original_ymax = this.scale_ymax;\n\n      this.scale_xmin = this.scale_xmax = pnts[0].x;\n      this.scale_ymin = this.scale_ymax = pnts[0].y;\n\n      for (let n = 1; n < pnts.length; ++n) {\n         this.scale_xmin = Math.min(this.scale_xmin, pnts[n].x);\n         this.scale_xmax = Math.max(this.scale_xmax, pnts[n].x);\n         this.scale_ymin = Math.min(this.scale_ymin, pnts[n].y);\n         this.scale_ymax = Math.max(this.scale_ymax, pnts[n].y);\n      }\n   }\n\n   /** @summary Draw axes grids\n     * @desc Called immediately after axes drawing */\n   drawGrids() {\n      const layer = this.getFrameSvg().selectChild('.axis_layer');\n\n      layer.selectAll('.xgrid').remove();\n      layer.selectAll('.ygrid').remove();\n\n      const h = this.getFrameHeight(),\n            w = this.getFrameWidth(),\n            gridx = this.v7EvalAttr('gridX', false),\n            gridy = this.v7EvalAttr('gridY', false),\n            grid_style = getSvgLineStyle(gStyle.fGridStyle),\n            grid_color = (gStyle.fGridColor > 0) ? this.getColor(gStyle.fGridColor) : 'black';\n\n      if (this.x_handle)\n         this.x_handle.draw_grid = gridx;\n\n      // add a grid on x axis, if the option is set\n      if (this.x_handle?.draw_grid) {\n         let grid = '';\n         for (let n = 0; n < this.x_handle.ticks.length; ++n) {\n            grid += this.swap_xy\n                  ? `M0,${h+this.x_handle.ticks[n]}h${w}`\n                  : `M${this.x_handle.ticks[n]},0v${h}`;\n         }\n\n         if (grid) {\n            layer.append('svg:path')\n                 .attr('class', 'xgrid')\n                 .attr('d', grid)\n                 .style('stroke', grid_color)\n                 .style('stroke-width', gStyle.fGridWidth)\n                 .style('stroke-dasharray', grid_style);\n         }\n      }\n\n      if (this.y_handle)\n         this.y_handle.draw_grid = gridy;\n\n      // add a grid on y axis, if the option is set\n      if (this.y_handle?.draw_grid) {\n         let grid = '';\n         for (let n = 0; n < this.y_handle.ticks.length; ++n) {\n            grid += this.swap_xy\n                     ? `M${this.y_handle.ticks[n]},0v${h}`\n                     : `M0,${h+this.y_handle.ticks[n]}h${w}`;\n         }\n\n         if (grid) {\n            layer.append('svg:path')\n               .attr('class', 'ygrid')\n               .attr('d', grid)\n               .style('stroke', grid_color)\n               .style('stroke-width', gStyle.fGridWidth)\n               .style('stroke-dasharray', grid_style);\n         }\n      }\n   }\n\n   /** @summary Converts 'raw' axis value into text */\n   axisAsText(axis, value) {\n      const handle = this[`${axis}_handle`];\n\n      return handle ? handle.axisAsText(value, settings[axis.toUpperCase() + 'ValuesFormat']) : value.toPrecision(4);\n   }\n\n   /** @summary Set axix range */\n   _setAxisRange(prefix, vmin, vmax) {\n      const nmin = `${prefix}min`, nmax = `${prefix}max`;\n      if (this[nmin] !== this[nmax]) return;\n      let min = this.v7EvalAttr(`${prefix}_min`),\n          max = this.v7EvalAttr(`${prefix}_max`);\n\n      if (min !== undefined) vmin = min;\n      if (max !== undefined) vmax = max;\n\n      if (vmin < vmax) {\n         this[nmin] = vmin;\n         this[nmax] = vmax;\n      }\n\n      const nzmin = `zoom_${prefix}min`, nzmax = `zoom_${prefix}max`;\n\n      if ((this[nzmin] === this[nzmax]) && !this.zoomChangedInteractive(prefix)) {\n         min = this.v7EvalAttr(`${prefix}_zoomMin`);\n         max = this.v7EvalAttr(`${prefix}_zoomMax`);\n\n         if ((min !== undefined) || (max !== undefined)) {\n            this[nzmin] = (min === undefined) ? this[nmin] : min;\n            this[nzmax] = (max === undefined) ? this[nmax] : max;\n         }\n      }\n   }\n\n   /** @summary Set axes ranges for drawing, check configured attributes if range already specified */\n   setAxesRanges(xaxis, xmin, xmax, yaxis, ymin, ymax, zaxis, zmin, zmax) {\n      if (this.axes_drawn) return;\n      this.xaxis = xaxis;\n      this._setAxisRange('x', xmin, xmax);\n      this.yaxis = yaxis;\n      this._setAxisRange('y', ymin, ymax);\n      this.zaxis = zaxis;\n      this._setAxisRange('z', zmin, zmax);\n   }\n\n   /** @summary Set secondary axes ranges */\n   setAxes2Ranges(second_x, xaxis, xmin, xmax, second_y, yaxis, ymin, ymax) {\n      if (second_x) {\n         this.x2axis = xaxis;\n         this._setAxisRange('x2', xmin, xmax);\n      }\n      if (second_y) {\n         this.y2axis = yaxis;\n         this._setAxisRange('y2', ymin, ymax);\n      }\n   }\n\n   /** @summary Create x,y objects which maps user coordinates into pixels\n     * @desc Must be used only for v6 objects, see TFramePainter for more details\n     * @private */\n   createXY(opts) {\n      if (this.self_drawaxes) return;\n\n      this.cleanXY(); // remove all previous configurations\n\n      if (!opts) opts = { ndim: 1 };\n\n      this.v6axes = true;\n      this.swap_xy = opts.swap_xy || false;\n      this.reverse_x = opts.reverse_x || false;\n      this.reverse_y = opts.reverse_y || false;\n\n      this.logx = this.v7EvalAttr('x_log', 0);\n      this.logy = this.v7EvalAttr('y_log', 0);\n\n      const w = this.getFrameWidth(), h = this.getFrameHeight();\n\n      this.scales_ndim = opts.ndim;\n\n      this.scale_xmin = this.xmin;\n      this.scale_xmax = this.xmax;\n\n      this.scale_ymin = this.ymin;\n      this.scale_ymax = this.ymax;\n\n      if (opts.extra_y_space) {\n         const log_scale = this.swap_xy ? this.logx : this.logy;\n         if (log_scale && (this.scale_ymax > 0))\n            this.scale_ymax = Math.exp(Math.log(this.scale_ymax)*1.1);\n         else\n            this.scale_ymax += (this.scale_ymax - this.scale_ymin)*0.1;\n      }\n\n      if ((opts.zoom_xmin !== opts.zoom_xmax) && ((this.zoom_xmin === this.zoom_xmax) || !this.zoomChangedInteractive('x'))) {\n         this.zoom_xmin = opts.zoom_xmin;\n         this.zoom_xmax = opts.zoom_xmax;\n      }\n\n      if ((opts.zoom_ymin !== opts.zoom_ymax) && ((this.zoom_ymin === this.zoom_ymax) || !this.zoomChangedInteractive('y'))) {\n         this.zoom_ymin = opts.zoom_ymin;\n         this.zoom_ymax = opts.zoom_ymax;\n      }\n\n      if (this.zoom_xmin !== this.zoom_xmax) {\n         this.scale_xmin = this.zoom_xmin;\n         this.scale_xmax = this.zoom_xmax;\n      }\n\n      if (this.zoom_ymin !== this.zoom_ymax) {\n         this.scale_ymin = this.zoom_ymin;\n         this.scale_ymax = this.zoom_ymax;\n      }\n\n      let xaxis = this.xaxis, yaxis = this.yaxis;\n      if (xaxis?._typename !== clTAxis) xaxis = create(clTAxis);\n      if (yaxis?._typename !== clTAxis) yaxis = create(clTAxis);\n\n      this.x_handle = new TAxisPainter(this.getDom(), xaxis, true);\n      this.x_handle.setPadName(this.getPadName());\n      this.x_handle.optionUnlab = this.v7EvalAttr('x_labels_hide', false);\n\n      this.x_handle.configureAxis('xaxis', this.xmin, this.xmax, this.scale_xmin, this.scale_xmax, this.swap_xy, this.swap_xy ? [0, h] : [0, w],\n                                      { reverse: this.reverse_x,\n                                        log: this.swap_xy ? this.logy : this.logx,\n                                        symlog: this.swap_xy ? opts.symlog_y : opts.symlog_x,\n                                        logcheckmin: this.swap_xy,\n                                        logminfactor: 0.0001 });\n\n      this.x_handle.assignFrameMembers(this, 'x');\n\n      this.y_handle = new TAxisPainter(this.getDom(), yaxis, true);\n      this.y_handle.setPadName(this.getPadName());\n      this.y_handle.optionUnlab = this.v7EvalAttr('y_labels_hide', false);\n\n      this.y_handle.configureAxis('yaxis', this.ymin, this.ymax, this.scale_ymin, this.scale_ymax, !this.swap_xy, this.swap_xy ? [0, w] : [0, h],\n                                      { reverse: this.reverse_y,\n                                        log: this.swap_xy ? this.logx : this.logy,\n                                        symlog: this.swap_xy ? opts.symlog_x : opts.symlog_y,\n                                        logcheckmin: (opts.ndim < 2) || this.swap_xy,\n                                        log_min_nz: opts.ymin_nz && (opts.ymin_nz < this.ymax) ? 0.5 * opts.ymin_nz : 0,\n                                        logminfactor: 3e-4 });\n\n      this.y_handle.assignFrameMembers(this, 'y');\n   }\n\n   /** @summary Identify if requested axes are drawn\n     * @desc Checks if x/y axes are drawn. Also if second side is already there */\n   hasDrawnAxes(second_x, second_y) {\n      return !second_x && !second_y ? this.axes_drawn : false;\n   }\n\n   /** @summary Draw configured axes on the frame\n     * @desc axes can be drawn only for main histogram  */\n   async drawAxes() {\n      if (this.axes_drawn || (this.xmin === this.xmax) || (this.ymin === this.ymax))\n         return this.axes_drawn;\n\n      const ticksx = this.v7EvalAttr('ticksX', 1),\n            ticksy = this.v7EvalAttr('ticksY', 1);\n      let sidex = 1, sidey = 1;\n\n      if (this.v7EvalAttr('swapX', false)) sidex = -1;\n      if (this.v7EvalAttr('swapY', false)) sidey = -1;\n\n      const w = this.getFrameWidth(), h = this.getFrameHeight();\n\n      if (!this.v6axes) {\n         // this is partially same as v6 createXY method\n\n         this.cleanupAxes();\n\n         this.swap_xy = false;\n\n         if (this.zoom_xmin !== this.zoom_xmax) {\n            this.scale_xmin = this.zoom_xmin;\n            this.scale_xmax = this.zoom_xmax;\n         } else {\n            this.scale_xmin = this.xmin;\n            this.scale_xmax = this.xmax;\n         }\n\n         if (this.zoom_ymin !== this.zoom_ymax) {\n            this.scale_ymin = this.zoom_ymin;\n            this.scale_ymax = this.zoom_ymax;\n         } else {\n            this.scale_ymin = this.ymin;\n            this.scale_ymax = this.ymax;\n         }\n\n         this.recalculateRange(0);\n\n         this.x_handle = new RAxisPainter(this.getDom(), this, this.xaxis, 'x_');\n         this.x_handle.setPadName(this.getPadName());\n         this.x_handle.snapid = this.snapid;\n         this.x_handle.draw_swapside = (sidex < 0);\n         this.x_handle.draw_ticks = ticksx;\n\n         this.y_handle = new RAxisPainter(this.getDom(), this, this.yaxis, 'y_');\n         this.y_handle.setPadName(this.getPadName());\n         this.y_handle.snapid = this.snapid;\n         this.y_handle.draw_swapside = (sidey < 0);\n         this.y_handle.draw_ticks = ticksy;\n\n         this.z_handle = new RAxisPainter(this.getDom(), this, this.zaxis, 'z_');\n         this.z_handle.setPadName(this.getPadName());\n         this.z_handle.snapid = this.snapid;\n\n         this.x_handle.configureAxis('xaxis', this.xmin, this.xmax, this.scale_xmin, this.scale_xmax, false, [0, w], w, { reverse: false });\n         this.x_handle.assignFrameMembers(this, 'x');\n\n         this.y_handle.configureAxis('yaxis', this.ymin, this.ymax, this.scale_ymin, this.scale_ymax, true, [h, 0], -h, { reverse: false });\n         this.y_handle.assignFrameMembers(this, 'y');\n\n         // only get basic properties like log scale\n         this.z_handle.configureZAxis('zaxis', this);\n      }\n\n      const layer = this.getFrameSvg().selectChild('.axis_layer');\n\n      this.x_handle.has_obstacle = false;\n\n      const draw_horiz = this.swap_xy ? this.y_handle : this.x_handle,\n            draw_vertical = this.swap_xy ? this.x_handle : this.y_handle;\n      let pr;\n\n      if (this.getPadPainter()?._fast_drawing)\n         pr = Promise.resolve(true); // do nothing\n       else if (this.v6axes) {\n         // in v7 ticksx/y values shifted by 1 relative to v6\n         // In v7 ticksx === 0 means no ticks, ticksx === 1 equivalent to === 0 in v6\n\n         const can_adjust_frame = false, disable_x_draw = false, disable_y_draw = false;\n\n         draw_horiz.disable_ticks = (ticksx <= 0);\n         draw_vertical.disable_ticks = (ticksy <= 0);\n\n         const pr1 = draw_horiz.drawAxis(layer, w, h,\n                                   draw_horiz.invert_side ? null : `translate(0,${h})`,\n                                   (ticksx > 1) ? -h : 0, disable_x_draw,\n                                   undefined, false, this.getPadPainter().getPadHeight() - h - this.getFrameY()),\n\n          pr2 = draw_vertical.drawAxis(layer, w, h,\n                                   draw_vertical.invert_side ? `translate(${w})` : null,\n                                   (ticksy > 1) ? w : 0, disable_y_draw,\n                                   draw_vertical.invert_side ? 0 : this._frame_x, can_adjust_frame);\n\n         pr = Promise.all([pr1, pr2]).then(() => this.drawGrids());\n      } else {\n         let arr = [];\n\n         if (ticksx > 0)\n            arr.push(draw_horiz.drawAxis(layer, makeTranslate(0, sidex > 0 ? h : 0), sidex));\n\n         if (ticksy > 0)\n            arr.push(draw_vertical.drawAxis(layer, makeTranslate(sidey > 0 ? 0 : w, h), sidey));\n\n         pr = Promise.all(arr).then(() => {\n            arr = [];\n            if (ticksx > 1)\n               arr.push(draw_horiz.drawAxisOtherPlace(layer, makeTranslate(0, sidex < 0 ? h : 0), -sidex, ticksx === 2));\n\n            if (ticksy > 1)\n               arr.push(draw_vertical.drawAxisOtherPlace(layer, makeTranslate(sidey < 0 ? 0 : w, h), -sidey, ticksy === 2));\n            return Promise.all(arr);\n         }).then(() => this.drawGrids());\n      }\n\n      return pr.then(() => {\n         this.axes_drawn = true;\n         return true;\n      });\n   }\n\n   /** @summary Draw secondary configuread axes */\n   drawAxes2(second_x, second_y) {\n      const w = this.getFrameWidth(), h = this.getFrameHeight(),\n            layer = this.getFrameSvg().selectChild('.axis_layer');\n      let pr1, pr2;\n\n      if (second_x) {\n         if (this.zoom_x2min !== this.zoom_x2max) {\n            this.scale_x2min = this.zoom_x2min;\n            this.scale_x2max = this.zoom_x2max;\n         } else {\n           this.scale_x2min = this.x2min;\n           this.scale_x2max = this.x2max;\n         }\n         this.x2_handle = new RAxisPainter(this.getDom(), this, this.x2axis, 'x2_');\n         this.x2_handle.setPadName(this.getPadName());\n         this.x2_handle.snapid = this.snapid;\n\n         this.x2_handle.configureAxis('x2axis', this.x2min, this.x2max, this.scale_x2min, this.scale_x2max, false, [0, w], w, { reverse: false });\n         this.x2_handle.assignFrameMembers(this, 'x2');\n\n         pr1 = this.x2_handle.drawAxis(layer, null, -1);\n      }\n\n      if (second_y) {\n         if (this.zoom_y2min !== this.zoom_y2max) {\n            this.scale_y2min = this.zoom_y2min;\n            this.scale_y2max = this.zoom_y2max;\n         } else {\n            this.scale_y2min = this.y2min;\n            this.scale_y2max = this.y2max;\n         }\n\n         this.y2_handle = new RAxisPainter(this.getDom(), this, this.y2axis, 'y2_');\n         this.y2_handle.setPadName(this.getPadName());\n         this.y2_handle.snapid = this.snapid;\n\n         this.y2_handle.configureAxis('y2axis', this.y2min, this.y2max, this.scale_y2min, this.scale_y2max, true, [h, 0], -h, { reverse: false });\n         this.y2_handle.assignFrameMembers(this, 'y2');\n\n         pr2 = this.y2_handle.drawAxis(layer, makeTranslate(w, h), -1);\n      }\n\n      return Promise.all([pr1, pr2]);\n   }\n\n   /** @summary Return functions to create x/y points based on coordinates\n     * @desc In default case returns frame painter itself\n     * @private */\n   getGrFuncs(second_x, second_y) {\n      const use_x2 = second_x && this.grx2,\n          use_y2 = second_y && this.gry2;\n      if (!use_x2 && !use_y2) return this;\n\n      return {\n         use_x2,\n         grx: use_x2 ? this.grx2 : this.grx,\n         x_handle: use_x2 ? this.x2_handle : this.x_handle,\n         logx: use_x2 ? this.x2_handle.log : this.x_handle.log,\n         scale_xmin: use_x2 ? this.scale_x2min : this.scale_xmin,\n         scale_xmax: use_x2 ? this.scale_x2max : this.scale_xmax,\n         use_y2,\n         gry: use_y2 ? this.gry2 : this.gry,\n         y_handle: use_y2 ? this.y2_handle : this.y_handle,\n         logy: use_y2 ? this.y2_handle.log : this.y_handle.log,\n         scale_ymin: use_y2 ? this.scale_y2min : this.scale_ymin,\n         scale_ymax: use_y2 ? this.scale_y2max : this.scale_ymax,\n         swap_xy: this.swap_xy,\n         fp: this,\n         revertAxis(name, v) {\n            if ((name === 'x') && this.use_x2) name = 'x2';\n            if ((name === 'y') && this.use_y2) name = 'y2';\n            return this.fp.revertAxis(name, v);\n         },\n         axisAsText(name, v) {\n            if ((name === 'x') && this.use_x2) name = 'x2';\n            if ((name === 'y') && this.use_y2) name = 'y2';\n            return this.fp.axisAsText(name, v);\n         }\n      };\n   }\n\n   /** @summary function called at the end of resize of frame\n     * @desc Used to update attributes on the server\n     * @private */\n   sizeChanged() {\n      const changes = {};\n      this.v7AttrChange(changes, 'margins_left', this.fX1NDC);\n      this.v7AttrChange(changes, 'margins_bottom', this.fY1NDC);\n      this.v7AttrChange(changes, 'margins_right', 1 - this.fX2NDC);\n      this.v7AttrChange(changes, 'margins_top', 1 - this.fY2NDC);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n\n      this.redrawPad();\n   }\n\n   /** @summary Remove all x/y functions\n     * @private */\n   cleanXY() {\n      // remove all axes drawings\n      const clean = (name, grname) => {\n         this[name]?.cleanup();\n         delete this[name];\n         delete this[grname];\n      };\n\n      clean('x_handle', 'grx');\n      clean('y_handle', 'gry');\n      clean('z_handle', 'grz');\n      clean('x2_handle', 'grx2');\n      clean('y2_handle', 'gry2');\n\n      delete this.v6axes; // marker that v6 axes are used\n   }\n\n   /** @summary Remove all axes drawings\n     * @private */\n   cleanupAxes() {\n      this.cleanXY();\n\n      this.draw_g?.selectChild('.axis_layer').selectAll('*').remove();\n      this.axes_drawn = false;\n   }\n\n   /** @summary Removes all drawn elements of the frame\n     * @private */\n   cleanFrameDrawings() {\n      // cleanup all 3D drawings if any\n      if (isFunc(this.create3DScene))\n         this.create3DScene(-1);\n\n      this.cleanupAxes();\n\n      const clean = (name) => {\n         this[name+'min'] = this[name+'max'] = 0;\n         this[`zoom_${name}min`] = this[`zoom_${name}max`] = 0;\n         this[`scale_${name}min`] = this[`scale_${name}max`] = 0;\n      };\n\n      clean('x');\n      clean('y');\n      clean('z');\n      clean('x2');\n      clean('y2');\n\n      this.draw_g?.selectChild('.main_layer').selectAll('*').remove();\n      this.draw_g?.selectChild('.upper_layer').selectAll('*').remove();\n   }\n\n   /** @summary Fully cleanup frame\n     * @private */\n   cleanup() {\n      this.cleanFrameDrawings();\n\n      if (this.draw_g) {\n         this.draw_g.selectAll('*').remove();\n         this.draw_g.on('mousedown', null)\n                    .on('dblclick', null)\n                    .on('wheel', null)\n                    .on('contextmenu', null)\n                    .property('interactive_set', null);\n      }\n\n      if (this.keys_handler) {\n         window.removeEventListener('keydown', this.keys_handler, false);\n         this.keys_handler = null;\n      }\n      delete this.enabledKeys;\n      delete this.self_drawaxes;\n\n      delete this.xaxis;\n      delete this.yaxis;\n      delete this.zaxis;\n      delete this.x2axis;\n      delete this.y2axis;\n\n      delete this.draw_g; // frame <g> element managet by the pad\n\n      delete this._click_handler;\n      delete this._dblclick_handler;\n\n      const pp = this.getPadPainter();\n      if (pp?.frame_painter_ref === this)\n         delete pp.frame_painter_ref;\n\n      super.cleanup();\n   }\n\n   /** @summary Redraw frame\n     * @private */\n   redraw() {\n      const pp = this.getPadPainter();\n      if (pp) pp.frame_painter_ref = this;\n\n      // first update all attributes from objects\n      this.updateAttributes();\n\n      const rect = pp?.getPadRect() ?? { width: 10, height: 10 },\n            lm = Math.round(rect.width * this.fX1NDC),\n            tm = Math.round(rect.height * (1 - this.fY2NDC));\n      let w = Math.round(rect.width * (this.fX2NDC - this.fX1NDC)),\n          h = Math.round(rect.height * (this.fY2NDC - this.fY1NDC)),\n          rotate = false, fixpos = false, trans;\n\n      if (pp?.options) {\n         if (pp.options.RotateFrame) rotate = true;\n         if (pp.options.FixFrame) fixpos = true;\n      }\n\n      if (rotate) {\n         trans = `rotate(-90,${lm},${tm}) translate(${lm-h},${tm})`;\n         [w, h] = [h, w];\n      } else\n         trans = makeTranslate(lm, tm);\n\n\n      // update values here to let access even when frame is not really updated\n      this._frame_x = lm;\n      this._frame_y = tm;\n      this._frame_width = w;\n      this._frame_height = h;\n      this._frame_rotate = rotate;\n      this._frame_fixpos = fixpos;\n\n      if (this.mode3d) return this; // no need for real draw in mode3d\n\n      // this is svg:g object - container for every other items belonging to frame\n      this.draw_g = this.getFrameSvg();\n\n      let top_rect, main_svg;\n\n      if (this.draw_g.empty()) {\n         this.draw_g = this.getLayerSvg('primitives_layer').append('svg:g').attr('class', 'root_frame');\n\n         if (!this.isBatchMode())\n            this.draw_g.append('svg:title').text('');\n\n         top_rect = this.draw_g.append('svg:rect');\n\n         main_svg = this.draw_g.append('svg:svg')\n                           .attr('class', 'main_layer')\n                           .attr('x', 0)\n                           .attr('y', 0)\n                           .attr('overflow', 'hidden');\n\n         this.draw_g.append('svg:g').attr('class', 'axis_layer');\n         this.draw_g.append('svg:g').attr('class', 'upper_layer');\n      } else {\n         top_rect = this.draw_g.selectChild('rect');\n         main_svg = this.draw_g.selectChild('.main_layer');\n      }\n\n      this.axes_drawn = false;\n\n      this.draw_g.attr('transform', trans);\n\n      top_rect.attr('x', 0)\n              .attr('y', 0)\n              .attr('width', w)\n              .attr('height', h)\n              .attr('rx', this.lineatt.rx || null)\n              .attr('ry', this.lineatt.ry || null)\n              .call(this.fillatt.func)\n              .call(this.lineatt.func);\n\n      main_svg.attr('width', w)\n              .attr('height', h)\n              .attr('viewBox', `0 0 ${w} ${h}`);\n\n      let pr = Promise.resolve(true);\n\n      if (this.v7EvalAttr('drawAxes')) {\n         this.self_drawaxes = true;\n         this.setAxesRanges();\n         pr = this.drawAxes().then(() => this.addInteractivity());\n      }\n\n      return pr.then(() => { return this; });\n   }\n\n   /** @summary Returns frame X position */\n   getFrameX() { return this._frame_x || 0; }\n\n   /** @summary Returns frame Y position */\n   getFrameY() { return this._frame_y || 0; }\n\n   /** @summary Returns frame width */\n   getFrameWidth() { return this._frame_width || 0; }\n\n   /** @summary Returns frame height */\n   getFrameHeight() { return this._frame_height || 0; }\n\n   /** @summary Returns frame rectangle plus extra info for hint display */\n   getFrameRect() {\n      return {\n         x: this._frame_x || 0,\n         y: this._frame_y || 0,\n         width: this.getFrameWidth(),\n         height: this.getFrameHeight(),\n         transform: this.draw_g?.attr('transform') || '',\n         hint_delta_x: 0,\n         hint_delta_y: 0\n      };\n   }\n\n   /** @summary Returns palette associated with frame */\n   getHistPalette() {\n      return this.getPadPainter().getHistPalette();\n   }\n\n   /** @summary Configure user-defined click handler\n     * @desc Function will be called every time when frame click was perfromed\n     * As argument, tooltip object with selected bins will be provided\n     * If handler function returns true, default handling of click will be disabled */\n   configureUserClickHandler(handler) {\n      this._click_handler = isFunc(handler) ? handler : null;\n   }\n\n   /** @summary Configure user-defined dblclick handler\n     * @desc Function will be called every time when double click was called\n     * As argument, tooltip object with selected bins will be provided\n     * If handler function returns true, default handling of dblclick (unzoom) will be disabled */\n   configureUserDblclickHandler(handler) {\n      this._dblclick_handler = isFunc(handler) ? handler : null;\n   }\n\n   /** @summary function can be used for zooming into specified range\n     * @desc if both limits for each axis 0 (like xmin === xmax === 0), axis will be unzoomed\n     * @return {Promise} with boolean flag if zoom operation was performed */\n   async zoom(xmin, xmax, ymin, ymax, zmin, zmax) {\n      // disable zooming when axis conversion is enabled\n      if (this.projection) return false;\n\n      if (xmin === 'x') { xmin = xmax; xmax = ymin; ymin = undefined; } else\n      if (xmin === 'y') { ymax = ymin; ymin = xmax; xmin = xmax = undefined; } else\n      if (xmin === 'z') { zmin = xmax; zmax = ymin; xmin = xmax = ymin = undefined; }\n\n      let zoom_x = (xmin !== xmax), zoom_y = (ymin !== ymax), zoom_z = (zmin !== zmax),\n          unzoom_x = false, unzoom_y = false, unzoom_z = false;\n\n      if (zoom_x) {\n         let cnt = 0;\n         if (xmin <= this.xmin) { xmin = this.xmin; cnt++; }\n         if (xmax >= this.xmax) { xmax = this.xmax; cnt++; }\n         if (cnt === 2) { zoom_x = false; unzoom_x = true; }\n      } else\n         unzoom_x = (xmin === xmax) && (xmin === 0);\n\n\n      if (zoom_y) {\n         let cnt = 0;\n         if (ymin <= this.ymin) { ymin = this.ymin; cnt++; }\n         if (ymax >= this.ymax) { ymax = this.ymax; cnt++; }\n         if (cnt === 2) { zoom_y = false; unzoom_y = true; }\n      } else\n         unzoom_y = (ymin === ymax) && (ymin === 0);\n\n\n      if (zoom_z) {\n         let cnt = 0;\n         // if (this.logz && this.ymin_nz && this.getDimension()===2) main_zmin = 0.3*this.ymin_nz;\n         if (zmin <= this.zmin) { zmin = this.zmin; cnt++; }\n         if (zmax >= this.zmax) { zmax = this.zmax; cnt++; }\n         if (cnt === 2) { zoom_z = false; unzoom_z = true; }\n      } else\n         unzoom_z = (zmin === zmax) && (zmin === 0);\n\n\n      let changed = false, r_x = '', r_y = '', r_z = '', is_any_check = false;\n      const req = {\n            _typename: `${nsREX}RFrame::RUserRanges`,\n            values: [0, 0, 0, 0, 0, 0],\n            flags: [false, false, false, false, false, false]\n      },\n\n      checkZooming = (painter, force) => {\n         if (!force && !isFunc(painter.canZoomInside)) return;\n\n         is_any_check = true;\n\n         if (zoom_x && (force || painter.canZoomInside('x', xmin, xmax))) {\n            this.zoom_xmin = xmin;\n            this.zoom_xmax = xmax;\n            changed = true; r_x = '0';\n            zoom_x = false;\n            req.values[0] = xmin; req.values[1] = xmax;\n            req.flags[0] = req.flags[1] = true;\n         }\n         if (zoom_y && (force || painter.canZoomInside('y', ymin, ymax))) {\n            this.zoom_ymin = ymin;\n            this.zoom_ymax = ymax;\n            changed = true; r_y = '1';\n            zoom_y = false;\n            req.values[2] = ymin; req.values[3] = ymax;\n            req.flags[2] = req.flags[3] = true;\n         }\n         if (zoom_z && (force || painter.canZoomInside('z', zmin, zmax))) {\n            this.zoom_zmin = zmin;\n            this.zoom_zmax = zmax;\n            changed = true; r_z = '2';\n            zoom_z = false;\n            req.values[4] = zmin; req.values[5] = zmax;\n            req.flags[4] = req.flags[5] = true;\n         }\n      };\n\n      // first process zooming (if any)\n      if (zoom_x || zoom_y || zoom_z)\n         this.forEachPainter(painter => checkZooming(painter));\n\n      // force zooming when no any other painter can verify zoom range\n      if (!is_any_check && this.self_drawaxes)\n         checkZooming(null, true);\n\n      // and process unzoom, if any\n      if (unzoom_x || unzoom_y || unzoom_z) {\n         if (unzoom_x) {\n            if (this.zoom_xmin !== this.zoom_xmax) { changed = true; r_x = '0'; }\n            this.zoom_xmin = this.zoom_xmax = 0;\n            req.values[0] = req.values[1] = -1;\n         }\n         if (unzoom_y) {\n            if (this.zoom_ymin !== this.zoom_ymax) { changed = true; r_y = '1'; }\n            this.zoom_ymin = this.zoom_ymax = 0;\n            req.values[2] = req.values[3] = -1;\n         }\n         if (unzoom_z) {\n            if (this.zoom_zmin !== this.zoom_zmax) { changed = true; r_z = '2'; }\n            this.zoom_zmin = this.zoom_zmax = 0;\n            req.values[4] = req.values[5] = -1;\n         }\n      }\n\n      if (!changed) return false;\n\n      if (this.v7NormalMode())\n         this.v7SubmitRequest('zoom', { _typename: `${nsREX}RFrame::RZoomRequest`, ranges: req });\n\n      return this.interactiveRedraw('pad', 'zoom' + r_x + r_y + r_z).then(() => true);\n   }\n\n   /** @summary Provide zooming of single axis\n     * @desc One can specify names like x/y/z but also second axis x2 or y2 */\n   async zoomSingle(name, vmin, vmax) {\n      const names = ['x', 'y', 'z', 'x2', 'y2'], indx = names.indexOf(name);\n\n      // disable zooming when axis conversion is enabled\n      if (this.projection || !this[name+'_handle'] || (indx < 0))\n         return false;\n\n      let zoom_v = (vmin !== vmax), unzoom_v = false;\n\n      if (zoom_v) {\n         let cnt = 0;\n         if (vmin <= this[name+'min']) { vmin = this[name+'min']; cnt++; }\n         if (vmax >= this[name+'max']) { vmax = this[name+'max']; cnt++; }\n         if (cnt === 2) { zoom_v = false; unzoom_v = true; }\n      } else\n         unzoom_v = (vmin === vmax) && (vmin === 0);\n\n\n      let changed = false, is_any_check = false;\n      const req = {\n             _typename: `${nsREX}RFrame::RUserRanges`,\n             values: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n             flags: [false, false, false, false, false, false, false, false, false, false]\n       },\n\n       checkZooming = (painter, force) => {\n         if (!force && !isFunc(painter?.canZoomInside)) return;\n\n         is_any_check = true;\n\n         if (zoom_v && (force || painter.canZoomInside(name[0], vmin, vmax))) {\n            this['zoom_' + name + 'min'] = vmin;\n            this['zoom_' + name + 'max'] = vmax;\n            changed = true;\n            zoom_v = false;\n            req.values[indx*2] = vmin; req.values[indx*2+1] = vmax;\n            req.flags[indx*2] = req.flags[indx*2+1] = true;\n         }\n      };\n\n      // first process zooming (if any)\n      if (zoom_v)\n         this.forEachPainter(painter => checkZooming(painter));\n\n      // force zooming when no any other painter can verify zoom range\n      if (!is_any_check && this.self_drawaxes)\n         checkZooming(null, true);\n\n      if (unzoom_v) {\n         if (this[`zoom_${name}min`] !== this[`zoom_${name}max`]) changed = true;\n         this[`zoom_${name}min`] = this[`zoom_${name}max`] = 0;\n         req.values[indx*2] = req.values[indx*2+1] = -1;\n      }\n\n      if (!changed) return false;\n\n      if (this.v7NormalMode())\n         this.v7SubmitRequest('zoom', { _typename: `${nsREX}RFrame::RZoomRequest`, ranges: req });\n\n      return this.interactiveRedraw('pad', `zoom${indx}`).then(() => true);\n   }\n\n   /** @summary Checks if specified axis zoomed */\n   isAxisZoomed(axis) {\n      return this[`zoom_${axis}min`] !== this[`zoom_${axis}max`];\n   }\n\n   /** @summary Unzoom specified axes\n     * @return {Promise} with boolean flag if zoom is changed */\n   async unzoom(dox, doy, doz) {\n      if (dox === 'all')\n         return this.unzoom('x2').then(() => this.unzoom('y2')).then(() => this.unzoom('xyz'));\n\n      if ((dox === 'x2') || (dox === 'y2')) {\n         return this.zoomSingle(dox, 0, 0).then(changed => {\n            if (changed) this.zoomChangedInteractive(dox, 'unzoom');\n            return changed;\n         });\n      }\n\n      if (typeof dox === 'undefined') dox = doy = doz = true; else\n      if (isStr(dox)) { doz = dox.indexOf('z') >= 0; doy = dox.indexOf('y') >= 0; dox = dox.indexOf('x') >= 0; }\n\n      return this.zoom(dox ? 0 : undefined, dox ? 0 : undefined,\n                       doy ? 0 : undefined, doy ? 0 : undefined,\n                       doz ? 0 : undefined, doz ? 0 : undefined).then(changed => {\n         if (changed && dox) this.zoomChangedInteractive('x', 'unzoom');\n         if (changed && doy) this.zoomChangedInteractive('y', 'unzoom');\n         if (changed && doz) this.zoomChangedInteractive('z', 'unzoom');\n\n         return changed;\n      });\n   }\n\n   /** @summary Mark/check if zoom for specific axis was changed interactively\n     * @private */\n   zoomChangedInteractive(axis, value) {\n      if (axis === 'reset') {\n         this.zoom_changed_x = this.zoom_changed_y = this.zoom_changed_z = undefined;\n         return;\n      }\n      if (!axis || axis === 'any')\n         return this.zoom_changed_x || this.zoom_changed_y || this.zoom_changed_z;\n\n      if ((axis !== 'x') && (axis !== 'y') && (axis !== 'z')) return;\n\n      const fld = 'zoom_changed_' + axis;\n      if (value === undefined) return this[fld];\n\n      if (value === 'unzoom') {\n         // special handling of unzoom, only if was never changed before flag set to true\n         this[fld] = (this[fld] === undefined);\n         return;\n      }\n\n      if (value) this[fld] = true;\n   }\n\n   /** @summary Fill menu for frame when server is not there */\n   fillObjectOfflineMenu(menu, kind) {\n      if ((kind !== 'x') && (kind !== 'y')) return;\n\n      menu.add('Unzoom', () => this.unzoom(kind));\n\n      // if (this[kind+'_kind'] === kAxisNormal)\n      //   menu.addchk(this['log'+kind], 'SetLog'+kind, this.toggleAxisLog.bind(this, kind));\n\n      // here should be all axes attributes in offline\n   }\n\n   /** @summary Set grid drawing for specified axis */\n   changeFrameAttr(attr, value) {\n      const changes = {};\n      this.v7AttrChange(changes, attr, value);\n      this.v7SetAttr(attr, value);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n      this.redrawPad();\n   }\n\n   /** @summary Fill context menu */\n   fillContextMenu(menu, kind /* , obj */) {\n      // when fill and show context menu, remove all zooming\n\n      if (kind === 'pal') kind = 'z';\n\n      if ((kind === 'x') || (kind === 'y') || (kind === 'x2') || (kind === 'y2')) {\n         const handle = this[kind+'_handle'];\n         if (!handle) return false;\n         menu.add('header: ' + kind.toUpperCase() + ' axis');\n         return handle.fillAxisContextMenu(menu, kind);\n      }\n\n      const alone = menu.size() === 0;\n\n      if (alone)\n         menu.add('header:Frame');\n      else\n         menu.add('separator');\n\n      if (this.zoom_xmin !== this.zoom_xmax)\n         menu.add('Unzoom X', () => this.unzoom('x'));\n      if (this.zoom_ymin !== this.zoom_ymax)\n         menu.add('Unzoom Y', () => this.unzoom('y'));\n      if (this.zoom_zmin !== this.zoom_zmax)\n         menu.add('Unzoom Z', () => this.unzoom('z'));\n      if (this.zoom_x2min !== this.zoom_x2max)\n         menu.add('Unzoom X2', () => this.unzoom('x2'));\n      if (this.zoom_y2min !== this.zoom_y2max)\n         menu.add('Unzoom Y2', () => this.unzoom('y2'));\n      menu.add('Unzoom all', () => this.unzoom('all'));\n\n      menu.add('separator');\n\n      menu.addchk(this.isTooltipAllowed(), 'Show tooltips', () => this.setTooltipAllowed('toggle'));\n\n      if (this.x_handle)\n         menu.addchk(this.x_handle.draw_grid, 'Grid x', flag => this.changeFrameAttr('gridX', flag));\n      if (this.y_handle)\n         menu.addchk(this.y_handle.draw_grid, 'Grid y', flag => this.changeFrameAttr('gridY', flag));\n      if (this.x_handle && !this.x2_handle)\n         menu.addchk(this.x_handle.draw_swapside, 'Swap x', flag => this.changeFrameAttr('swapX', flag));\n      if (this.y_handle && !this.y2_handle)\n         menu.addchk(this.y_handle.draw_swapside, 'Swap y', flag => this.changeFrameAttr('swapY', flag));\n      if (this.x_handle && !this.x2_handle) {\n         menu.add('sub:Ticks x');\n         menu.addchk(this.x_handle.draw_ticks === 0, 'off', () => this.changeFrameAttr('ticksX', 0));\n         menu.addchk(this.x_handle.draw_ticks === 1, 'normal', () => this.changeFrameAttr('ticksX', 1));\n         menu.addchk(this.x_handle.draw_ticks === 2, 'ticks on both sides', () => this.changeFrameAttr('ticksX', 2));\n         menu.addchk(this.x_handle.draw_ticks === 3, 'labels on both sides', () => this.changeFrameAttr('ticksX', 3));\n         menu.add('endsub:');\n       }\n      if (this.y_handle && !this.y2_handle) {\n         menu.add('sub:Ticks y');\n         menu.addchk(this.y_handle.draw_ticks === 0, 'off', () => this.changeFrameAttr('ticksY', 0));\n         menu.addchk(this.y_handle.draw_ticks === 1, 'normal', () => this.changeFrameAttr('ticksY', 1));\n         menu.addchk(this.y_handle.draw_ticks === 2, 'ticks on both sides', () => this.changeFrameAttr('ticksY', 2));\n         menu.addchk(this.y_handle.draw_ticks === 3, 'labels on both sides', () => this.changeFrameAttr('ticksY', 3));\n         menu.add('endsub:');\n       }\n\n      menu.addAttributesMenu(this, alone ? '' : 'Frame ');\n      menu.add('separator');\n\n      menu.add('sub:Save as');\n      ['svg', 'png', 'jpeg', 'pdf', 'webp'].forEach(fmt => menu.add(`frame.${fmt}`, () => this.getPadPainter().saveAs(fmt, 'frame', `frame.${fmt}`)));\n      menu.add('endsub:');\n\n      return true;\n   }\n\n   /** @summary Convert graphical coordinate into axis value */\n   revertAxis(axis, pnt) { return this[`${axis}_handle`]?.revertPoint(pnt) ?? 0; }\n\n   /** @summary Show axis status message\n     * @desc method called normally when mouse enter main object element\n     * @private */\n   showAxisStatus(axis_name, evnt) {\n      const hint_name = axis_name, hint_title = 'axis',\n            m = d3_pointer(evnt, this.getFrameSvg().node());\n      let id = (axis_name === 'x') ? 0 : 1;\n\n      if (this.swap_xy) id = 1 - id;\n\n      const axis_value = this.revertAxis(axis_name, m[id]);\n\n      this.showObjectStatus(hint_name, hint_title, `${axis_name} : ${this.axisAsText(axis_name, axis_value)}`, `${Math.round(m[0])},${Math.round(m[1])}`);\n   }\n\n   /** @summary Add interactive keys handlers\n    * @private */\n   addKeysHandler() {\n      if (this.isBatchMode()) return;\n      FrameInteractive.assign(this);\n      this.addFrameKeysHandler();\n   }\n\n   /** @summary Add interactive functionality to the frame\n    * @private */\n   addInteractivity(for_second_axes) {\n      if (this.isBatchMode() || (!settings.Zooming && !settings.ContextMenu))\n         return true;\n\n      FrameInteractive.assign(this);\n      if (!for_second_axes)\n         this.addBasicInteractivity();\n      return this.addFrameInteractivity(for_second_axes);\n   }\n\n   /** @summary Set selected range back to pad object - to be implemented\n     * @private */\n   setRootPadRange(/* pad, is3d */) {\n      // TODO: change of pad range and send back to root application\n   }\n\n   /** @summary Toggle log scale on the specified axes */\n   toggleAxisLog(axis) {\n      const handle = this[axis+'_handle'];\n      return handle?.changeAxisLog('toggle');\n   }\n\n} // class RFramePainter\n\nexport { RFramePainter };\n","import { gStyle, settings, constants, internals, addMethods,\n         isPromise, getPromise, postponePromise, isBatchMode, isObject, isFunc, isStr, clTPad, clTFrame, nsREX } from '../core.mjs';\nimport { ColorPalette, addColor, getRootColors } from '../base/colors.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\nimport { getElementRect, getAbsPosInCanvas, DrawOptions, compressSVG, makeTranslate, svgToImage } from '../base/BasePainter.mjs';\nimport { selectActivePad, getActivePad } from '../base/ObjectPainter.mjs';\nimport { registerForResize, saveFile } from '../gui/utils.mjs';\nimport { BrowserLayout } from '../gui/display.mjs';\nimport { createMenu, closeMenu } from '../gui/menu.mjs';\nimport { PadButtonsHandler } from './TPadPainter.mjs';\n\n\n/**\n * @summary Painter class for RPad\n *\n * @private\n */\n\nclass RPadPainter extends RObjectPainter {\n\n   /** @summary constructor */\n   constructor(dom, pad, iscan) {\n      super(dom, pad, '', 'pad');\n      this.pad = pad;\n      this.iscan = iscan; // indicate if working with canvas\n      this.this_pad_name = '';\n      if (!this.iscan && (pad !== null)) {\n         if (pad.fObjectID)\n            this.this_pad_name = 'pad' + pad.fObjectID; // use objectid as padname\n         else\n            this.this_pad_name = 'ppp' + internals.id_counter++; // artificical name\n      }\n      this.painters = []; // complete list of all painters in the pad\n      this.has_canvas = true;\n      this.forEachPainter = this.forEachPainterInPad;\n\n      const d = this.selectDom();\n      if (!d.empty() && d.property('_batch_mode'))\n         this.batch_mode = true;\n   }\n\n   /** @summary Indicates that drawing runs in batch mode\n     * @private */\n   isBatchMode() {\n      if (this.batch_mode !== undefined)\n         return this.batch_mode;\n\n      if (isBatchMode())\n         return true;\n\n      if (!this.iscan && this.has_canvas)\n         return this.getCanvPainter()?.isBatchMode();\n\n      return false;\n   }\n\n   /** @summary Indicates that is not Root6 pad painter\n    * @private */\n   isRoot6() { return false; }\n\n   /** @summary Returns true if pad is editable */\n   isEditable() {\n      return true;\n   }\n\n  /** @summary Returns SVG element for the pad itself\n    * @private */\n   svg_this_pad() {\n      return this.getPadSvg(this.this_pad_name);\n   }\n\n   /** @summary Returns main painter on the pad\n     * @desc Typically main painter is TH1/TH2 object which is drawing axes\n    * @private */\n   getMainPainter() {\n      return this.main_painter_ref || null;\n   }\n\n   /** @summary Assign main painter on the pad\n    * @private */\n   setMainPainter(painter, force) {\n      if (!this.main_painter_ref || force)\n         this.main_painter_ref = painter;\n   }\n\n   /** @summary cleanup pad and all primitives inside */\n   cleanup() {\n      if (this._doing_draw)\n         console.error('pad drawing is not completed when cleanup is called');\n\n      this.painters.forEach(p => p.cleanup());\n\n      const svg_p = this.svg_this_pad();\n      if (!svg_p.empty()) {\n         svg_p.property('pad_painter', null);\n         if (!this.iscan) svg_p.remove();\n      }\n\n      delete this.main_painter_ref;\n      delete this.frame_painter_ref;\n      delete this.pads_cache;\n      delete this._pad_x;\n      delete this._pad_y;\n      delete this._pad_width;\n      delete this._pad_height;\n      delete this._doing_draw;\n      delete this._dfltRFont;\n\n      this.painters = [];\n      this.pad = null;\n      this.draw_object = null;\n      this.pad_frame = null;\n      this.this_pad_name = undefined;\n      this.has_canvas = false;\n\n      selectActivePad({ pp: this, active: false });\n\n      super.cleanup();\n   }\n\n   /** @summary Returns frame painter inside the pad\n    * @private */\n   getFramePainter() { return this.frame_painter_ref; }\n\n   /** @summary get pad width */\n   getPadWidth() { return this._pad_width || 0; }\n\n   /** @summary get pad height */\n   getPadHeight() { return this._pad_height || 0; }\n\n   /** @summary return pad log state x or y are allowed */\n   getPadLog(name) { return false; }\n\n   /** @summary get pad rect */\n   getPadRect() {\n      return {\n         x: this._pad_x || 0,\n         y: this._pad_y || 0,\n         width: this.getPadWidth(),\n         height: this.getPadHeight()\n      };\n   }\n\n   /** @summary Returns frame coordiantes - also when frame is not drawn */\n   getFrameRect() {\n      const fp = this.getFramePainter();\n      if (fp) return fp.getFrameRect();\n\n      const w = this.getPadWidth(),\n            h = this.getPadHeight(),\n            rect = {};\n\n      rect.szx = Math.round(0.5*w);\n      rect.szy = Math.round(0.5*h);\n      rect.width = 2*rect.szx;\n      rect.height = 2*rect.szy;\n      rect.x = Math.round(w/2 - rect.szx);\n      rect.y = Math.round(h/2 - rect.szy);\n      rect.hint_delta_x = rect.szx;\n      rect.hint_delta_y = rect.szy;\n      rect.transform = makeTranslate(rect.x, rect.y) || '';\n      return rect;\n   }\n\n   /** @summary return RPad object */\n   getRootPad(is_root6) {\n      return (is_root6 === undefined) || !is_root6 ? this.pad : null;\n   }\n\n   /** @summary Cleanup primitives from pad - selector lets define which painters to remove\n    * @private */\n   cleanPrimitives(selector) {\n      if (!isFunc(selector)) return;\n\n      for (let k = this.painters.length-1; k >= 0; --k) {\n         if (selector(this.painters[k])) {\n            this.painters[k].cleanup();\n            this.painters.splice(k, 1);\n         }\n      }\n   }\n\n   /** @summary Removes and cleanup specified primitive\n     * @desc also secondary primitives will be removed\n     * @return new index to continue loop or -111 if main painter removed\n     * @private */\n   removePrimitive(indx) {\n      const prim = this.painters[indx], arr = [];\n      let resindx = indx;\n      for (let k = this.painters.length-1; k >= 0; --k) {\n         if ((k === indx) || this.painters[k].isSecondary(prim)) {\n            arr.push(this.painters[k]);\n            this.painters.splice(k, 1);\n            if (k <= indx) resindx--;\n         }\n      }\n\n      arr.forEach(painter => {\n         painter.cleanup();\n         if (this.main_painter_ref === painter) {\n            delete this.main_painter_ref;\n            resindx = -111;\n         }\n      });\n\n      return resindx;\n   }\n\n   /** @summary try to find object by name in list of pad primitives\n     * @desc used to find title drawing\n     * @private */\n   findInPrimitives(objname, objtype) {\n      console.warn('findInPrimitives not implemented for RPad');\n      return null;\n   }\n\n   /** @summary Try to find painter for specified object\n     * @desc can be used to find painter for some special objects, registered as\n     * histogram functions\n     * @private */\n   findPainterFor(selobj, selname, seltype) {\n      return this.painters.find(p => {\n         const pobj = p.getObject();\n         if (!pobj) return false;\n\n         if (selobj && (pobj === selobj)) return true;\n         if (!selname && !seltype) return false;\n         if (selname && (pobj.fName !== selname)) return false;\n         if (seltype && (pobj._typename !== seltype)) return false;\n         return true;\n      });\n   }\n\n   /** @summary Returns palette associated with pad.\n     * @desc Either from existing palette painter or just default palette */\n   getHistPalette() {\n      const pp = this.findPainterFor(undefined, undefined, `${nsREX}RPaletteDrawable`);\n\n      if (pp) return pp.getHistPalette();\n\n      if (!this.fDfltPalette) {\n         this.fDfltPalette = {\n            _typename: `${nsREX}RPalette`,\n            fColors: [{ fOrdinal: 0, fColor: { fColor: 'rgb(53, 42, 135)' } },\n                      { fOrdinal: 0.125, fColor: { fColor: 'rgb(15, 92, 221)' } },\n                      { fOrdinal: 0.25, fColor: { fColor: 'rgb(20, 129, 214)' } },\n                      { fOrdinal: 0.375, fColor: { fColor: 'rgb(6, 164, 202)' } },\n                      { fOrdinal: 0.5, fColor: { fColor: 'rgb(46, 183, 164)' } },\n                      { fOrdinal: 0.625, fColor: { fColor: 'rgb(135, 191, 119)' } },\n                      { fOrdinal: 0.75, fColor: { fColor: 'rgb(209, 187, 89)' } },\n                      { fOrdinal: 0.875, fColor: { fColor: 'rgb(254, 200, 50)' } },\n                      { fOrdinal: 1, fColor: { fColor: 'rgb(249, 251, 14)' } }],\n             fInterpolate: true,\n             fNormalized: true\n         };\n         addMethods(this.fDfltPalette, `${nsREX}RPalette`);\n      }\n\n      return this.fDfltPalette;\n   }\n\n   /** @summary Returns number of painters\n     * @private */\n   getNumPainters() { return this.painters.length; }\n\n   /** @summary Call function for each painter in pad\n     * @param {function} userfunc - function to call\n     * @param {string} kind - 'all' for all objects (default), 'pads' only pads and subpads, 'objects' only for object in current pad\n     * @private */\n   forEachPainterInPad(userfunc, kind) {\n      if (!kind) kind = 'all';\n      if (kind !== 'objects') userfunc(this);\n      for (let k = 0; k < this.painters.length; ++k) {\n         const sub = this.painters[k];\n         if (isFunc(sub.forEachPainterInPad)) {\n            if (kind !== 'objects') sub.forEachPainterInPad(userfunc, kind);\n         } else if (kind !== 'pads') userfunc(sub);\n      }\n   }\n\n   /** @summary register for pad events receiver\n     * @desc in pad painter, while pad may be drawn without canvas\n     * @private */\n   registerForPadEvents(receiver) {\n      this.pad_events_receiver = receiver;\n   }\n\n   /** @summary Generate pad events, normally handled by GED\n     * @desc in pad painter, while pad may be drawn without canvas\n     * @private */\n   producePadEvent(what, padpainter, painter, position, place) {\n      if ((what === 'select') && isFunc(this.selectActivePad))\n         this.selectActivePad(padpainter, painter, position);\n\n      if (this.pad_events_receiver)\n         this.pad_events_receiver({ what, padpainter, painter, position, place });\n   }\n\n   /** @summary method redirect call to pad events receiver */\n   selectObjectPainter(painter, pos, place) {\n      const istoppad = (this.iscan || !this.has_canvas),\n          canp = istoppad ? this : this.getCanvPainter();\n\n      if (painter === undefined) painter = this;\n\n      if (pos && !istoppad)\n         pos = getAbsPosInCanvas(this.svg_this_pad(), pos);\n\n      selectActivePad({ pp: this, active: true });\n\n      canp.producePadEvent('select', this, painter, pos, place);\n   }\n\n   /** @summary Set fast drawing property depending on the size\n     * @private */\n   setFastDrawing(w, h) {\n      const was_fast = this._fast_drawing;\n      this._fast_drawing = settings.SmallPad && ((w < settings.SmallPad.width) || (h < settings.SmallPad.height));\n      if (was_fast !== this._fast_drawing)\n         this.showPadButtons();\n   }\n\n   /** @summary Returns true if canvas configured with grayscale\n     * @private */\n   isGrayscale() {\n      return false;\n   }\n\n   /** @summary Set grayscale mode for the canvas\n     * @private */\n   setGrayscale(/* flag */) {\n      console.error('grayscale mode not implemented for RCanvas');\n   }\n\n   /** @summary Create SVG element for the canvas */\n   createCanvasSvg(check_resize, new_size) {\n      const lmt = 5;\n      let factor = null, svg = null, rect = null, btns, frect;\n\n      if (check_resize > 0) {\n         if (this._fixed_size)\n            return check_resize > 1; // flag used to force re-drawing of all subpads\n\n         svg = this.getCanvSvg();\n         if (svg.empty())\n            return false;\n\n         factor = svg.property('height_factor');\n\n         rect = this.testMainResize(check_resize, null, factor);\n\n         if (!rect.changed && (check_resize === 1))\n            return false;\n\n         if (!this.isBatchMode())\n            btns = this.getLayerSvg('btns_layer', this.this_pad_name);\n\n         frect = svg.selectChild('.canvas_fillrect');\n      } else {\n         const render_to = this.selectDom();\n\n         if (render_to.style('position') === 'static')\n            render_to.style('position', 'relative');\n\n         svg = render_to.append('svg')\n             .attr('class', 'jsroot root_canvas')\n             .property('pad_painter', this) // this is custom property\n             .property('current_pad', '') // this is custom property\n             .property('redraw_by_resize', false); // could be enabled to force redraw by each resize\n\n         this.setTopPainter(); // assign canvas as top painter of that element\n\n         if (!this.isBatchMode() && !this.online_canvas)\n            svg.append('svg:title').text('ROOT canvas');\n\n         frect = svg.append('svg:path').attr('class', 'canvas_fillrect');\n         if (!this.isBatchMode()) {\n            frect.style('pointer-events', 'visibleFill')\n                 .on('dblclick', evnt => this.enlargePad(evnt, true))\n                 .on('click', () => this.selectObjectPainter(this, null))\n                 .on('mouseenter', () => this.showObjectStatus())\n                 .on('contextmenu', settings.ContextMenu ? evnt => this.padContextMenu(evnt) : null);\n         }\n\n         svg.append('svg:g').attr('class', 'primitives_layer');\n         svg.append('svg:g').attr('class', 'info_layer');\n         if (!this.isBatchMode()) {\n            btns = svg.append('svg:g')\n                      .attr('class', 'btns_layer')\n                      .property('leftside', settings.ToolBarSide === 'left')\n                      .property('vertical', settings.ToolBarVert);\n         }\n\n         factor = 0.66;\n         if (this.pad && this.pad.fWinSize[0] && this.pad.fWinSize[1]) {\n            factor = this.pad.fWinSize[1] / this.pad.fWinSize[0];\n            if ((factor < 0.1) || (factor > 10)) factor = 0.66;\n         }\n\n         if (this._fixed_size) {\n            render_to.style('overflow', 'auto');\n            rect = { width: this.pad.fWinSize[0], height: this.pad.fWinSize[1] };\n            if (!rect.width || !rect.height)\n               rect = getElementRect(render_to);\n         } else\n            rect = this.testMainResize(2, new_size, factor);\n      }\n\n      this.createAttFill({ pattern: 1001, color: 0 });\n\n      if ((rect.width <= lmt) || (rect.height <= lmt)) {\n         svg.style('display', 'none');\n         console.warn(`Hide canvas while geometry too small w=${rect.width} h=${rect.height}`);\n         rect.width = 200; rect.height = 100; // just to complete drawing\n      } else\n         svg.style('display', null);\n\n      if (this._fixed_size) {\n         svg.attr('x', 0)\n            .attr('y', 0)\n            .attr('width', rect.width)\n            .attr('height', rect.height)\n            .style('position', 'absolute');\n      } else {\n        svg.attr('x', 0)\n           .attr('y', 0)\n           .style('width', '100%')\n           .style('height', '100%')\n           .style('position', 'absolute')\n           .style('left', 0).style('top', 0).style('bottom', 0).style('right', 0);\n      }\n\n      svg.style('filter', settings.DarkMode ? 'invert(100%)' : null);\n\n      svg.attr('viewBox', `0 0 ${rect.width} ${rect.height}`)\n         .attr('preserveAspectRatio', 'none')  // we do not preserve relative ratio\n         .property('height_factor', factor)\n         .property('draw_x', 0)\n         .property('draw_y', 0)\n         .property('draw_width', rect.width)\n         .property('draw_height', rect.height);\n\n      this._pad_x = 0;\n      this._pad_y = 0;\n      this._pad_width = rect.width;\n      this._pad_height = rect.height;\n\n      frect.attr('d', `M0,0H${rect.width}V${rect.height}H0Z`)\n           .call(this.fillatt.func);\n\n      this.setFastDrawing(rect.width, rect.height);\n\n      if (this.alignButtons && btns)\n         this.alignButtons(btns, rect.width, rect.height);\n\n      return true;\n   }\n\n   /** @summary Draw item name on canvas, dummy for RPad\n     * @private */\n   drawItemNameOnCanvas() {\n   }\n\n   /** @summary Enlarge pad draw element when possible */\n   enlargePad(evnt, is_dblclick, is_escape) {\n      evnt?.preventDefault();\n      evnt?.stopPropagation();\n\n      // ignore double click on canvas itself for enlarge\n      if (is_dblclick && this._websocket && (this.enlargeMain('state') === 'off'))\n         return;\n\n      const svg_can = this.getCanvSvg(),\n            pad_enlarged = svg_can.property('pad_enlarged');\n\n      if (this.iscan || !this.has_canvas || (!pad_enlarged && !this.hasObjectsToDraw() && !this.painters)) {\n         if (this._fixed_size) return; // canvas cannot be enlarged in such mode\n         if (!this.enlargeMain(is_escape ? false : 'toggle')) return;\n         if (this.enlargeMain('state') === 'off')\n            svg_can.property('pad_enlarged', null);\n         else\n            selectActivePad({ pp: this, active: true });\n      } else if (!pad_enlarged && !is_escape) {\n         this.enlargeMain(true, true);\n         svg_can.property('pad_enlarged', this.pad);\n         selectActivePad({ pp: this, active: true });\n      } else if (pad_enlarged === this.pad) {\n         this.enlargeMain(false);\n         svg_can.property('pad_enlarged', null);\n      } else if (!is_escape && is_dblclick)\n         console.error('missmatch with pad double click events');\n\n      return this.checkResize(true);\n   }\n\n   /** @summary Create SVG element for the pad\n     * @return true when pad is displayed and all its items should be redrawn */\n   createPadSvg(only_resize) {\n      if (!this.has_canvas) {\n         this.createCanvasSvg(only_resize ? 2 : 0);\n         return true;\n      }\n\n      const svg_parent = this.getPadSvg(this.pad_name), // this.pad_name MUST be here to select parent pad\n            svg_can = this.getCanvSvg(),\n            width = svg_parent.property('draw_width'),\n            height = svg_parent.property('draw_height'),\n            pad_enlarged = svg_can.property('pad_enlarged');\n      let pad_visible = true,\n          w = width, h = height, x = 0, y = 0,\n          svg_pad = null, svg_rect = null, btns = null;\n\n      if (this.pad?.fPos && this.pad?.fSize) {\n         x = Math.round(width * this.pad.fPos.fHoriz.fArr[0]);\n         y = Math.round(height * this.pad.fPos.fVert.fArr[0]);\n         w = Math.round(width * this.pad.fSize.fHoriz.fArr[0]);\n         h = Math.round(height * this.pad.fSize.fVert.fArr[0]);\n      }\n\n      if (pad_enlarged) {\n         pad_visible = false;\n         if (pad_enlarged === this.pad)\n            pad_visible = true;\n         else\n            this.forEachPainterInPad(pp => { if (pp.getObject() === pad_enlarged) pad_visible = true; }, 'pads');\n\n         if (pad_visible) { w = width; h = height; x = y = 0; }\n      }\n\n      if (only_resize) {\n         svg_pad = this.svg_this_pad();\n         svg_rect = svg_pad.selectChild('.root_pad_border');\n         if (!this.isBatchMode())\n            btns = this.getLayerSvg('btns_layer', this.this_pad_name);\n         this.addPadInteractive(true);\n      } else {\n         svg_pad = svg_parent.selectChild('.primitives_layer')\n             .append('svg:svg') // here was g before, svg used to blend all drawin outside\n             .classed('__root_pad_' + this.this_pad_name, true)\n             .attr('pad', this.this_pad_name) // set extra attribute  to mark pad name\n             .property('pad_painter', this); // this is custom property\n\n         if (!this.isBatchMode())\n            svg_pad.append('svg:title').text('ROOT subpad');\n\n         svg_rect = svg_pad.append('svg:path').attr('class', 'root_pad_border');\n\n         svg_pad.append('svg:g').attr('class', 'primitives_layer');\n         if (!this.isBatchMode()) {\n            btns = svg_pad.append('svg:g')\n                          .attr('class', 'btns_layer')\n                          .property('leftside', settings.ToolBarSide !== 'left')\n                          .property('vertical', settings.ToolBarVert);\n         }\n\n         if (settings.ContextMenu)\n            svg_rect.on('contextmenu', evnt => this.padContextMenu(evnt));\n\n         if (!this.isBatchMode()) {\n            svg_rect.style('pointer-events', 'visibleFill') // get events also for not visible rect\n                    .on('dblclick', evnt => this.enlargePad(evnt, true))\n                    .on('click', () => this.selectObjectPainter(this, null))\n                    .on('mouseenter', () => this.showObjectStatus());\n         }\n      }\n\n      this.createAttFill({ attr: this.pad });\n\n      this.createAttLine({ attr: this.pad, color0: this.pad.fBorderMode === 0 ? 'none' : '' });\n\n      svg_pad.style('display', pad_visible ? null : 'none')\n             .attr('viewBox', `0 0 ${w} ${h}`) // due to svg\n             .attr('preserveAspectRatio', 'none')   // due to svg, we do not preserve relative ratio\n             .attr('x', x)    // due to svg\n             .attr('y', y)   // due to svg\n             .attr('width', w)    // due to svg\n             .attr('height', h)   // due to svg\n             .property('draw_x', x) // this is to make similar with canvas\n             .property('draw_y', y)\n             .property('draw_width', w)\n             .property('draw_height', h);\n\n      this._pad_x = x;\n      this._pad_y = y;\n      this._pad_width = w;\n      this._pad_height = h;\n\n      svg_rect.attr('d', `M0,0H${w}V${h}H0Z`)\n              .call(this.fillatt.func)\n              .call(this.lineatt.func);\n\n      this.setFastDrawing(w, h);\n\n      // special case of 3D canvas overlay\n      if (svg_pad.property('can3d') === constants.Embed3D.Overlay) {\n         this.selectDom().select('.draw3d_' + this.this_pad_name)\n             .style('display', pad_visible ? '' : 'none');\n      }\n\n      if (this.alignButtons && btns) this.alignButtons(btns, w, h);\n\n      return pad_visible;\n   }\n\n   /** @summary Add pad interactive features like dragging and resize\n    * @private */\n   addPadInteractive(cleanup = false) {\n      if (isFunc(this.$userInteractive)) {\n         this.$userInteractive();\n         delete this.$userInteractive;\n      }\n      // if (this.isBatchMode())\n      //   return;\n   }\n\n   /** @summary returns true if any objects beside sub-pads exists in the pad */\n   hasObjectsToDraw() {\n      return this.pad?.fPrimitives?.find(obj => obj._typename !== `${nsREX}RPadDisplayItem`);\n   }\n\n   /** @summary sync drawing/redrawing/resize of the pad\n     * @param {string} kind - kind of draw operation, if true - always queued\n     * @return {Promise} when pad is ready for draw operation or false if operation already queued\n     * @private */\n   syncDraw(kind) {\n      const entry = { kind: kind || 'redraw' };\n      if (this._doing_draw === undefined) {\n         this._doing_draw = [entry];\n         return Promise.resolve(true);\n      }\n      // if queued operation registered, ignore next calls, indx === 0 is running operation\n      if ((entry.kind !== true) && (this._doing_draw.findIndex((e, i) => (i > 0) && (e.kind === entry.kind)) > 0))\n         return false;\n      this._doing_draw.push(entry);\n      return new Promise(resolveFunc => {\n         entry.func = resolveFunc;\n      });\n   }\n\n   /** @summary confirms that drawing is completed, may trigger next drawing immediately\n     * @private */\n   confirmDraw() {\n      if (this._doing_draw === undefined)\n         return console.warn('failure, should not happen');\n      this._doing_draw.shift();\n      if (this._doing_draw.length === 0)\n         delete this._doing_draw;\n      else {\n         const entry = this._doing_draw[0];\n         if (entry.func) { entry.func(); delete entry.func; }\n      }\n   }\n\n   /** @summary Draw single primitive */\n   async drawObject(/* dom, obj, opt */) {\n      console.log('Not possible to draw object without loading of draw.mjs');\n      return null;\n   }\n\n   /** @summary Draw pad primitives\n     * @private */\n   async drawPrimitives(indx) {\n      if (indx === undefined) {\n         if (this.iscan)\n            this._start_tm = new Date().getTime();\n\n         // set number of primitves\n         this._num_primitives = this.pad?.fPrimitives?.length ?? 0;\n\n         return this.syncDraw(true).then(() => this.drawPrimitives(0));\n      }\n\n      if (!this.pad || (indx >= this._num_primitives)) {\n         this.confirmDraw();\n\n         if (this._start_tm) {\n            const spenttm = new Date().getTime() - this._start_tm;\n            if (spenttm > 3000) console.log(`Canvas drawing took ${(spenttm*1e-3).toFixed(2)}s`);\n            delete this._start_tm;\n         }\n\n         return;\n      }\n\n      // handle used to invoke callback only when necessary\n      return this.drawObject(this.getDom(), this.pad.fPrimitives[indx], '').then(op => {\n         // mark painter as belonging to primitives\n         if (isObject(op))\n            op._primitive = true;\n\n         return this.drawPrimitives(indx+1);\n      });\n   }\n\n   /** @summary Process tooltip event in the pad\n     * @private */\n   processPadTooltipEvent(pnt) {\n      const painters = [], hints = [];\n\n      // first count - how many processors are there\n      this.painters?.forEach(obj => {\n         if (isFunc(obj.processTooltipEvent)) painters.push(obj);\n      });\n\n      if (pnt) pnt.nproc = painters.length;\n\n      painters.forEach(obj => {\n         const hint = obj.processTooltipEvent(pnt) || { user_info: null };\n         hints.push(hint);\n         if (pnt?.painters) hint.painter = obj;\n      });\n\n      return hints;\n   }\n\n   /** @summary Changes canvas dark mode\n     * @private */\n   changeDarkMode(mode) {\n      this.getCanvSvg().style('filter', (mode ?? settings.DarkMode) ? 'invert(100%)' : null);\n   }\n\n   /** @summary Fill pad context menu\n     * @private */\n   fillContextMenu(menu) {\n      if (this.iscan)\n         menu.add('header: RCanvas');\n      else\n         menu.add('header: RPad');\n\n      menu.addchk(this.isTooltipAllowed(), 'Show tooltips', () => this.setTooltipAllowed('toggle'));\n\n      if (!this._websocket) {\n         menu.addAttributesMenu(this);\n         if (this.iscan) {\n            menu.addSettingsMenu(false, false, arg => {\n               if (arg === 'dark') this.changeDarkMode();\n            });\n         }\n      }\n\n      menu.add('separator');\n\n      if (isFunc(this.hasMenuBar) && isFunc(this.actiavteMenuBar))\n         menu.addchk(this.hasMenuBar(), 'Menu bar', flag => this.actiavteMenuBar(flag));\n\n      if (isFunc(this.hasEventStatus) && isFunc(this.activateStatusBar) && isFunc(this.canStatusBar)) {\n         if (this.canStatusBar())\n            menu.addchk(this.hasEventStatus(), 'Event status', () => this.activateStatusBar('toggle'));\n      }\n\n      if (this.enlargeMain() || (this.has_canvas && this.hasObjectsToDraw()))\n         menu.addchk((this.enlargeMain('state') === 'on'), 'Enlarge ' + (this.iscan ? 'canvas' : 'pad'), () => this.enlargePad());\n\n      const fname = this.this_pad_name || (this.iscan ? 'canvas' : 'pad');\n      menu.add('sub:Save as');\n      ['svg', 'png', 'jpeg', 'pdf', 'webp'].forEach(fmt => menu.add(`${fname}.${fmt}`, () => this.saveAs(fmt, this.iscan, `${fname}.${fmt}`)));\n      menu.add('endsub:');\n\n      return true;\n   }\n\n   /** @summary Show pad context menu\n     * @private */\n   padContextMenu(evnt) {\n      if (evnt.stopPropagation) {\n         // this is normal event processing and not emulated jsroot event\n\n         evnt.stopPropagation(); // disable main context menu\n         evnt.preventDefault();  // disable browser context menu\n\n         this.getFramePainter()?.setLastEventPos();\n      }\n\n      createMenu(evnt, this).then(menu => {\n         this.fillContextMenu(menu);\n         return this.fillObjectExecMenu(menu);\n      }).then(menu => menu.show());\n   }\n\n   /** @summary Redraw pad means redraw ourself\n     * @return {Promise} when redrawing ready */\n   async redrawPad(reason) {\n      const sync_promise = this.syncDraw(reason);\n      if (sync_promise === false) {\n         console.log('Prevent RPad redrawing');\n         return false;\n      }\n\n      let showsubitems = true;\n      const redrawNext = indx => {\n         while (indx < this.painters.length) {\n            const sub = this.painters[indx++];\n            let res = 0;\n            if (showsubitems || sub.this_pad_name)\n               res = sub.redraw(reason);\n\n            if (isPromise(res))\n               return res.then(() => redrawNext(indx));\n         }\n         return true;\n      };\n\n      return sync_promise.then(() => {\n         if (this.iscan)\n            this.createCanvasSvg(2);\n          else\n            showsubitems = this.createPadSvg(true);\n\n         return redrawNext(0);\n      }).then(() => {\n         this.addPadInteractive();\n         if (getActivePad() === this)\n            this.getCanvPainter()?.producePadEvent('padredraw', this);\n         this.confirmDraw();\n         return true;\n      });\n   }\n\n   /** @summary redraw pad */\n   redraw(reason) {\n      return this.redrawPad(reason);\n   }\n\n\n   /** @summary Checks if pad should be redrawn by resize\n     * @private */\n   needRedrawByResize() {\n      const elem = this.svg_this_pad();\n      if (!elem.empty() && elem.property('can3d') === constants.Embed3D.Overlay) return true;\n\n      for (let i = 0; i < this.painters.length; ++i) {\n         if (isFunc(this.painters[i].needRedrawByResize))\n            if (this.painters[i].needRedrawByResize()) return true;\n      }\n\n      return false;\n   }\n\n   /** @summary Check resize of canvas */\n   checkCanvasResize(size, force) {\n      if (this._ignore_resize)\n         return false;\n\n      if (!this.iscan && this.has_canvas) return false;\n\n      const sync_promise = this.syncDraw('canvas_resize');\n      if (sync_promise === false) return false;\n\n      if ((size === true) || (size === false)) { force = size; size = null; }\n\n      if (isObject(size) && size.force) force = true;\n\n      if (!force) force = this.needRedrawByResize();\n\n      let changed = false;\n      const redrawNext = indx => {\n         if (!changed || (indx >= this.painters.length)) {\n            this.confirmDraw();\n            return changed;\n         }\n\n         return getPromise(this.painters[indx].redraw(force ? 'redraw' : 'resize')).then(() => redrawNext(indx+1));\n      };\n\n\n      return sync_promise.then(() => {\n         changed = this.createCanvasSvg(force ? 2 : 1, size);\n\n         if (changed && this.iscan && this.pad && this.online_canvas && !this.embed_canvas && !this.isBatchMode()) {\n            if (this._resize_tmout)\n               clearTimeout(this._resize_tmout);\n            this._resize_tmout = setTimeout(() => {\n               delete this._resize_tmout;\n               if (!this.pad?.fWinSize) return;\n               const cw = this.getPadWidth(), ch = this.getPadHeight();\n               if ((cw > 0) && (ch > 0) && ((this.pad.fWinSize[0] !== cw) || (this.pad.fWinSize[1] !== ch))) {\n                  this.pad.fWinSize[0] = cw;\n                  this.pad.fWinSize[1] = ch;\n                  this.sendWebsocket(`RESIZED:[${cw},${ch}]`);\n               }\n            }, 1000); // long enough delay to prevent multiple occurence\n         }\n\n         // if canvas changed, redraw all its subitems.\n         // If redrawing was forced for canvas, same applied for sub-elements\n         return redrawNext(0);\n      });\n   }\n\n   /** @summary update RPad object\n     * @private */\n   updateObject(obj) {\n      if (!obj) return false;\n\n      this.pad.fStyle = obj.fStyle;\n      this.pad.fAttr = obj.fAttr;\n\n      if (this.iscan) {\n         this.pad.fTitle = obj.fTitle;\n         this.pad.fWinSize = obj.fWinSize;\n      } else {\n         this.pad.fPos = obj.fPos;\n         this.pad.fSize = obj.fSize;\n      }\n\n      return true;\n   }\n\n\n   /** @summary Add object painter to list of primitives\n     * @private */\n   addObjectPainter(objpainter, lst, indx) {\n      if (objpainter && lst && lst[indx] && (objpainter.snapid === undefined)) {\n         // keep snap id in painter, will be used for the\n         if (this.painters.indexOf(objpainter) < 0)\n            this.painters.push(objpainter);\n         objpainter.assignSnapId(lst[indx].fObjectID);\n         if (!objpainter.rstyle) objpainter.rstyle = lst[indx].fStyle || this.rstyle;\n      }\n   }\n\n   /** @summary Extract properties from TObjectDisplayItem */\n   extractTObjectProp(snap) {\n      if (snap.fColIndex && snap.fColValue) {\n         const colors = this.root_colors || getRootColors();\n         for (let k = 0; k < snap.fColIndex.length; ++k)\n            colors[snap.fColIndex[k]] = snap.fColValue[k];\n       }\n\n      // painter used only for evaluation of attributes\n      const pattr = new RObjectPainter(), obj = snap.fObject;\n      pattr.assignObject(snap);\n      pattr.csstype = snap.fCssType;\n      pattr.rstyle = snap.fStyle;\n\n      snap.fOption = pattr.v7EvalAttr('options', '');\n\n      const extract_color = (member_name, attr_name) => {\n         const col = pattr.v7EvalColor(attr_name, '');\n         if (col) obj[member_name] = addColor(col, this.root_colors);\n      };\n\n      // handle TAttLine\n      if ((obj.fLineColor !== undefined) && (obj.fLineWidth !== undefined) && (obj.fLineStyle !== undefined)) {\n         extract_color('fLineColor', 'line_color');\n         obj.fLineWidth = pattr.v7EvalAttr('line_width', obj.fLineWidth);\n         obj.fLineStyle = pattr.v7EvalAttr('line_style', obj.fLineStyle);\n      }\n\n      // handle TAttFill\n      if ((obj.fFillColor !== undefined) && (obj.fFillStyle !== undefined)) {\n         extract_color('fFillColor', 'fill_color');\n         obj.fFillStyle = pattr.v7EvalAttr('fill_style', obj.fFillStyle);\n      }\n\n      // handle TAttMarker\n      if ((obj.fMarkerColor !== undefined) && (obj.fMarkerStyle !== undefined) && (obj.fMarkerSize !== undefined)) {\n         extract_color('fMarkerColor', 'marker_color');\n         obj.fMarkerStyle = pattr.v7EvalAttr('marker_style', obj.fMarkerStyle);\n         obj.fMarkerSize = pattr.v7EvalAttr('marker_size', obj.fMarkerSize);\n      }\n\n      // handle TAttText\n      if ((obj.fTextColor !== undefined) && (obj.fTextAlign !== undefined) && (obj.fTextAngle !== undefined) && (obj.fTextSize !== undefined)) {\n         extract_color('fTextColor', 'text_color');\n         obj.fTextAlign = pattr.v7EvalAttr('text_align', obj.fTextAlign);\n         obj.fTextAngle = pattr.v7EvalAttr('text_angle', obj.fTextAngle);\n         obj.fTextSize = pattr.v7EvalAttr('text_size', obj.fTextSize);\n         // TODO: v7 font handling differs much from v6, ignore for the moment\n      }\n   }\n\n   /** @summary Function called when drawing next snapshot from the list\n     * @return {Promise} with pad painter when ready\n     * @private */\n   async drawNextSnap(lst, indx) {\n      if (indx === undefined) {\n         indx = -1;\n         // flag used to prevent immediate pad redraw during first draw\n         this._snaps_map = {}; // to control how much snaps are drawn\n         this._num_primitives = lst ? lst.length : 0;\n         this._auto_color_cnt = 0;\n      }\n\n      delete this.next_rstyle;\n\n      ++indx; // change to the next snap\n\n      if (!lst || indx >= lst.length) {\n         delete this._snaps_map;\n         delete this._auto_color_cnt;\n         return this;\n      }\n\n      const snap = lst[indx],\n            snapid = snap.fObjectID;\n      let cnt = this._snaps_map[snapid],\n          objpainter = null;\n\n      if (cnt) cnt++; else cnt=1;\n      this._snaps_map[snapid] = cnt; // check how many objects with same snapid drawn, use them again\n\n      // empty object, no need to do something, take next\n      if (snap.fDummy) return this.drawNextSnap(lst, indx);\n\n      // first appropriate painter for the object\n      // if same object drawn twice, two painters will exists\n      for (let k = 0; k < this.painters.length; ++k) {\n         if (this.painters[k].snapid === snapid)\n            if (--cnt === 0) { objpainter = this.painters[k]; break; }\n      }\n\n      if (objpainter) {\n         if (snap._typename === `${nsREX}RPadDisplayItem`) {\n            // subpad\n            return objpainter.redrawPadSnap(snap).then(ppainter => {\n               this.addObjectPainter(ppainter, lst, indx);\n               return this.drawNextSnap(lst, indx);\n            });\n         }\n\n         if (snap._typename === `${nsREX}TObjectDisplayItem`)\n            this.extractTObjectProp(snap);\n\n         let promise;\n\n         if (objpainter.updateObject(snap.fDrawable || snap.fObject || snap, snap.fOption || '', true))\n            promise = objpainter.redraw();\n\n         return getPromise(promise).then(() => this.drawNextSnap(lst, indx)); // call next\n      }\n\n      if (snap._typename === `${nsREX}RPadDisplayItem`) { // subpad\n         const subpad = snap, // not subpad, but just attributes\n\n          padpainter = new RPadPainter(this.getDom(), subpad, false);\n         padpainter.decodeOptions('');\n         padpainter.addToPadPrimitives(this.this_pad_name); // only set parent pad name\n         padpainter.assignSnapId(snap.fObjectID);\n         padpainter.rstyle = snap.fStyle;\n\n         padpainter.createPadSvg();\n\n         if (snap.fPrimitives && snap.fPrimitives.length > 0)\n            padpainter.addPadButtons();\n\n         // we select current pad, where all drawing is performed\n         const prev_name = padpainter.selectCurrentPad(padpainter.this_pad_name);\n\n         return padpainter.drawNextSnap(snap.fPrimitives).then(() => {\n            padpainter.addPadInteractive();\n            padpainter.selectCurrentPad(prev_name);\n            return this.drawNextSnap(lst, indx);\n         });\n      }\n\n      // will be used in addToPadPrimitives to assign style to sub-painters\n      this.next_rstyle = lst[indx].fStyle || this.rstyle;\n\n      if (snap._typename === `${nsREX}TObjectDisplayItem`) {\n         // identifier used in RObjectDrawable\n         const webSnapIds = { kNone: 0, kObject: 1, kColors: 4, kStyle: 5, kPalette: 6 };\n\n         if (snap.fKind === webSnapIds.kStyle) {\n            Object.assign(gStyle, snap.fObject);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (snap.fKind === webSnapIds.kColors) {\n            const ListOfColors = [], arr = snap.fObject.arr;\n            for (let n = 0; n < arr.length; ++n) {\n               const name = arr[n].fString, p = name.indexOf('=');\n               if (p > 0)\n                  ListOfColors[parseInt(name.slice(0, p))] = name.slice(p+1);\n            }\n\n            this.root_colors = ListOfColors;\n            // set global list of colors\n            // adoptRootColors(ListOfColors);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (snap.fKind === webSnapIds.kPalette) {\n            const arr = snap.fObject.arr, palette = [];\n            for (let n = 0; n < arr.length; ++n)\n               palette[n] = arr[n].fString;\n            this.custom_palette = new ColorPalette(palette);\n            return this.drawNextSnap(lst, indx);\n         }\n\n         if (!this.getFramePainter()) {\n            return this.drawObject(this.getDom(), { _typename: clTFrame, $dummy: true }, '')\n                       .then(() => this.drawNextSnap(lst, indx-1));\n         } // call same object again\n\n         this.extractTObjectProp(snap);\n      }\n\n      // TODO - fDrawable is v7, fObject from v6, maybe use same data member?\n      return this.drawObject(this.getDom(), snap.fDrawable || snap.fObject || snap, snap.fOption || '').then(objpainter => {\n         this.addObjectPainter(objpainter, lst, indx);\n         return this.drawNextSnap(lst, indx);\n      });\n   }\n\n   /** @summary Search painter with specified snapid, also sub-pads are checked\n     * @private */\n   findSnap(snapid, onlyid) {\n      function check(checkid) {\n         if (!checkid || !isStr(checkid)) return false;\n         if (checkid === snapid) return true;\n         return onlyid && (checkid.length > snapid.length) &&\n                (checkid.indexOf(snapid) === (checkid.length - snapid.length));\n      }\n\n      if (check(this.snapid)) return this;\n\n      if (!this.painters) return null;\n\n      for (let k=0; k<this.painters.length; ++k) {\n         let sub = this.painters[k];\n\n         if (!onlyid && isFunc(sub.findSnap))\n            sub = sub.findSnap(snapid);\n         else if (!check(sub.snapid))\n            sub = null;\n\n         if (sub) return sub;\n      }\n\n      return null;\n   }\n\n   /** @summary Redraw pad snap\n     * @desc Online version of drawing pad primitives\n     * @return {Promise} with pad painter */\n   async redrawPadSnap(snap) {\n      // for the pad/canvas display item contains list of primitives plus pad attributes\n\n      if (!snap || !snap.fPrimitives)\n         return this;\n\n      // for the moment only window size attributes are provided\n      // let padattr = { fCw: snap.fWinSize[0], fCh: snap.fWinSize[1], fTitle: snap.fTitle };\n\n      // if canvas size not specified in batch mode, temporary use 900x700 size\n      // if (this.isBatchMode() && this.iscan && (!padattr.fCw || !padattr.fCh)) { padattr.fCw = 900; padattr.fCh = 700; }\n\n      if (this.iscan && this._websocket && snap.fTitle && !this.embed_canvas && (typeof document !== 'undefined'))\n         document.title = snap.fTitle;\n\n      if (this.snapid === undefined) {\n         // first time getting snap, create all gui elements first\n\n         this.assignSnapId(snap.fObjectID);\n\n         this.draw_object = snap;\n         this.pad = snap;\n\n         if (this.isBatchMode() && this.iscan)\n             this._fixed_size = true;\n\n         const mainid = this.selectDom().attr('id');\n\n         if (!this.isBatchMode() && !this.use_openui && !this.brlayout && mainid && isStr(mainid)) {\n            this.brlayout = new BrowserLayout(mainid, null, this);\n            this.brlayout.create(mainid, true);\n            this.setDom(this.brlayout.drawing_divid()); // need to create canvas\n            registerForResize(this.brlayout);\n         }\n\n         this.createCanvasSvg(0);\n         this.addPadButtons(true);\n\n         return this.drawNextSnap(snap.fPrimitives);\n      }\n\n      // update only pad/canvas attributes\n      this.updateObject(snap);\n\n      // apply all changes in the object (pad or canvas)\n      if (this.iscan)\n         this.createCanvasSvg(2);\n       else\n         this.createPadSvg(true);\n\n\n      let isanyfound = false, isanyremove = false;\n\n      // find and remove painters which no longer exists in the list\n      for (let k = 0; k < this.painters.length; ++k) {\n         let sub = this.painters[k];\n         if (sub.snapid === undefined) continue; // look only for painters with snapid\n\n         snap.fPrimitives.forEach(prim => {\n            if (sub && (prim.fObjectID === sub.snapid)) {\n               sub = null; isanyfound = true;\n            }\n         });\n\n         if (sub) {\n            // remove painter which does not found in the list of snaps\n            this.painters.splice(k--, 1);\n            sub.cleanup(); // cleanup such painter\n            isanyremove = true;\n            if (this.main_painter_ref === sub)\n               delete this.main_painter_ref;\n         }\n      }\n\n      if (isanyremove)\n         delete this.pads_cache;\n\n      if (!isanyfound) {\n         let fp = this.getFramePainter();\n         // cannot preserve ROOT6 frame - it must be recreated\n         if (fp?.is_root6()) fp = null;\n         for (let k = 0; k < this.painters.length; ++k) {\n            if (fp !== this.painters[k])\n               this.painters[k].cleanup();\n         }\n         this.painters = [];\n         delete this.main_painter_ref;\n         if (fp) {\n            this.painters.push(fp);\n            fp.cleanFrameDrawings();\n            fp.redraw(); // need to create all layers again\n         }\n         if (isFunc(this.removePadButtons))\n            this.removePadButtons();\n         this.addPadButtons(true);\n      }\n\n      const prev_name = this.selectCurrentPad(this.this_pad_name);\n\n      return this.drawNextSnap(snap.fPrimitives).then(() => {\n         this.addPadInteractive();\n         this.selectCurrentPad(prev_name);\n\n         if (getActivePad() === this)\n            this.getCanvPainter()?.producePadEvent('padredraw', this);\n         return this;\n      });\n   }\n\n   /** @summary Create image for the pad\n     * @desc Used with web-based canvas to create images for server side\n     * @return {Promise} with image data, coded with btoa() function\n     * @private */\n   async createImage(format) {\n      if ((format === 'png') || (format === 'jpeg') || (format === 'svg') || (format === 'pdf')) {\n         return this.produceImage(true, format).then(res => {\n            if (!res || (format === 'svg')) return res;\n            const separ = res.indexOf('base64,');\n            return (separ > 0) ? res.slice(separ+7) : '';\n         });\n      }\n\n      return '';\n   }\n\n   /** @summary Show context menu for specified item\n     * @private */\n   itemContextMenu(name) {\n       const rrr = this.svg_this_pad().node().getBoundingClientRect(),\n           evnt = { clientX: rrr.left+10, clientY: rrr.top + 10 };\n\n       // use timeout to avoid conflict with mouse click and automatic menu close\n       if (name === 'pad')\n          return postponePromise(() => this.padContextMenu(evnt), 50);\n\n       let selp = null, selkind;\n\n       switch (name) {\n          case 'xaxis':\n          case 'yaxis':\n          case 'zaxis':\n             selp = this.getMainPainter();\n             selkind = name[0];\n             break;\n          case 'frame':\n             selp = this.getFramePainter();\n             break;\n          default: {\n             const indx = parseInt(name);\n             if (Number.isInteger(indx)) selp = this.painters[indx];\n          }\n       }\n\n       if (!isFunc(selp?.fillContextMenu)) return;\n\n       return createMenu(evnt, selp).then(menu => {\n          const offline_menu = selp.fillContextMenu(menu, selkind);\n          if (offline_menu || selp.snapid)\n             selp.fillObjectExecMenu(menu, selkind).then(() => postponePromise(() => menu.show(), 50));\n       });\n   }\n\n   /** @summary Save pad in specified format\n     * @desc Used from context menu */\n   saveAs(kind, full_canvas, filename) {\n      if (!filename)\n         filename = (this.this_pad_name || (this.iscan ? 'canvas' : 'pad')) + '.' + kind;\n\n      this.produceImage(full_canvas, kind).then(imgdata => {\n         if (!imgdata)\n            return console.error(`Fail to produce image ${filename}`);\n\n         saveFile(filename, (kind !== 'svg') ? imgdata : 'data:image/svg+xml;charset=utf-8,'+encodeURIComponent(imgdata));\n      });\n   }\n\n   /** @summary Search active pad\n     * @return {Object} pad painter for active pad */\n   findActivePad() {\n      return null;\n   }\n\n   /** @summary Prodce image for the pad\n     * @return {Promise} with created image */\n   async produceImage(full_canvas, file_format) {\n      const use_frame = (full_canvas === 'frame'),\n            elem = use_frame ? this.getFrameSvg(this.this_pad_name) : (full_canvas ? this.getCanvSvg() : this.svg_this_pad()),\n            painter = (full_canvas && !use_frame) ? this.getCanvPainter() : this,\n            items = []; // keep list of replaced elements, which should be moved back at the end\n\n      if (elem.empty())\n         return '';\n\n      if (use_frame || !full_canvas) {\n         const defs = this.getCanvSvg().selectChild('.canvas_defs');\n         if (!defs.empty()) {\n            items.push({ prnt: this.getCanvSvg(), defs });\n            elem.node().insertBefore(defs.node(), elem.node().firstChild);\n         }\n      }\n\n      if (!use_frame) {\n         // do not make transformations for the frame\n         painter.forEachPainterInPad(pp => {\n            const item = { prnt: pp.svg_this_pad() };\n            items.push(item);\n\n            // remove buttons from each subpad\n            const btns = pp.getLayerSvg('btns_layer', this.this_pad_name);\n            item.btns_node = btns.node();\n            if (item.btns_node) {\n               item.btns_prnt = item.btns_node.parentNode;\n               item.btns_next = item.btns_node.nextSibling;\n               btns.remove();\n            }\n\n            const main = pp.getFramePainter();\n            if (!isFunc(main?.render3D) || !isFunc(main?.access3dKind)) return;\n\n            const can3d = main.access3dKind();\n\n            if ((can3d !== constants.Embed3D.Overlay) && (can3d !== constants.Embed3D.Embed)) return;\n\n            const sz2 = main.getSizeFor3d(constants.Embed3D.Embed), // get size and position of DOM element as it will be embed\n                  canvas = main.renderer.domElement;\n\n            main.render3D(0); // WebGL clears buffers, therefore we should render scene and convert immediately\n\n            const dataUrl = canvas.toDataURL('image/png');\n\n            // remove 3D drawings\n            if (can3d === constants.Embed3D.Embed) {\n               item.foreign = item.prnt.select('.' + sz2.clname);\n               item.foreign.remove();\n            }\n\n            const svg_frame = main.getFrameSvg();\n            item.frame_node = svg_frame.node();\n            if (item.frame_node) {\n               item.frame_next = item.frame_node.nextSibling;\n               svg_frame.remove();\n            }\n\n            // add svg image\n            item.img = item.prnt.insert('image', '.primitives_layer')     // create image object\n                           .attr('x', sz2.x)\n                           .attr('y', sz2.y)\n                           .attr('width', canvas.width)\n                           .attr('height', canvas.height)\n                           .attr('href', dataUrl);\n         }, 'pads');\n      }\n\n      let width = elem.property('draw_width'), height = elem.property('draw_height');\n      if (use_frame) {\n         const fp = this.getFramePainter();\n         width = fp.getFrameWidth();\n         height = fp.getFrameHeight();\n      }\n\n      const arg = (file_format === 'pdf')\n         ? { node: elem.node(), width, height, reset_tranform: use_frame }\n         : compressSVG(`<svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\">${elem.node().innerHTML}</svg>`);\n\n      return svgToImage(arg, file_format).then(res => {\n         for (let k = 0; k < items.length; ++k) {\n            const item = items[k];\n\n            item.img?.remove(); // delete embed image\n\n            const prim = item.prnt.selectChild('.primitives_layer');\n\n            if (item.foreign) // reinsert foreign object\n               item.prnt.node().insertBefore(item.foreign.node(), prim.node());\n\n            if (item.frame_node) // reinsert frame as first in list of primitives\n               prim.node().insertBefore(item.frame_node, item.frame_next);\n\n            if (item.btns_node) // reinsert buttons\n               item.btns_prnt.insertBefore(item.btns_node, item.btns_next);\n\n            if (item.defs) // reinsert defs\n               item.prnt.node().insertBefore(item.defs.node(), item.prnt.node().firstChild);\n         }\n         return res;\n      });\n   }\n\n   /** @summary Process pad button click */\n   clickPadButton(funcname, evnt) {\n      if (funcname === 'CanvasSnapShot')\n         return this.saveAs('png', true);\n\n      if (funcname === 'enlargePad')\n         return this.enlargePad();\n\n      if (funcname === 'PadSnapShot')\n         return this.saveAs('png', false);\n\n      if (funcname === 'PadContextMenus') {\n         evnt?.preventDefault();\n         evnt?.stopPropagation();\n         if (closeMenu()) return;\n\n         return createMenu(evnt, this).then(menu => {\n            menu.add('header:Menus');\n\n            if (this.iscan)\n               menu.add('Canvas', 'pad', this.itemContextMenu);\n            else\n               menu.add('Pad', 'pad', this.itemContextMenu);\n\n            if (this.getFramePainter())\n               menu.add('Frame', 'frame', this.itemContextMenu);\n\n            const main = this.getMainPainter(); // here hist painter methods\n\n            if (main) {\n               menu.add('X axis', 'xaxis', this.itemContextMenu);\n               menu.add('Y axis', 'yaxis', this.itemContextMenu);\n               if (isFunc(main.getDimension) && (main.getDimension() > 1))\n                  menu.add('Z axis', 'zaxis', this.itemContextMenu);\n            }\n\n            if (this.painters?.length) {\n               menu.add('separator');\n               const shown = [];\n               this.painters.forEach((pp, indx) => {\n                  const obj = pp?.getObject();\n                  if (!obj || (shown.indexOf(obj) >= 0) || pp.isSecondary()) return;\n                  let name = isFunc(pp.getClassName) ? pp.getClassName() : (obj._typename || '');\n                  if (name) name += '::';\n                  name += isFunc(pp.getObjectName) ? pp.getObjectName() : (obj.fName || `item${indx}`);\n                  menu.add(name, indx, this.itemContextMenu);\n                  shown.push(obj);\n               });\n            }\n\n            menu.show();\n         });\n      }\n\n      // click automatically goes to all sub-pads\n      // if any painter indicates that processing completed, it returns true\n      let done = false;\n      const prs = [];\n\n      for (let i = 0; i < this.painters.length; ++i) {\n         const pp = this.painters[i];\n\n         if (isFunc(pp.clickPadButton))\n            prs.push(pp.clickPadButton(funcname, evnt));\n\n         if (!done && isFunc(pp.clickButton)) {\n            done = pp.clickButton(funcname);\n            if (isPromise(done)) prs.push(done);\n         }\n      }\n\n      return Promise.all(prs);\n   }\n\n   /** @summary Add button to the pad\n     * @private */\n   addPadButton(btn, tooltip, funcname, keyname) {\n      if (!settings.ToolBar || this.isBatchMode()) return;\n\n      if (!this._buttons) this._buttons = [];\n      // check if there are duplications\n\n      for (let k = 0; k < this._buttons.length; ++k)\n         if (this._buttons[k].funcname === funcname) return;\n\n      this._buttons.push({ btn, tooltip, funcname, keyname });\n\n      const iscan = this.iscan || !this.has_canvas;\n      if (!iscan && (funcname.indexOf('Pad') !== 0) && (funcname !== 'enlargePad')) {\n         const cp = this.getCanvPainter();\n         if (cp && (cp !== this)) cp.addPadButton(btn, tooltip, funcname);\n      }\n   }\n\n   /** @summary Add buttons for pad or canvas\n     * @private */\n   addPadButtons(is_online) {\n      this.addPadButton('camera', 'Create PNG', this.iscan ? 'CanvasSnapShot' : 'PadSnapShot', 'Ctrl PrintScreen');\n\n      if (settings.ContextMenu)\n         this.addPadButton('question', 'Access context menus', 'PadContextMenus');\n\n      const add_enlarge = !this.iscan && this.has_canvas && this.hasObjectsToDraw();\n\n      if (add_enlarge || this.enlargeMain('verify'))\n         this.addPadButton('circle', 'Enlarge canvas', 'enlargePad');\n\n      if (is_online && this.brlayout) {\n         this.addPadButton('diamand', 'Toggle Ged', 'ToggleGed');\n         this.addPadButton('three_circles', 'Toggle Status', 'ToggleStatus');\n      }\n   }\n\n   /** @summary Show pad buttons\n     * @private */\n   showPadButtons() {\n      if (!this._buttons) return;\n\n      PadButtonsHandler.assign(this);\n      this.showPadButtons();\n   }\n\n   /** @summary Calculates RPadLength value */\n   getPadLength(vertical, len, frame_painter) {\n      let rect, res;\n      const sign = vertical ? -1 : 1,\n            getV = (indx, dflt) => (indx < len.fArr.length) ? len.fArr[indx] : dflt,\n            getRect = () => {\n               if (!rect)\n                  rect = frame_painter ? frame_painter.getFrameRect() : this.getPadRect();\n               return rect;\n            };\n\n      if (frame_painter) {\n         const user = getV(2), func = vertical ? 'gry' : 'grx';\n         if ((user !== undefined) && frame_painter[func])\n            res = frame_painter[func](user);\n      }\n\n      if (res === undefined)\n         res = vertical ? getRect().height : 0;\n\n      const norm = getV(0, 0), pixel = getV(1, 0);\n\n      res += sign*pixel;\n\n      if (norm)\n         res += sign * (vertical ? getRect().height : getRect().width) * norm;\n\n      return Math.round(res);\n   }\n\n\n   /** @summary Calculates pad position for RPadPos values\n     * @param {object} pos - instance of RPadPos\n     * @param {object} frame_painter - if drawing will be performed inside frame, frame painter */\n   getCoordinate(pos, frame_painter) {\n      return {\n         x: this.getPadLength(false, pos.fHoriz, frame_painter),\n         y: this.getPadLength(true, pos.fVert, frame_painter)\n      };\n   }\n\n   /** @summary Decode pad draw options */\n   decodeOptions(opt) {\n      const pad = this.getObject();\n      if (!pad) return;\n\n      const d = new DrawOptions(opt);\n\n      if (!this.options) this.options = {};\n\n      Object.assign(this.options, { GlobalColors: true, LocalColors: false, IgnorePalette: false, RotateFrame: false, FixFrame: false });\n\n      if (d.check('NOCOLORS') || d.check('NOCOL')) this.options.GlobalColors = this.options.LocalColors = false;\n      if (d.check('LCOLORS') || d.check('LCOL')) { this.options.GlobalColors = false; this.options.LocalColors = true; }\n      if (d.check('NOPALETTE') || d.check('NOPAL')) this.options.IgnorePalette = true;\n      if (d.check('ROTATE')) this.options.RotateFrame = true;\n      if (d.check('FIXFRAME')) this.options.FixFrame = true;\n\n      if (d.check('WHITE')) pad.fFillColor = 0;\n      if (d.check('LOGX')) pad.fLogx = 1;\n      if (d.check('LOGY')) pad.fLogy = 1;\n      if (d.check('LOGZ')) pad.fLogz = 1;\n      if (d.check('LOG')) pad.fLogx = pad.fLogy = pad.fLogz = 1;\n      if (d.check('GRIDX')) pad.fGridx = 1;\n      if (d.check('GRIDY')) pad.fGridy = 1;\n      if (d.check('GRID')) pad.fGridx = pad.fGridy = 1;\n      if (d.check('TICKX')) pad.fTickx = 1;\n      if (d.check('TICKY')) pad.fTicky = 1;\n      if (d.check('TICK')) pad.fTickx = pad.fTicky = 1;\n   }\n\n   /** @summary draw RPad object */\n   static async draw(dom, pad, opt) {\n      const painter = new RPadPainter(dom, pad, false);\n      painter.decodeOptions(opt);\n\n      if (painter.getCanvSvg().empty()) {\n         painter.has_canvas = false;\n         painter.this_pad_name = '';\n         painter.setTopPainter();\n      } else\n         painter.addToPadPrimitives(painter.pad_name); // must be here due to pad painter\n\n\n      painter.createPadSvg();\n\n      if (painter.matchObjectType(clTPad) && (!painter.has_canvas || painter.hasObjectsToDraw()))\n         painter.addPadButtons();\n\n      // we select current pad, where all drawing is performed\n      const prev_name = painter.has_canvas ? painter.selectCurrentPad(painter.this_pad_name) : undefined;\n\n      selectActivePad({ pp: painter, active: false });\n\n      // flag used to prevent immediate pad redraw during first draw\n      return painter.drawPrimitives().then(() => {\n         painter.addPadInteractive();\n         painter.showPadButtons();\n         // we restore previous pad name\n         painter.selectCurrentPad(prev_name);\n         return painter;\n      });\n   }\n\n} // class RPadPainter\n\nexport { RPadPainter };\n","/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.10.1\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2023\n * @license MIT\n */\n\nconst HEX_CHARS = '0123456789abcdef'.split(''),\n      EXTRA = [-2147483648, 8388608, 32768, 128],\n      SHIFT = [24, 16, 8, 0],\n      K = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n           0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n           0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n           0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n           0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n           0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n           0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n           0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n\nclass Sha256 {\n\n  constructor(is224) {\n    this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  /** One can use only string or Uint8Array */\n  update(message) {\n    if (this.finalized)\n      return;\n\n    const notString = (typeof message !== 'string'),\n          length = message.length, blocks = this.blocks;\n\n    let code, index = 0, i;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index)\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80)\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else\n        this.start = i;\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  }\n\n  finalize() {\n    if (this.finalized)\n      return;\n    this.finalized = true;\n    const blocks = this.blocks,\n          i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed)\n        this.hash();\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  }\n\n  hash() {\n    const blocks = this.blocks;\n    let a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n        h = this.h7, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n      this.chromeBugWorkAround = true;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  }\n\n  digest() {\n    this.finalize();\n\n    const h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n          h6 = this.h6, h7 = this.h7,\n    arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224)\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    return arr;\n  }\n\n  hex() {\n    const d = this.digest();\n    let res = '';\n    for (let i = 0; i < d.length; ++i)\n       res += HEX_CHARS[(d[i] >> 4) & 0xF] + HEX_CHARS[d[i] & 0xF];\n    return res;\n  }\n\n  toString() {\n    return this.hex();\n  }\n\n} // class Sha256\n\nfunction sha256(message, as_hex) {\n  const m = new Sha256(false);\n  m.update(message);\n  return as_hex ? m.hex() : m.digest();\n}\n\nfunction sha256_2(message, arr, as_hex) {\n  const m = new Sha256(false);\n  m.update(message);\n  m.update(arr);\n  return as_hex ? m.hex() : m.digest();\n}\n\nexport { sha256, sha256_2 };\n","import { httpRequest, createHttpRequest, loadScript, decodeUrl,\n         browser, setBatchMode, isBatchMode, isObject, isFunc, isStr, btoa_func } from './core.mjs';\nimport { closeCurrentWindow, showProgress, loadOpenui5 } from './gui/utils.mjs';\nimport { sha256, sha256_2 } from './base/sha256.mjs';\n\n\n// secret session key used for hashing connections keys\n// only if set, all messages from and to server signed with HMAC hash\nlet sessionKey = '';\n\n/** @summary HMAC implementation\n * @desc see https://en.wikipedia.org/wiki/HMAC for more details\n * @private */\nfunction HMAC(key, m, o) {\n   const kbis = sha256(sessionKey + key),\n         block_size = 64,\n         opad = 0x5c, ipad = 0x36,\n         ko = [], ki = [];\n   while (kbis.length < block_size)\n      kbis.push(0);\n   for (let i = 0; i < kbis.length; ++i) {\n      const code = kbis[i];\n      ko.push(code ^ opad);\n      ki.push(code ^ ipad);\n   }\n\n   const hash = sha256_2(ki, (o === undefined) ? m : new Uint8Array(m, o));\n\n   return sha256_2(ko, hash, true);\n}\n\n/**\n * @summary Class emulating web socket with long-poll http requests\n *\n * @private\n */\n\nclass LongPollSocket {\n\n   constructor(addr, _raw, _handle, _counter) {\n      this.path = addr;\n      this.connid = null;\n      this.req = null;\n      this.raw = _raw;\n      this.handle = _handle;\n      this.counter = _counter;\n\n      this.nextRequest('', 'connect');\n   }\n\n   /** @summary Submit next request */\n   nextRequest(data, kind) {\n      let url = this.path, reqmode = 'buf', post = null;\n      if (kind === 'connect') {\n         url += this.raw ? '?raw_connect' : '?txt_connect';\n         if (this.handle) url += '&' + this.handle.getConnArgs(this.counter++);\n         console.log(`longpoll connect ${url} raw = ${this.raw}`);\n         this.connid = 'connect';\n      } else if (kind === 'close') {\n         if ((this.connid === null) || (this.connid === 'close')) return;\n         url += `?connection=${this.connid}&close`;\n         if (this.handle) url += '&' + this.handle.getConnArgs(this.counter++);\n         this.connid = 'close';\n         reqmode = 'text;sync'; // use sync mode to close connection before browser window closed\n      } else if ((this.connid === null) || (typeof this.connid !== 'number')) {\n         if (!browser.qt5) console.error('No connection');\n      } else {\n         url += '?connection=' + this.connid;\n         if (this.handle) url += '&' + this.handle.getConnArgs(this.counter++);\n         if (kind === 'dummy') url += '&dummy';\n      }\n\n      if (data) {\n         if (this.raw) {\n            // special workaround to avoid POST request, use base64 coding\n            url += '&post=' + btoa_func(data);\n         } else {\n            // send data with post request - most efficient way\n            reqmode = 'postbuf';\n            post = data;\n         }\n      }\n\n      createHttpRequest(url, reqmode, function(res) {\n         // this set to the request itself, res is response\n\n         if (this.handle.req === this)\n            this.handle.req = null; // get response for existing dummy request\n\n         if (res === null)\n            return this.handle.processRequest(null);\n\n         if (this.handle.raw) {\n            // raw mode - all kind of reply data packed into binary buffer\n            // first 4 bytes header 'txt:' or 'bin:'\n            // after the 'bin:' there is length of optional text argument like 'bin:14  :optional_text'\n            // and immedaitely after text binary data. Server sends binary data so, that offset should be multiple of 8\n\n            const u8Arr = new Uint8Array(res);\n            let str = '', i = 0, offset = u8Arr.length;\n            if (offset < 4) {\n               if (!browser.qt5) console.error(`longpoll got short message in raw mode ${offset}`);\n               return this.handle.processRequest(null);\n            }\n\n            while (i < 4) str += String.fromCharCode(u8Arr[i++]);\n            if (str !== 'txt:') {\n               str = '';\n               while ((i < offset) && (String.fromCharCode(u8Arr[i]) !== ':'))\n                  str += String.fromCharCode(u8Arr[i++]);\n               ++i;\n               offset = i + parseInt(str.trim());\n            }\n\n            str = '';\n            while (i < offset) str += String.fromCharCode(u8Arr[i++]);\n\n            if (str) {\n               if (str === '<<nope>>')\n                  this.handle.processRequest(-1111);\n               else\n                   this.handle.processRequest(str);\n            }\n            if (offset < u8Arr.length)\n               this.handle.processRequest(res, offset);\n         } else if (this.getResponseHeader('Content-Type') === 'application/x-binary') {\n            // binary reply with optional header\n            const extra_hdr = this.getResponseHeader('LongpollHeader');\n            if (extra_hdr) this.handle.processRequest(extra_hdr);\n            this.handle.processRequest(res, 0);\n         } else {\n            // text reply\n            if (res && !isStr(res)) {\n               let str = '';\n               const u8Arr = new Uint8Array(res);\n               for (let i = 0; i < u8Arr.length; ++i)\n                  str += String.fromCharCode(u8Arr[i]);\n               res = str;\n            }\n            if (res === '<<nope>>')\n               this.handle.processRequest(-1111);\n            else\n               this.handle.processRequest(res);\n         }\n      }, function(/* err, status */) {\n         this.handle.processRequest(null, 'error');\n      }, true).then(req => {\n         req.handle = this;\n         if (!this.req)\n            this.req = req; // any request can be used for response, do not submit dummy until req is there\n         req.send(post);\n      });\n   }\n\n   /** @summary Process request */\n   processRequest(res, _offset) {\n      if (res === null) {\n         if (isFunc(this.onerror))\n            this.onerror('receive data with connid ' + (this.connid || '---'));\n         if ((_offset === 'error') && isFunc(this.onclose))\n            this.onclose('force_close');\n         this.connid = null;\n         return;\n      } else if (res === -1111)\n         res = '';\n\n      let dummy_tmout = 5;\n\n      if (this.connid === 'connect') {\n         if (!res) {\n            this.connid = null;\n            if (isFunc(this.onerror))\n               this.onerror('connection rejected');\n            return;\n         }\n\n         this.connid = parseInt(res);\n         dummy_tmout = 100; // when establishing connection, wait a bit longer to submit dummy package\n         console.log(`Get new longpoll connection with id ${this.connid}`);\n         if (isFunc(this.onopen))\n            this.onopen();\n      } else if (this.connid === 'close') {\n         if (isFunc(this.onclose))\n            this.onclose();\n         return;\n      } else {\n         if (isFunc(this.onmessage) && res)\n            this.onmessage({ data: res, offset: _offset });\n      }\n\n      // minimal timeout to reduce load, generate dummy only if client not submit new request immediately\n      if (!this.req)\n         setTimeout(() => { if (!this.req) this.nextRequest('', 'dummy'); }, dummy_tmout);\n   }\n\n   /** @summary Send data */\n   send(str) { this.nextRequest(str); }\n\n   /** @summary Close connection */\n   close() { this.nextRequest('', 'close'); }\n\n} // class LongPollSocket\n\n// ========================================================================================\n\n/**\n * @summary Class re-playing socket data from stored protocol\n *\n * @private\n */\n\nclass FileDumpSocket {\n\n   constructor(receiver) {\n      this.receiver = receiver;\n      this.protocol = [];\n      this.cnt = 0;\n      httpRequest('protocol.json', 'text').then(res => this.getProtocol(res));\n   }\n\n   /** @summary Get stored protocol */\n   getProtocol(res) {\n      if (!res) return;\n      this.protocol = JSON.parse(res);\n      if (isFunc(this.onopen)) this.onopen();\n      this.nextOperation();\n   }\n\n   /** @summary Emulate send - just cound operation */\n   send(/* str */) {\n      if (this.protocol[this.cnt] === 'send') {\n         this.cnt++;\n         setTimeout(() => this.nextOperation(), 10);\n      }\n   }\n\n   /** @summary Emulate close */\n   close() {}\n\n   /** @summary Read data for next operation */\n   nextOperation() {\n      // when file request running - just ignore\n      if (this.wait_for_file) return;\n      const fname = this.protocol[this.cnt];\n\n      if (!fname) return;\n      if (fname === 'send') return; // waiting for send\n      this.wait_for_file = true;\n      this.cnt++;\n      httpRequest(fname, (fname.indexOf('.bin') > 0 ? 'buf' : 'text')).then(res => {\n         this.wait_for_file = false;\n         if (!res) return;\n         const p = fname.indexOf('_ch'),\n               chid = (p > 0) ? Number.parseInt(fname.slice(p+3, fname.indexOf('.', p))) : 1;\n         if (isFunc(this.receiver.provideData))\n            this.receiver.provideData(chid, res, 0);\n         setTimeout(() => this.nextOperation(), 10);\n      });\n   }\n\n} // class FileDumpSocket\n\n\n/**\n * @summary Client communication handle for RWebWindow.\n *\n * @desc Should be created with {@link connectWebWindow} function\n */\n\nclass WebWindowHandle {\n\n   constructor(socket_kind, credits) {\n      this.kind = socket_kind;\n      this.state = 0;\n      this.credits = credits || 10;\n      this.cansend = this.credits;\n      this.ackn = this.credits;\n      this.send_seq = 1; // sequence counter of send messages\n      this.recv_seq = 0; // sequence counter of received messages\n   }\n\n   /** @summary Returns arguments specified in the RWebWindow::SetUserArgs() method\n     * @desc Can be any valid JSON expression. Undefined by default.\n     * @param {string} [field] - if specified and user args is object, returns correspondent object member\n     * @return user arguments object */\n   getUserArgs(field) {\n      if (field && isStr(field))\n         return isObject(this.user_args) ? this.user_args[field] : undefined;\n\n      return this.user_args;\n   }\n\n   /** @summary Set user args\n     * @desc Normally set via RWebWindow::SetUserArgs() method */\n   setUserArgs(args) { this.user_args = args; }\n\n   /** @summary Set callbacks receiver.\n     * @param {object} obj - object with receiver functions\n     * @param {function} obj.onWebsocketMsg - called when new data receieved from RWebWindow\n     * @param {function} obj.onWebsocketOpened - called when connection established\n     * @param {function} obj.onWebsocketClosed - called when connection closed\n     * @param {function} obj.onWebsocketError - called when get error via the connection */\n   setReceiver(obj) { this.receiver = obj; }\n\n   /** @summary Cleanup and close connection. */\n   cleanup() {\n      delete this.receiver;\n      this.close(true);\n   }\n\n   /** @summary Invoke method in the receiver.\n    * @private */\n   invokeReceiver(brdcst, method, arg, arg2) {\n      if (this.receiver && isFunc(this.receiver[method]))\n         this.receiver[method](this, arg, arg2);\n\n      if (brdcst && this.channels) {\n         const ks = Object.keys(this.channels);\n         for (let n = 0; n < ks.length; ++n)\n            this.channels[ks[n]].invokeReceiver(false, method, arg, arg2);\n      }\n   }\n\n   /** @summary Provide data for receiver. When no queue - do it directly.\n    * @private */\n   provideData(chid, msg, len) {\n      if (this.wait_first_recv) {\n         // here dummy first recv like EMBED_DONE is handled\n         delete this.wait_first_recv;\n         this.state = 1;\n         return this.invokeReceiver(false, 'onWebsocketOpened');\n      }\n\n      if ((chid > 1) && this.channels) {\n         const channel = this.channels[chid];\n         if (channel)\n            return channel.provideData(1, msg, len);\n      }\n\n      const force_queue = len && (len < 0);\n      if (!force_queue && (!this.msgqueue || !this.msgqueue.length))\n         return this.invokeReceiver(false, 'onWebsocketMsg', msg, len);\n\n      if (!this.msgqueue) this.msgqueue = [];\n      if (force_queue) len = undefined;\n\n      this.msgqueue.push({ ready: true, msg, len });\n   }\n\n   /** @summary Reserve entry in queue for data, which is not yet decoded.\n    * @private */\n   reserveQueueItem() {\n      if (!this.msgqueue) this.msgqueue = [];\n      const item = { ready: false, msg: null, len: 0 };\n      this.msgqueue.push(item);\n      return item;\n   }\n\n   /** @summary Provide data for item which was reserved before.\n    * @private */\n   markQueueItemDone(item, _msg, _len) {\n      item.ready = true;\n      item.msg = _msg;\n      item.len = _len;\n      this.processQueue();\n   }\n\n   /** @summary Process completed messages in the queue\n     * @private */\n   processQueue() {\n      if (this._loop_msgqueue || !this.msgqueue) return;\n      this._loop_msgqueue = true;\n      while ((this.msgqueue.length > 0) && this.msgqueue[0].ready) {\n         const front = this.msgqueue.shift();\n         this.invokeReceiver(false, 'onWebsocketMsg', front.msg, front.len);\n      }\n      if (this.msgqueue.length === 0)\n         delete this.msgqueue;\n      delete this._loop_msgqueue;\n   }\n\n   /** @summary Close connection */\n   close(force) {\n      if (this.master) {\n         this.master.send(`CLOSECH=${this.channelid}`, 0);\n         delete this.master.channels[this.channelid];\n         delete this.master;\n         return;\n      }\n\n      if (this.timerid) {\n         clearTimeout(this.timerid);\n         delete this.timerid;\n      }\n\n      if (this._websocket && (this.state > 0)) {\n         this.state = force ? -1 : 0; // -1 prevent socket from reopening\n         this._websocket.onclose = null; // hide normal handler\n         this._websocket.close();\n         delete this._websocket;\n      }\n   }\n\n   /** @summary Checks number of credits for send operation\n     * @param {number} [numsend = 1] - number of required send operations\n     * @return true if one allow to send specified number of text message to server */\n   canSend(numsend) { return this.cansend >= (numsend || 1); }\n\n   /** @summary Returns number of possible send operations relative to number of credits */\n   getRelCanSend() { return !this.credits ? 1 : this.cansend / this.credits; }\n\n   /** @summary Send text message via the connection.\n     * @param {string} msg - text message to send\n     * @param {number} [chid] - channel id, 1 by default, 0 used only for internal communication */\n   send(msg, chid) {\n      if (this.master)\n         return this.master.send(msg, this.channelid);\n\n      if (!this._websocket || (this.state <= 0)) return false;\n\n      if (!Number.isInteger(chid)) chid = 1; // when not configured, channel 1 is used - main widget\n\n      if (this.cansend <= 0) console.error(`should be queued before sending cansend: ${this.cansend}`);\n\n      const prefix = `${this.send_seq++}:${this.ackn}:${this.cansend}:${chid}:`;\n      this.ackn = 0;\n      this.cansend--; // decrease number of allowed send packets\n\n      let hash = 'none';\n      if (this.key && sessionKey)\n         hash = HMAC(this.key, `${prefix}${msg}`);\n\n      this._websocket.send(`${hash}:${prefix}${msg}`);\n\n      if ((this.kind === 'websocket') || (this.kind === 'longpoll')) {\n         if (this.timerid) clearTimeout(this.timerid);\n         this.timerid = setTimeout(() => this.keepAlive(), 10000);\n      }\n\n      return true;\n   }\n\n   /** @summary Send only last message of specified kind during defined time interval.\n     * @desc Idea is to prvent sending multiple messages of similar kind and overload connection\n     * Instead timeout is started after which only last specified message will be send\n     * @private */\n   sendLast(kind, tmout, msg) {\n      let d = this._delayed;\n      if (!d) d = this._delayed = {};\n      d[kind] = msg;\n      if (!d[`${kind}_handler`])\n         d[`${kind}_handler`] = setTimeout(() => { delete d[`${kind}_handler`]; this.send(d[kind]); }, tmout);\n   }\n\n   /** @summary Inject message(s) into input queue, for debug purposes only\n     * @private */\n   inject(msg, chid, immediate) {\n      // use timeout to avoid too deep call stack\n      if (!immediate)\n         return setTimeout(this.inject.bind(this, msg, chid, true), 0);\n\n      if (chid === undefined) chid = 1;\n\n      if (Array.isArray(msg)) {\n         for (let k = 0; k < msg.length; ++k)\n            this.provideData(chid, isStr(msg[k]) ? msg[k] : JSON.stringify(msg[k]), -1);\n         this.processQueue();\n      } else if (msg)\n         this.provideData(chid, isStr(msg) ? msg : JSON.stringify(msg));\n   }\n\n   /** @summary Send keep-alive message.\n     * @desc Only for internal use, only when used with websockets\n     * @private */\n   keepAlive() {\n      delete this.timerid;\n      this.send('KEEPALIVE', 0);\n   }\n\n   /** @summary Request server to resize window\n     * @desc For local displays like CEF or qt5 only server can do this */\n   resizeWindow(w, h) {\n      if (browser.qt5 || browser.cef3)\n         this.send(`RESIZE=${w},${h}`, 0);\n      else if ((typeof window !== 'undefined') && isFunc(window?.resizeTo))\n         window.resizeTo(w, h);\n   }\n\n   /** @summary Method open channel, which will share same connection, but can be used independently from main\n     * @private */\n   createChannel() {\n      if (this.master)\n         return this.master.createChannel();\n\n      const channel = new WebWindowHandle('channel', this.credits);\n      channel.wait_first_recv = true; // first received message via the channel is confirmation of established connection\n\n      if (!this.channels) {\n         this.channels = {};\n         this.freechannelid = 2;\n      }\n\n      channel.master = this;\n      channel.channelid = this.freechannelid++;\n\n      // register\n      this.channels[channel.channelid] = channel;\n\n      // now server-side entity should be initialized and init message send from server side!\n      return channel;\n   }\n\n   /** @summary Returns true if socket connected */\n   isConnected() { return this.state > 0; }\n\n   /** @summary Returns used channel ID, 1 by default */\n   getChannelId() { return this.channelid && this.master ? this.channelid : 1; }\n\n   /** @summary Assign href parameter\n     * @param {string} [path] - absolute path, when not specified window.location.url will be used\n     * @private */\n   setHRef(path) {\n      if (isStr(path) && (path.indexOf('?') > 0)) {\n         this.href = path.slice(0, path.indexOf('?'));\n         const d = decodeUrl(path);\n         this.key = d.get('key');\n         this.token = d.get('token');\n      } else {\n         this.href = path;\n         delete this.key;\n         delete this.token;\n      }\n   }\n\n   /** @summary Return href part\n     * @param {string} [relative_path] - relative path to the handle\n     * @private */\n   getHRef(relative_path) {\n      if (!relative_path || !this.kind || !this.href)\n         return this.href;\n      let addr = this.href;\n      if (relative_path.indexOf('../') === 0) {\n         const ddd = addr.lastIndexOf('/', addr.length-2);\n         addr = addr.slice(0, ddd) + relative_path.slice(2);\n      } else\n         addr += relative_path;\n\n      return addr;\n   }\n\n   /** @summary provide connection args for the web socket\n    * @private */\n   getConnArgs(ntry) {\n      let args = '';\n      if (this.key) {\n         const k = HMAC(this.key, `attempt_${ntry}`);\n         args += `key=${k}&ntry=${ntry}`;\n      }\n      if (this.token) {\n         if (args) args += '&';\n         args += `token=${this.token}`;\n      }\n      return args;\n   }\n\n   /** @summary Create configured socket for current object.\n     * @private */\n   connect(href) {\n      this.close();\n      if (!href && this.href) href = this.href;\n\n      let ntry = 0;\n\n      const retry_open = first_time => {\n         if (this.state !== 0) return;\n\n         if (!first_time) console.log(`try connect window again ${new Date().toString()}`);\n\n         if (this._websocket) {\n            this._websocket.close();\n            delete this._websocket;\n         }\n\n         if (!href) {\n            href = window.location.href;\n            if (href && href.indexOf('#') > 0) href = href.slice(0, href.indexOf('#'));\n            if (href && href.lastIndexOf('/') > 0) href = href.slice(0, href.lastIndexOf('/') + 1);\n         }\n         this.href = href;\n         ntry++;\n\n         if (first_time) console.log(`Opening web socket at ${href}`);\n\n         if (ntry > 2) showProgress(`Trying to connect ${href}`);\n\n         let path = href;\n\n         if (this.kind === 'file') {\n            path += 'root.filedump';\n            this._websocket = new FileDumpSocket(this);\n            console.log(`configure protocol log ${path}`);\n         } else if ((this.kind === 'websocket') && first_time) {\n            path = path.replace('http://', 'ws://').replace('https://', 'wss://') + 'root.websocket';\n            path += '?' + this.getConnArgs(ntry);\n            console.log(`configure websocket ${path}`);\n            this._websocket = new WebSocket(path);\n         } else {\n            path += 'root.longpoll';\n            console.log(`configure longpoll ${path}`);\n            this._websocket = new LongPollSocket(path, (this.kind === 'rawlongpoll'), this, ntry);\n         }\n\n         if (!this._websocket) return;\n\n         this._websocket.onopen = () => {\n            if (ntry > 2) showProgress();\n            this.state = 1;\n\n            const key = this.key || '';\n            this.send(`READY=${key}`, 0); // need to confirm connection\n            this.invokeReceiver(false, 'onWebsocketOpened');\n         };\n\n         this._websocket.onmessage = e => {\n            let msg = e.data;\n\n            if (this.next_binary) {\n               const binchid = this.next_binary,\n                     server_hash = this.next_binary_hash;\n               delete this.next_binary;\n               delete this.next_binary_hash;\n\n               if (msg instanceof Blob) {\n                  // convert Blob object to BufferArray\n                  const reader = new FileReader(), qitem = this.reserveQueueItem();\n                  // The file's text will be printed here\n                  reader.onload = event => {\n                     let result = event.target.result;\n                     if (this.key && sessionKey) {\n                        const hash = HMAC(this.key, result, 0);\n                        if (hash !== server_hash) {\n                           console.log('Discard binary buffer because of HMAC mismatch');\n                           result = new ArrayBuffer(0);\n                        }\n                     }\n\n                     this.markQueueItemDone(qitem, result, 0);\n                  };\n                  reader.readAsArrayBuffer(msg, e.offset || 0);\n               } else {\n                  // this is from CEF or LongPoll handler\n                  let result = msg;\n                  if (this.key && sessionKey) {\n                     const hash = HMAC(this.key, result, e.offset || 0);\n                     if (hash !== server_hash) {\n                        console.log('Discard binary buffer because of HMAC mismatch');\n                        result = new ArrayBuffer(0);\n                     }\n                  }\n                  this.provideData(binchid, result, e.offset || 0);\n               }\n\n               return;\n            }\n\n            if (!isStr(msg))\n               return console.log(`unsupported message kind: ${typeof msg}`);\n\n            const i0 = msg.indexOf(':'),\n                  server_hash = msg.slice(0, i0),\n                  i1 = msg.indexOf(':', i0 + 1),\n                  seq_id = Number.parseInt(msg.slice(i0 + 1, i1)),\n                  i2 = msg.indexOf(':', i1 + 1),\n                  credit = Number.parseInt(msg.slice(i1 + 1, i2)),\n                  i3 = msg.indexOf(':', i2 + 1),\n                  // cansend = parseInt(msg.slice(i2 + 1, i3)),  // TODO: take into account when sending messages\n                  i4 = msg.indexOf(':', i3 + 1),\n                  chid = Number.parseInt(msg.slice(i3 + 1, i4));\n\n            // for authentication HMAC checksum and sequence id is important\n            // HMAC used to authenticate server\n            // sequence id is necessary to exclude submission of same packet again\n            if (this.key && sessionKey) {\n               const client_hash = HMAC(this.key, msg.slice(i0+1));\n               if (server_hash !== client_hash)\n                  return console.log(`Failure checking server md5 sum ${server_hash}`);\n            }\n\n            if (seq_id <= this.recv_seq)\n               return console.log(`Failure with packet sequence ${seq_id} <= ${this.recv_seq}`);\n\n            this.recv_seq = seq_id; // sequence id of received packet\n            this.ackn++;            // count number of received packets,\n            this.cansend += credit; // how many packets client can send\n\n            msg = msg.slice(i4 + 1);\n\n            if (chid === 0) {\n               console.log(`GET chid=0 message ${msg}`);\n               if (msg === 'CLOSE') {\n                  this.close(true); // force closing of socket\n                  this.invokeReceiver(true, 'onWebsocketClosed');\n               } else if (msg.indexOf('NEW_KEY=') === 0) {\n                  const newkey = msg.slice(8);\n                  this.close(true);\n                  let href = (typeof document !== 'undefined') ? document.URL : null;\n                  if (isStr(href) && (typeof window !== 'undefined') && window?.history) {\n                     const p = href.indexOf('?key=');\n                     if (p > 0) href = href.slice(0, p);\n                     window.history.replaceState(window.history.state, undefined, `${href}?key=${newkey}`);\n                  } else if (typeof sessionStorage !== 'undefined')\n                     sessionStorage.setItem('RWebWindow_Key', newkey);\n                  location.reload(true);\n               }\n            } else if (msg.slice(0, 10) === '$$binary$$') {\n               this.next_binary = chid;\n               this.next_binary_hash = msg.slice(10);\n            } else if (msg === '$$nullbinary$$')\n               this.provideData(chid, new ArrayBuffer(0), 0);\n            else\n               this.provideData(chid, msg);\n\n            if (this.ackn > 7)\n               this.send('READY', 0); // send dummy message to server\n         };\n\n         this._websocket.onclose = arg => {\n            delete this._websocket;\n            if ((this.state > 0) || (arg === 'force_close')) {\n               console.log('websocket closed');\n               this.state = 0;\n               this.invokeReceiver(true, 'onWebsocketClosed');\n            }\n         };\n\n         this._websocket.onerror = err => {\n            console.log(`websocket error ${err} state ${this.state}`);\n            if (this.state > 0) {\n               this.invokeReceiver(true, 'onWebsocketError', err);\n               this.state = 0;\n            }\n         };\n\n         // only in interactive mode try to reconnect\n         if (!isBatchMode())\n            setTimeout(retry_open, 3000); // after 3 seconds try again\n      }; // retry_open\n\n      retry_open(true); // call for the first time\n   }\n\n   /** @summary Send newkey request to application\n     * @desc If server creates newkey and response - webpage will be reaload\n     * After key generation done, connection will not be working any longer\n     * WARNING - only call when you know that you are doing\n     * @private */\n   askReload() {\n      this.send('GENERATE_KEY', 0);\n   }\n\n   /** @summary Instal Ctrl-R handler to realod web window\n     * @desc Instead of default window reload invokes {@link askReload} method\n     * WARNING - only call when you know that you are doing\n     * @private */\n   addReloadKeyHandler() {\n      if (this.kind === 'file') return;\n\n      window.addEventListener('keydown', evnt => {\n         if (((evnt.key === 'R') || (evnt.key === 'r')) && evnt.ctrlKey) {\n            evnt.stopPropagation();\n            evnt.preventDefault();\n            console.log('Prevent Ctrl-R propogation - ask reload RWebWindow!');\n            this.askReload();\n          }\n      });\n   }\n\n} // class WebWindowHandle\n\n\n/** @summary Method used to initialize connection to web window.\n  * @param {object} arg - arguments\n  * @param {string} [arg.socket_kind] - kind of connection longpoll|websocket, detected automatically from URL\n  * @param {number} [arg.credits = 10] - number of packets which can be send to server without acknowledge\n  * @param {object} arg.receiver - instance of receiver for websocket events, allows to initiate connection immediately\n  * @param {string} [arg.first_recv] - required prefix in the first message from RWebWindow, remain part of message will be returned in handle.first_msg\n  * @param {string} [arg.href] - URL to RWebWindow, using window.location.href by default\n  * @return {Promise} for ready-to-use {@link WebWindowHandle} instance  */\nasync function connectWebWindow(arg) {\n   // mark that jsroot used with RWebWindow\n   browser.webwindow = true;\n\n   if (isFunc(arg))\n      arg = { callback: arg };\n   else if (!isObject(arg))\n      arg = {};\n\n   let d_key, d_token, new_key;\n\n   if (!arg.href) {\n      let href = (typeof document !== 'undefined') ? document.URL : '';\n      const p = href.indexOf('#');\n      if (p > 0) {\n         sessionKey = href.slice(p+1);\n         href = href.slice(0, p);\n      }\n\n      const d = decodeUrl(href);\n      d_key = d.get('key');\n      d_token = d.get('token');\n\n      if (typeof sessionStorage !== 'undefined') {\n         new_key = sessionStorage.getItem('RWebWindow_Key');\n         sessionStorage.removeItem('RWebWindow_Key');\n         if (new_key) console.log(`Use key ${new_key} from session storage`);\n\n         if (sessionKey)\n            sessionStorage.setItem('RWebWindow_SessionKey', sessionKey);\n         else\n            sessionKey = sessionStorage.getItem('RWebWindow_SessionKey') || '';\n      }\n\n      // hide key and any following parameters from URL, chrome do not allows to close browser with changed URL\n      if (d_key && !d.has('headless') && isStr(href) && (typeof window !== 'undefined') && window?.history) {\n         const p = href.indexOf('?key=');\n         if (p > 0) window.history.replaceState(window.history.state, undefined, href.slice(0, p));\n      }\n\n      // special holder script, prevents headless chrome browser from too early exit\n      if (d.has('headless') && d_key && (browser.isChromeHeadless || browser.isChrome) && !arg.ignore_chrome_batch_holder)\n         loadScript('root_batch_holder.js?key=' + (new_key || d_key));\n\n      if (!arg.platform)\n         arg.platform = d.get('platform');\n\n      if (arg.platform === 'qt5')\n         browser.qt5 = true;\n      else if (arg.platform === 'cef3')\n         browser.cef3 = true;\n\n      if (arg.batch === undefined)\n         arg.batch = d.has('headless');\n\n      if (arg.batch) setBatchMode(true);\n\n      if (!arg.socket_kind)\n         arg.socket_kind = d.get('ws');\n\n      if (!new_key && arg.winW && arg.winH && !isBatchMode() && isFunc(window?.resizeTo))\n         window.resizeTo(arg.winW, arg.winH);\n\n      if (!new_key && arg.winX && arg.winY && !isBatchMode() && isFunc(window?.moveTo))\n         window.moveTo(arg.winX, arg.winY);\n   }\n\n   if (!arg.socket_kind) {\n      if (browser.qt5)\n         arg.socket_kind = 'rawlongpoll';\n      else if (browser.cef3)\n         arg.socket_kind = 'longpoll';\n      else\n         arg.socket_kind = 'websocket';\n   }\n\n   // only for debug purposes\n   // arg.socket_kind = 'longpoll';\n\n   const main = new Promise(resolveFunc => {\n      const handle = new WebWindowHandle(arg.socket_kind, arg.credits);\n      handle.setUserArgs(arg.user_args);\n      if (arg.href)\n         handle.setHRef(arg.href); // apply href now  while connect can be called from other place\n      else {\n         handle.key = new_key || d_key;\n         handle.token = d_token;\n      }\n\n      if (window) {\n         window.onbeforeunload = () => handle.close(true);\n         if (browser.qt5) window.onqt5unload = window.onbeforeunload;\n      }\n\n\n      if (arg.receiver) {\n         // when receiver exists, it handles itself callbacks\n         handle.setReceiver(arg.receiver);\n         handle.connect();\n         return resolveFunc(handle);\n      }\n\n      if (!arg.first_recv)\n         return resolveFunc(handle);\n\n      handle.setReceiver({\n         onWebsocketOpened() {}, // dummy function when websocket connected\n\n         onWebsocketMsg(handle, msg) {\n            if (msg.indexOf(arg.first_recv) !== 0)\n               return handle.close();\n            handle.first_msg = msg.slice(arg.first_recv.length);\n            resolveFunc(handle);\n         },\n\n         onWebsocketClosed() { closeCurrentWindow(); } // when connection closed, close panel as well\n      });\n\n      handle.connect();\n   });\n\n   if (!arg.ui5) return main;\n\n   return Promise.all([main, loadOpenui5(arg)]).then(arr => arr[0]);\n}\n\nexport { WebWindowHandle, connectWebWindow };\n","import { settings, create, parse, toJSON, loadScript, registerMethods, isBatchMode, isFunc, isStr, nsREX } from '../core.mjs';\nimport { select as d3_select, rgb as d3_rgb } from '../d3.mjs';\nimport { closeCurrentWindow, showProgress, loadOpenui5, ToolbarIcons, getColorExec } from '../gui/utils.mjs';\nimport { GridDisplay, getHPainter } from '../gui/display.mjs';\nimport { makeTranslate } from '../base/BasePainter.mjs';\nimport { selectActivePad, cleanup, resize, EAxisBits } from '../base/ObjectPainter.mjs';\nimport { RObjectPainter } from '../base/RObjectPainter.mjs';\nimport { RAxisPainter } from './RAxisPainter.mjs';\nimport { RFramePainter } from './RFramePainter.mjs';\nimport { RPadPainter } from './RPadPainter.mjs';\nimport { addDragHandler } from './TFramePainter.mjs';\nimport { WebWindowHandle } from '../webwindow.mjs';\n\n\n/**\n * @summary Painter class for RCanvas\n *\n * @private\n */\n\nclass RCanvasPainter extends RPadPainter {\n\n   /** @summary constructor */\n   constructor(dom, canvas) {\n      super(dom, canvas, true);\n      this._websocket = null;\n      this.tooltip_allowed = settings.Tooltip;\n      this.v7canvas = true;\n      if ((dom === null) && (canvas === null)) {\n         // for web canvas details are important\n         settings.SmallPad.width = 20;\n         settings.SmallPad.height = 10;\n      }\n   }\n\n   /** @summary Cleanup canvas painter */\n   cleanup() {\n      delete this._websocket;\n      delete this._submreq;\n\n     if (this._changed_layout)\n         this.setLayoutKind('simple');\n      delete this._changed_layout;\n\n      super.cleanup();\n   }\n\n   /** @summary Returns layout kind */\n   getLayoutKind() {\n      const origin = this.selectDom('origin'),\n         layout = origin.empty() ? '' : origin.property('layout');\n      return layout || 'simple';\n   }\n\n   /** @summary Set canvas layout kind */\n   setLayoutKind(kind, main_selector) {\n      const origin = this.selectDom('origin');\n      if (!origin.empty()) {\n         if (!kind) kind = 'simple';\n         origin.property('layout', kind);\n         origin.property('layout_selector', (kind !== 'simple') && main_selector ? main_selector : null);\n         this._changed_layout = (kind !== 'simple'); // use in cleanup\n      }\n   }\n\n   /** @summary Changes layout\n     * @return {Promise} indicating when finished */\n   async changeLayout(layout_kind, mainid) {\n      const current = this.getLayoutKind();\n      if (current === layout_kind)\n         return true;\n\n      const origin = this.selectDom('origin'),\n            sidebar2 = origin.select('.side_panel2'),\n            lst = [];\n      let sidebar = origin.select('.side_panel'),\n          main = this.selectDom(), force;\n\n      while (main.node().firstChild)\n         lst.push(main.node().removeChild(main.node().firstChild));\n\n      if (!sidebar.empty())\n         cleanup(sidebar.node());\n      if (!sidebar2.empty())\n         cleanup(sidebar2.node());\n\n      this.setLayoutKind('simple'); // restore defaults\n      origin.html(''); // cleanup origin\n\n      if (layout_kind === 'simple') {\n         main = origin;\n         for (let k = 0; k < lst.length; ++k)\n            main.node().appendChild(lst[k]);\n         this.setLayoutKind(layout_kind);\n         force = true;\n      } else {\n         const grid = new GridDisplay(origin.node(), layout_kind);\n\n         if (mainid === undefined)\n            mainid = (layout_kind.indexOf('vert') === 0) ? 0 : 1;\n\n         main = d3_select(grid.getGridFrame(mainid));\n         main.classed('central_panel', true).style('position', 'relative');\n\n         if (mainid === 2) {\n            // left panel for Y\n            sidebar = d3_select(grid.getGridFrame(0));\n            sidebar.classed('side_panel2', true).style('position', 'relative');\n            // bottom panel for X\n            sidebar = d3_select(grid.getGridFrame(3));\n            sidebar.classed('side_panel', true).style('position', 'relative');\n         } else {\n            sidebar = d3_select(grid.getGridFrame(1 - mainid));\n            sidebar.classed('side_panel', true).style('position', 'relative');\n         }\n\n         // now append all childs to the new main\n         for (let k = 0; k < lst.length; ++k)\n            main.node().appendChild(lst[k]);\n\n         this.setLayoutKind(layout_kind, '.central_panel');\n\n         // remove reference to MDIDisplay, solves resize problem\n         origin.property('mdi', null);\n      }\n\n      // resize main drawing and let draw extras\n      resize(main.node(), force);\n      return true;\n   }\n\n   /** @summary Toggle projection\n     * @return {Promise} indicating when ready\n     * @private */\n   async toggleProjection(kind) {\n      delete this.proj_painter;\n\n      if (kind) this.proj_painter = { X: false, Y: false }; // just indicator that drawing can be preformed\n\n      if (isFunc(this.showUI5ProjectionArea))\n         return this.showUI5ProjectionArea(kind);\n\n      let layout = 'simple', mainid;\n\n      switch (kind) {\n         case 'XY': layout = 'projxy'; mainid = 2; break;\n         case 'X':\n         case 'bottom': layout = 'vert2_31'; mainid = 0; break;\n         case 'Y':\n         case 'left': layout = 'horiz2_13'; mainid = 1; break;\n         case 'top': layout = 'vert2_13'; mainid = 1; break;\n         case 'right': layout = 'horiz2_31'; mainid = 0; break;\n      }\n\n      return this.changeLayout(layout, mainid);\n   }\n\n   /** @summary Draw projection for specified histogram\n     * @private */\n   async drawProjection(/* kind,hist,hopt */) {\n      // dummy for the moment\n      return false;\n   }\n\n   /** @summary Draw in side panel\n     * @private */\n   async drawInSidePanel(canv, opt, kind) {\n      const sel = ((this.getLayoutKind() === 'projxy') && (kind === 'Y')) ? '.side_panel2' : '.side_panel',\n            side = this.selectDom('origin').select(sel);\n      return side.empty() ? null : this.drawObject(side.node(), canv, opt);\n   }\n\n   /** @summary Checks if canvas shown inside ui5 widget\n     * @desc Function should be used only from the func which supposed to be replaced by ui5\n     * @private */\n   testUI5() {\n      if (!this.use_openui) return false;\n      console.warn('full ui5 should be used - not loaded yet? Please check!!');\n      return true;\n   }\n\n   /** @summary Show message\n     * @desc Used normally with web-based canvas and handled in ui5\n     * @private */\n   showMessage(msg) {\n      if (!this.testUI5())\n         showProgress(msg, 7000);\n   }\n\n   /** @summary Function called when canvas menu item Save is called */\n   saveCanvasAsFile(fname) {\n      const pnt = fname.indexOf('.');\n      this.createImage(fname.slice(pnt+1))\n          .then(res => this.sendWebsocket(`SAVE:${fname}:${res}`));\n   }\n\n   /** @summary Send command to server to save canvas with specified name\n     * @desc Should be only used in web-based canvas\n     * @private */\n   sendSaveCommand(fname) {\n      this.sendWebsocket('PRODUCE:' + fname);\n   }\n\n   /** @summary Send message via web socket\n     * @private */\n   sendWebsocket(msg) {\n      if (this._websocket?.canSend()) {\n         this._websocket.send(msg);\n         return true;\n      }\n\n      return false;\n   }\n\n   /** @summary Close websocket connection to canvas\n     * @private */\n   closeWebsocket(force) {\n      if (this._websocket) {\n         this._websocket.close(force);\n         this._websocket.cleanup();\n         delete this._websocket;\n      }\n   }\n\n   /** @summary Use provided connection for the web canvas\n     * @private */\n   useWebsocket(handle) {\n      this.closeWebsocket();\n\n      this._websocket = handle;\n      this._websocket.setReceiver(this);\n      this._websocket.connect();\n   }\n\n   /** @summary set, test or reset timeout of specified name\n     * @desc Used to prevent overloading of websocket for specific function */\n   websocketTimeout(name, tm) {\n      if (!this._websocket)\n         return;\n      if (!this._websocket._tmouts)\n         this._websocket._tmouts = {};\n\n      const handle = this._websocket._tmouts[name];\n      if (tm === undefined)\n         return handle !== undefined;\n\n      if (tm === 'reset') {\n         if (handle) { clearTimeout(handle); delete this._websocket._tmouts[name]; }\n      } else if (!handle && Number.isInteger(tm))\n         this._websocket._tmouts[name] = setTimeout(() => { delete this._websocket._tmouts[name]; }, tm);\n   }\n\n   /** @summary Hanler for websocket open event\n     * @private */\n   onWebsocketOpened(/* handle */) {\n   }\n\n   /** @summary Hanler for websocket close event\n     * @private */\n   onWebsocketClosed(/* handle */) {\n      if (!this.embed_canvas)\n         closeCurrentWindow();\n   }\n\n   /** @summary Hanler for websocket message\n     * @private */\n   onWebsocketMsg(handle, msg) {\n      // console.log('GET_MSG ' + msg.slice(0,30));\n\n      if (msg === 'CLOSE') {\n         this.onWebsocketClosed();\n         this.closeWebsocket(true);\n      } else if (msg.slice(0, 5) === 'SNAP:') {\n         msg = msg.slice(5);\n         const p1 = msg.indexOf(':'),\n             snapid = msg.slice(0, p1),\n             snap = parse(msg.slice(p1+1));\n         this.syncDraw(true)\n             .then(() => {\n                if (!this.snapid && snap?.fWinSize)\n                   this.resizeBrowser(snap.fWinSize[0], snap.fWinSize[1]);\n             }).then(() => this.redrawPadSnap(snap))\n             .then(() => {\n                 this.addPadInteractive();\n                 handle.send(`SNAPDONE:${snapid}`); // send ready message back when drawing completed\n                 this.confirmDraw();\n              });\n      } else if (msg.slice(0, 4) === 'JSON') {\n         const obj = parse(msg.slice(4));\n         // console.log('get JSON ', msg.length-4, obj._typename);\n         this.redrawObject(obj);\n      } else if (msg.slice(0, 9) === 'REPL_REQ:')\n         this.processDrawableReply(msg.slice(9));\n       else if (msg.slice(0, 4) === 'CMD:') {\n         msg = msg.slice(4);\n         const p1 = msg.indexOf(':'),\n             cmdid = msg.slice(0, p1),\n             cmd = msg.slice(p1+1),\n             reply = `REPLY:${cmdid}:`;\n         if ((cmd === 'SVG') || (cmd === 'PNG') || (cmd === 'JPEG')) {\n            this.createImage(cmd.toLowerCase())\n                .then(res => handle.send(reply + res));\n         } else if (cmd.indexOf('ADDPANEL:') === 0) {\n            const relative_path = cmd.slice(9);\n            if (!isFunc(this.showUI5Panel))\n               handle.send(reply + 'false');\n             else {\n               const conn = new WebWindowHandle(handle.kind);\n\n               // set interim receiver until first message arrives\n               conn.setReceiver({\n                  cpainter: this,\n\n                  onWebsocketOpened() {\n                  },\n\n                  onWebsocketMsg(panel_handle, msg) {\n                     const panel_name = (msg.indexOf('SHOWPANEL:') === 0) ? msg.slice(10) : '';\n                     this.cpainter.showUI5Panel(panel_name, panel_handle)\n                                  .then(res => handle.send(reply + (res ? 'true' : 'false')));\n                  },\n\n                  onWebsocketClosed() {\n                     // if connection failed,\n                     handle.send(reply + 'false');\n                  },\n\n                  onWebsocketError() {\n                     // if connection failed,\n                     handle.send(reply + 'false');\n                  }\n\n               });\n\n               let addr = handle.href;\n               if (relative_path.indexOf('../') === 0) {\n                  const ddd = addr.lastIndexOf('/', addr.length-2);\n                  addr = addr.slice(0, ddd) + relative_path.slice(2);\n               } else\n                  addr += relative_path;\n\n               // only when connection established, panel will be activated\n               conn.connect(addr);\n            }\n         } else {\n            console.log('Unrecognized command ' + cmd);\n            handle.send(reply);\n         }\n      } else if ((msg.slice(0, 7) === 'DXPROJ:') || (msg.slice(0, 7) === 'DYPROJ:')) {\n         const kind = msg[1],\n             hist = parse(msg.slice(7));\n         this.drawProjection(kind, hist);\n      } else if (msg.slice(0, 5) === 'SHOW:') {\n         const that = msg.slice(5),\n             on = that[that.length-1] === '1';\n         this.showSection(that.slice(0, that.length-2), on);\n      } else\n         console.log(`unrecognized msg len: ${msg.length} msg: ${msg.slice(0, 30)}`);\n   }\n\n   /** @summary Submit request to RDrawable object on server side */\n   submitDrawableRequest(kind, req, painter, method) {\n      if (!this._websocket || !req || !req._typename ||\n          !painter.snapid || !isStr(painter.snapid)) return null;\n\n      if (kind && method) {\n         // if kind specified - check if such request already was submitted\n         if (!painter._requests) painter._requests = {};\n\n         const prevreq = painter._requests[kind];\n\n         if (prevreq) {\n            const tm = new Date().getTime();\n            if (!prevreq._tm || (tm - prevreq._tm < 5000)) {\n               prevreq._nextreq = req; // submit when got reply\n               return false;\n            }\n            delete painter._requests[kind]; // let submit new request after timeout\n         }\n\n         painter._requests[kind] = req; // keep reference on the request\n      }\n\n      req.id = painter.snapid;\n\n      if (method) {\n         if (!this._nextreqid) this._nextreqid = 1;\n         req.reqid = this._nextreqid++;\n      } else\n         req.reqid = 0; // request will not be replied\n\n\n      const msg = JSON.stringify(req);\n\n      if (req.reqid) {\n         req._kind = kind;\n         req._painter = painter;\n         req._method = method;\n         req._tm = new Date().getTime();\n\n         if (!this._submreq) this._submreq = {};\n         this._submreq[req.reqid] = req; // fast access to submitted requests\n      }\n\n      // console.log('Sending request ', msg.slice(0,60));\n\n      this.sendWebsocket('REQ:' + msg);\n      return req;\n   }\n\n   /** @summary Submit menu request\n     * @private */\n   async submitMenuRequest(painter, menukind, reqid) {\n      return new Promise(resolveFunc => {\n         this.submitDrawableRequest('', {\n            _typename: `${nsREX}RDrawableMenuRequest`,\n            menukind: menukind || '',\n            menureqid: reqid // used to identify menu request\n         }, painter, resolveFunc);\n      });\n   }\n\n   /** @summary Submit executable command for given painter */\n   submitExec(painter, exec, subelem) {\n      // snapid is intentionally ignored - only painter.snapid has to be used\n      if (!this._websocket) return;\n\n      if (subelem && isStr(subelem)) {\n         const len = subelem.length;\n         if ((len > 2) && (subelem.indexOf('#x') === len - 2)) subelem = 'x'; else\n         if ((len > 2) && (subelem.indexOf('#y') === len - 2)) subelem = 'y'; else\n         if ((len > 2) && (subelem.indexOf('#z') === len - 2)) subelem = 'z';\n\n         if ((subelem === 'x') || (subelem === 'y') || (subelem === 'z'))\n            exec = subelem + 'axis#' + exec;\n         else\n            return console.log(`not recoginzed subelem ${subelem} in SubmitExec`);\n       }\n\n      this.submitDrawableRequest('', { _typename: `${nsREX}RDrawableExecRequest`, exec }, painter);\n   }\n\n   /** @summary Process reply from request to RDrawable */\n   processDrawableReply(msg) {\n      const reply = parse(msg);\n      if (!reply || !reply.reqid || !this._submreq) return false;\n\n      const req = this._submreq[reply.reqid];\n      if (!req) return false;\n\n      // remove reference first\n      delete this._submreq[reply.reqid];\n\n      // remove blocking reference for that kind\n      if (req._kind && req._painter?._requests) {\n         if (req._painter._requests[req._kind] === req)\n            delete req._painter._requests[req._kind];\n      }\n\n      if (req._method)\n         req._method(reply, req);\n\n      // resubmit last request of that kind\n      if (req._nextreq && !req._painter._requests[req._kind])\n         this.submitDrawableRequest(req._kind, req._nextreq, req._painter, req._method);\n   }\n\n   /** @summary Show specified section in canvas */\n   async showSection(that, on) {\n      switch (that) {\n         case 'Menu': break;\n         case 'StatusBar': break;\n         case 'Editor': break;\n         case 'ToolBar': break;\n         case 'ToolTips': this.setTooltipAllowed(on); break;\n      }\n      return true;\n   }\n\n   /** @summary Method informs that something was changed in the canvas\n     * @desc used to update information on the server (when used with web6gui)\n     * @private */\n   processChanges(kind, painter, subelem) {\n      // check if we could send at least one message more - for some meaningful actions\n      if (!this._websocket || !this._websocket.canSend(2) || !isStr(kind)) return;\n\n      const msg = '';\n      if (!painter) painter = this;\n      switch (kind) {\n         case 'sbits':\n            console.log('Status bits in RCanvas are changed - that to do?');\n            break;\n         case 'frame': // when moving frame\n         case 'zoom':  // when changing zoom inside frame\n            console.log('Frame moved or zoom is changed - that to do?');\n            break;\n         case 'pave_moved':\n            console.log('TPave is moved inside RCanvas - that to do?');\n            break;\n         default:\n            if ((kind.slice(0, 5) === 'exec:') && painter?.snapid)\n               this.submitExec(painter, kind.slice(5), subelem);\n             else\n               console.log('UNPROCESSED CHANGES', kind);\n      }\n\n      if (msg)\n         console.log('RCanvas::processChanges want to send  ' + msg.length + '  ' + msg.slice(0, 40));\n   }\n\n   /** @summary Handle pad button click event\n     * @private */\n   clickPadButton(funcname, evnt) {\n      if (funcname === 'ToggleGed')\n         return this.activateGed(this, null, 'toggle');\n      if (funcname === 'ToggleStatus')\n         return this.activateStatusBar('toggle');\n      return super.clickPadButton(funcname, evnt);\n   }\n\n   /** @summary returns true when event status area exist for the canvas */\n   hasEventStatus() {\n      if (this.testUI5()) return false;\n      if (this.brlayout)\n         return this.brlayout.hasStatus();\n      const hp = getHPainter();\n      return hp ? hp.hasStatusLine() : false;\n   }\n\n   /** @summary Check if status bar can be toggled\n     * @private */\n   canStatusBar() {\n      return this.testUI5() || this.brlayout || getHPainter();\n   }\n\n   /** @summary Show/toggle event status bar\n     * @private */\n   activateStatusBar(state) {\n      if (this.testUI5())\n         return;\n      if (this.brlayout)\n         this.brlayout.createStatusLine(23, state);\n      else\n         getHPainter()?.createStatusLine(23, state);\n\n      this.processChanges('sbits', this);\n   }\n\n   /** @summary Show online canvas status\n     * @private */\n   showCanvasStatus(...msgs) {\n      if (this.testUI5()) return;\n\n      const br = this.brlayout || getHPainter()?.brlayout;\n\n      br?.showStatus(...msgs);\n   }\n\n   /** @summary Returns true if GED is present on the canvas */\n   hasGed() {\n      if (this.testUI5()) return false;\n      return this.brlayout?.hasContent() ?? false;\n   }\n\n   /** @summary Function used to de-activate GED\n     * @private */\n   removeGed() {\n      if (this.testUI5()) return;\n\n      this.registerForPadEvents(null);\n\n      if (this.ged_view) {\n         this.ged_view.getController().cleanupGed();\n         this.ged_view.destroy();\n         delete this.ged_view;\n      }\n      this.brlayout?.deleteContent(true);\n      this.processChanges('sbits', this);\n   }\n\n   /** @summary Get view data for ui5 panel\n     * @private */\n   getUi5PanelData(/* panel_name */) {\n      return { jsroot: { settings, create, parse, toJSON, loadScript, EAxisBits, getColorExec } };\n   }\n\n   /** @summary Function used to activate GED\n     * @return {Promise} when GED is there\n     * @private */\n   async activateGed(objpainter, kind, mode) {\n      if (this.testUI5() || !this.brlayout)\n         return false;\n\n      if (this.brlayout.hasContent()) {\n         if ((mode === 'toggle') || (mode === false))\n            this.removeGed();\n         else\n            objpainter?.getPadPainter()?.selectObjectPainter(objpainter);\n\n         return true;\n      }\n\n      if (mode === false)\n         return false;\n\n      const btns = this.brlayout.createBrowserBtns();\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.diamand, 15, 'toggle fix-pos mode', 'browser')\n                  .style('margin', '3px').on('click', () => this.brlayout.toggleKind('fix'));\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.circle, 15, 'toggle float mode', 'browser')\n                  .style('margin', '3px').on('click', () => this.brlayout.toggleKind('float'));\n\n      ToolbarIcons.createSVG(btns, ToolbarIcons.cross, 15, 'delete GED', 'browser')\n                  .style('margin', '3px').on('click', () => this.removeGed());\n\n      // be aware, that jsroot_browser_hierarchy required for flexible layout that element use full browser area\n      this.brlayout.setBrowserContent('<div class=\\'jsroot_browser_hierarchy\\' id=\\'ged_placeholder\\'>Loading GED ...</div>');\n      this.brlayout.setBrowserTitle('GED');\n      this.brlayout.toggleBrowserKind(kind || 'float');\n\n      return new Promise(resolveFunc => {\n         loadOpenui5.then(sap => {\n            d3_select('#ged_placeholder').text('');\n\n            sap.ui.require(['sap/ui/model/json/JSONModel', 'sap/ui/core/mvc/XMLView'], (JSONModel, XMLView) => {\n               const oModel = new JSONModel({ handle: null });\n\n               XMLView.create({\n                  viewName: 'rootui5.canv.view.Ged',\n                  viewData: this.getUi5PanelData('Ged')\n               }).then(oGed => {\n                  oGed.setModel(oModel);\n\n                  oGed.placeAt('ged_placeholder');\n\n                  this.ged_view = oGed;\n\n                  // TODO: should be moved into Ged controller - it must be able to detect canvas painter itself\n                  this.registerForPadEvents(oGed.getController().padEventsReceiver.bind(oGed.getController()));\n\n                  objpainter?.getPadPainter()?.selectObjectPainter(objpainter);\n\n                  this.processChanges('sbits', this);\n\n                  resolveFunc(true);\n               });\n            });\n         });\n      });\n   }\n\n   /** @summary produce JSON for RCanvas, which can be used to display canvas once again\n     * @private */\n   produceJSON() {\n      console.error('RCanvasPainter.produceJSON not yet implemented');\n      return '';\n   }\n\n   /** @summary resize browser window to get requested canvas sizes */\n   resizeBrowser(fullW, fullH) {\n      if (!fullW || !fullH || this.isBatchMode() || this.embed_canvas || this.batch_mode)\n         return;\n      this._websocket?.resizeWindow(fullW, fullH);\n   }\n\n   /** @summary draw RCanvas object */\n   static async draw(dom, can /*, opt */) {\n      const nocanvas = !can;\n      if (nocanvas)\n         can = create(`${nsREX}RCanvas`);\n\n      const painter = new RCanvasPainter(dom, can);\n      painter.normal_canvas = !nocanvas;\n      painter.createCanvasSvg(0);\n\n      selectActivePad({ pp: painter, active: false });\n\n      return painter.drawPrimitives().then(() => {\n         painter.addPadInteractive();\n         painter.addPadButtons();\n         painter.showPadButtons();\n         return painter;\n      });\n   }\n\n} // class RCanvasPainter\n\n\n/** @summary draw RPadSnapshot object\n  * @private */\nfunction drawRPadSnapshot(dom, snap /*, opt */) {\n   const painter = new RCanvasPainter(dom, null);\n   painter.normal_canvas = false;\n   painter.batch_mode = isBatchMode();\n   return painter.syncDraw(true).then(() => painter.redrawPadSnap(snap)).then(() => {\n      painter.confirmDraw();\n      painter.showPadButtons();\n      return painter;\n   });\n}\n\n/** @summary Ensure RCanvas and RFrame for the painter object\n  * @param {Object} painter  - painter object to process\n  * @param {string|boolean} frame_kind  - false for no frame or '3d' for special 3D mode\n  * @desc Assigns DOM, creates and draw RCanvas and RFrame if necessary, add painter to pad list of painters\n  * @return {Promise} for ready\n  * @private */\nasync function ensureRCanvas(painter, frame_kind) {\n   if (!painter)\n      return Promise.reject(Error('Painter not provided in ensureRCanvas'));\n\n   // simple check - if canvas there, can use painter\n   const pr = painter.getCanvSvg().empty() ? RCanvasPainter.draw(painter.getDom(), null /* noframe */) : Promise.resolve(true);\n\n   return pr.then(() => {\n      if ((frame_kind !== false) && painter.getFrameSvg().selectChild('.main_layer').empty())\n         return RFramePainter.draw(painter.getDom(), null, isStr(frame_kind) ? frame_kind : '');\n   }).then(() => {\n      painter.addToPadPrimitives();\n      return painter;\n   });\n}\n\n\n/** @summary Function used for direct draw of RFrameTitle\n  * @private */\nfunction drawRFrameTitle(reason, drag) {\n   const fp = this.getFramePainter();\n   if (!fp)\n      return console.log('no frame painter - no title');\n\n   const rect = fp.getFrameRect(),\n         fx = rect.x,\n         fy = rect.y,\n         fw = rect.width,\n         // fh           = rect.height,\n         ph = this.getPadPainter().getPadHeight(),\n         title = this.getObject(),\n         title_width = fw,\n         textFont = this.v7EvalFont('text', { size: 0.07, color: 'black', align: 22 });\n   let title_margin = this.v7EvalLength('margin', ph, 0.02),\n       title_height = this.v7EvalLength('height', ph, 0.05);\n\n   if (reason === 'drag') {\n      title_height = drag.height;\n      title_margin = fy - drag.y - drag.height;\n      const changes = {};\n      this.v7AttrChange(changes, 'margin', title_margin / ph);\n      this.v7AttrChange(changes, 'height', title_height / ph);\n      this.v7SendAttrChanges(changes, false); // do not invoke canvas update on the server\n   }\n\n   this.createG();\n\n   makeTranslate(this.draw_g, fx, Math.round(fy-title_margin-title_height));\n\n   const arg = { x: title_width/2, y: title_height/2, text: title.fText, latex: 1 };\n\n   this.startTextDrawing(textFont, 'font');\n\n   this.drawText(arg);\n\n   return this.finishTextDrawing().then(() =>\n      addDragHandler(this, { x: fx, y: Math.round(fy-title_margin-title_height), width: title_width, height: title_height,\n                             minwidth: 20, minheight: 20, no_change_x: true, redraw: d => this.redraw('drag', d) })\n   );\n}\n\n/// /////////////////////////////////////////////////////////////////////////////////////////\n\nregisterMethods(`${nsREX}RPalette`, {\n\n   extractRColor(rcolor) {\n     return rcolor.fColor || 'black';\n   },\n\n   getColor(indx) {\n      return this.palette[indx];\n   },\n\n   getContourIndex(zc) {\n      const cntr = this.fContour;\n      let l = 0, r = cntr.length-1, mid;\n\n      if (zc < cntr[0]) return -1;\n      if (zc >= cntr[r]) return r-1;\n\n      if (this.fCustomContour) {\n         while (l < r-1) {\n            mid = Math.round((l+r)/2);\n            if (cntr[mid] > zc) r = mid; else l = mid;\n         }\n         return l;\n      }\n\n      // last color in palette starts from level cntr[r-1]\n      return Math.floor((zc-cntr[0]) / (cntr[r-1] - cntr[0]) * (r-1));\n   },\n\n   getContourColor(zc) {\n      const zindx = this.getContourIndex(zc);\n      return (zindx < 0) ? '' : this.getColor(zindx);\n   },\n\n   getContour() {\n      return this.fContour && (this.fContour.length > 1) ? this.fContour : null;\n   },\n\n   deleteContour() {\n      delete this.fContour;\n   },\n\n   calcColor(value, entry1, entry2) {\n      const dist = entry2.fOrdinal - entry1.fOrdinal,\n          r1 = entry2.fOrdinal - value,\n          r2 = value - entry1.fOrdinal;\n\n      if (!this.fInterpolate || (dist <= 0))\n         return (r1 < r2) ? entry2.fColor : entry1.fColor;\n\n      // interpolate\n      const col1 = d3_rgb(this.extractRColor(entry1.fColor)),\n          col2 = d3_rgb(this.extractRColor(entry2.fColor)),\n          color = d3_rgb(Math.round((col1.r*r1 + col2.r*r2)/dist),\n                         Math.round((col1.g*r1 + col2.g*r2)/dist),\n                         Math.round((col1.b*r1 + col2.b*r2)/dist));\n\n      return color.toString();\n   },\n\n   createPaletteColors(len) {\n      const arr = [];\n      let indx = 0;\n\n      while (arr.length < len) {\n         const value = arr.length / (len-1),\n\n          entry = this.fColors[indx];\n\n         if ((Math.abs(entry.fOrdinal - value) < 0.0001) || (indx === this.fColors.length - 1)) {\n            arr.push(this.extractRColor(entry.fColor));\n            continue;\n         }\n\n         const next = this.fColors[indx+1];\n         if (next.fOrdinal <= value)\n            indx++;\n         else\n            arr.push(this.calcColor(value, entry, next));\n      }\n\n      return arr;\n   },\n\n   getColorOrdinal(value) {\n      // extract color with ordinal value between 0 and 1\n      if (!this.fColors)\n         return 'black';\n      if ((typeof value !== 'number') || (value < 0))\n         value = 0;\n      else if (value > 1)\n         value = 1;\n\n      // TODO: implement better way to find index\n\n      let entry, next = this.fColors[0];\n      for (let indx = 0; indx < this.fColors.length-1; ++indx) {\n         entry = next;\n\n         if (Math.abs(entry.fOrdinal - value) < 0.0001)\n            return this.extractRColor(entry.fColor);\n\n         next = this.fColors[indx+1];\n         if (next.fOrdinal > value)\n            return this.calcColor(value, entry, next);\n      }\n\n      return this.extractRColor(next.fColor);\n   },\n\n   setFullRange(min, max) {\n      // set full z scale range, used in zooming\n      this.full_min = min;\n      this.full_max = max;\n   },\n\n   createContour(logz, nlevels, zmin, zmax, zminpositive) {\n      this.fContour = [];\n      delete this.fCustomContour;\n      this.colzmin = zmin;\n      this.colzmax = zmax;\n\n      if (logz) {\n         if (this.colzmax <= 0) this.colzmax = 1.0;\n         if (this.colzmin <= 0) {\n            if ((zminpositive === undefined) || (zminpositive <= 0))\n               this.colzmin = 0.0001*this.colzmax;\n            else\n               this.colzmin = ((zminpositive < 3) || (zminpositive>100)) ? 0.3*zminpositive : 1;\n         }\n         if (this.colzmin >= this.colzmax)\n            this.colzmin = 0.0001*this.colzmax;\n\n         const logmin = Math.log(this.colzmin)/Math.log(10),\n             logmax = Math.log(this.colzmax)/Math.log(10),\n             dz = (logmax-logmin)/nlevels;\n         this.fContour.push(this.colzmin);\n         for (let level=1; level<nlevels; level++)\n            this.fContour.push(Math.exp((logmin + dz*level)*Math.log(10)));\n         this.fContour.push(this.colzmax);\n         this.fCustomContour = true;\n      } else {\n         if ((this.colzmin === this.colzmax) && (this.colzmin !== 0)) {\n            this.colzmax += 0.01*Math.abs(this.colzmax);\n            this.colzmin -= 0.01*Math.abs(this.colzmin);\n         }\n         const dz = (this.colzmax-this.colzmin)/nlevels;\n         for (let level=0; level<=nlevels; level++)\n            this.fContour.push(this.colzmin + dz*level);\n      }\n\n      if (!this.palette || (this.palette.length !== nlevels))\n         this.palette = this.createPaletteColors(nlevels);\n   }\n\n});\n\n/** @summary draw RFont object\n  * @private */\nfunction drawRFont() {\n   const font = this.getObject(),\n         svg = this.getCanvSvg(),\n         clname = 'custom_font_' + font.fFamily+font.fWeight+font.fStyle;\n   let defs = svg.selectChild('.canvas_defs');\n\n   if (defs.empty())\n      defs = svg.insert('svg:defs', ':first-child').attr('class', 'canvas_defs');\n\n   let entry = defs.selectChild('.' + clname);\n   if (entry.empty()) {\n      entry = defs.append('style')\n                  .attr('type', 'text/css')\n                  .attr('class', clname)\n                  .text(`@font-face { font-family: \"${font.fFamily}\"; font-weight: ${font.fWeight ? font.fWeight : 'normal'}; font-style: ${font.fStyle ? font.fStyle : 'normal'}; src: ${font.fSrc}; }`);\n      const p1 = font.fSrc.indexOf('base64,'),\n            p2 = font.fSrc.lastIndexOf(' format(');\n      if (p1 > 0 && p2 > p1) {\n         const base64 = font.fSrc.slice(p1 + 7, p2 - 2),\n               is_ttf = font.fSrc.indexOf('data:application/font-ttf') > 0;\n         // TODO: for the moment only ttf format supported by jsPDF\n         if (is_ttf)\n            entry.property('$fonthandler', { name: font.fFamily, format: 'ttf', base64 });\n      }\n   }\n\n   if (font.fDefault)\n      this.getPadPainter()._dfltRFont = font;\n\n   return true;\n}\n\n/** @summary draw RAxis object\n  * @private */\nfunction drawRAxis(dom, obj, opt) {\n   const painter = new RAxisPainter(dom, obj, opt);\n   painter.disable_zooming = true;\n   return ensureRCanvas(painter, false)\n           .then(() => painter.redraw())\n           .then(() => painter);\n}\n\n/** @summary draw RFrame object\n  * @private */\nfunction drawRFrame(dom, obj, opt) {\n   const p = new RFramePainter(dom, obj);\n   if (opt === '3d') p.mode3d = true;\n   return ensureRCanvas(p, false).then(() => p.redraw());\n}\n\nexport { ensureRCanvas, drawRPadSnapshot,\n         drawRFrameTitle, drawRFont, drawRAxis, drawRFrame,\n         RObjectPainter, RPadPainter, RCanvasPainter };\n"],"names":["RObjectPainter","ObjectPainter","constructor","dom","obj","opt","csstype","super","this","v7EvalAttr","name","dflt","getObject","cssprefix","type_check","res","undefined","typ1","typ2","parseFloat","fAttr","m","value","v","rstyle","fBlocks","blks","k","length","block","selector","fId","fCssClass","map","toLowerCase","v7SetAttr","v7EvalLength","sizepx","Math","round","norm","px","val","operand","pos","console","log","slice","Number","isFinite","v7EvalColor","isStr","pp","getPadPainter","_auto_color_cnt","pal","getHistPalette","cnt","num","_num_primitives","getColorOrdinal","_auto_colors","error","ordinal","v7EvalFont","dflts","fontScale","size","rfont","_dfltRFont","fFamily","fStyle","fWeight","text_angle","text_align","align","text_color","color","font_family","font_style","font_weight","text_size","getPadHeight","handler","FontHandler","setNameStyleWeight","setAngle","setAlign","setColor","createv7AttFill","prefix","pattern","createAttFill","color_as_svg","createv7AttLine","width","style","createAttLine","lineatt","setBorder","createv7AttMarker","refsize","createAttMarker","v7AttrChange","req","kind","snapid","_typename","nsREX","ids","names","values","update","push","parseInt","JSON","stringify","v7SendAttrChanges","do_update","canp","getCanvPainter","v7SubmitRequest","method","isFunc","submitDrawableRequest","_pending_request","assignSnapId","id","p","v7CommMode","_websocket","v7NormalMode","v7OfflineMode","RAxisPainter","arg1","axis","Object","assign","AxisPainterMethods","initAxisPainter","embedded","cleanup","axis_g","cleanupAxisPainter","getAxisType","configureZAxis","fp","kAxisNormal","_log","logbase","abs","exp","logz","configureAxis","min","max","smin","smax","vertical","frame_range","axis_range","opts","full_min","full_max","_symlog","reverse","kAxisTime","timeoffset","toffset","fLabelsIndex","kAxisLabels","own_labels","labels","func","d3_scaleTime","domain","convertDate","symlog","d3_scaleSymlog","constant","d3_scaleLog","base","d3_scaleLinear","scale_min","scale_max","gr_range","range","axis_shift","gr","format","ndiv","nticks","nticks2","nticks3","floor","scale_range","tf2","chooseTimeFormat","tf1","tfunc1","tfunc2","d3_timeFormat","formatTime","noexp","moreloglabels","formatLog","formatLabels","order","ndig","formatNormal","getScaleMin","getScaleMax","d","indx","fNBinsNoOver","i","pair","second","first","fLabels","createTicks","only_major_as_array","optionNoexp","optionNoopt","optionInt","noticksopt","ticks","produceTicks","handle","nminor","nmiddle","nmajor","minor","middle","major","delta","unshift","reset","next","doround","tick","grpos","last_major","next_major_grpos","get_modifier","maxorder","minorder","exclorder3","maxtick","mintick","ord1","log10","ord2","bestorder","bestndig","bestlen","lbls","totallen","lbl","indexOf","warn","isCenteredLabels","processLabelsMove","arg","optionUnlab","label_g","select","box","node","getBBox","append","classed","attr","x","y","height","call","addHighlightStyle","drag_pos0","offset","property","remove","side","labelsOffset","changeAxisAttr","scalingSize","addTitleDrag","title_g","settings","MoveResize","isBatchMode","acc_x","acc_y","new_x","new_y","alt_pos","curr_indx","drag_rect","drag_move","d3_drag","subject","on","evnt","sourceEvent","preventDefault","stopPropagation","title_length","titlePos","off","swap","isReverseAxis","title_align","isTitleRotated","dx","dy","set_x","set_y","besti","makeTranslate","basepos","titleOffset","isInsideGrRange","delta1","delta2","getGrRange","drawMainLine","ending","endingSize","endingStyle","sz","sz7","drawTicks","main_draw","ticks_plusminus","ticksSide","h1","ticksSize","h2","startingSize","ticksColor","ticksWidth","gap0","gap","drawLabels","gaps","center_lbls","rotate_lbls","labelsFont","angle","lbl_pos","textscale","maxtextlen","lbls_tilt","max_lbl_width","max_lbl_height","process_drawtext_ready","painter","result_width","result_height","textwidth","maxwidth","gap_before","gap_after","scale","scaleTextDrawing","fix_offset","fix_coord","lastpos","startTextDrawing","text","latex","draw_g","post_process","drawText","axis_step","has_obstacle","formatExp","finishTextDrawing","then","selectAll","each","txt","d3_select","tr","tilt_height","sin","PI","cos","addZoomingRect","lgaps","Zooming","disable_zooming","titleFont","drawTitle","fTitle","rotated","title_shift_x","title_shift_y","title_basepos","titleCenter","titleOpposite","extractDrawAttributes","rect","getPadRect","roundAngle","maxTickSize","drawAxis","layer","transform","standalone","selectChild","empty","tgaps","Promise","resolve","setAfterDrawHandler","_afterDrawAgain","drawAxisAgain","drawAxisOtherPlace","only_ticks","zoomStandalone","redraw","drawable","getCoordinate","fPos","labels_len","len","getPadLength","fVertical","fLength","createG","promise","ContextMenu","createMenu","menu","add","fillAxisContextMenu","show","addDragHandler","only_move","positionChanged","ZoomWheel","d3_pointer","coord","item","analyzeWheelEvent","changed","drag","xn","yn","fHoriz","fArr","fVert","submitCanvExec","toFixed","redraw_mode","changes","arguments","redrawPad","changeAxisLog","getFramePainter","unzoom","addchk","input","addRColorMenu","col","addSizeMenu","addSelectMenu","addRAttrTextItems","noangle","noalign","change","t","flag","RFramePainter","tframe","mode3d","xmin","xmax","ymin","ymax","axes_drawn","keys_handler","projection","v7_frame","is_root6","setFrameActive","enabledKeys","HandleKeys","control","enableKeys","setLastEventPos","pnt","fLastEventPnt","getLastEventPos","updateAttributes","force","fX1NDC","modified_NDC","gStyle","fPadLeftMargin","fY1NDC","fPadBottomMargin","fX2NDC","fPadRightMargin","fY2NDC","fPadTopMargin","fillatt","getProjectionFunc","getEarthProjectionFunc","recalculateRange","Proj","scale_ymin","scale_ymax","pnts","scale_xmin","scale_xmax","original_xmin","original_xmax","original_ymin","original_ymax","n","drawGrids","getFrameSvg","h","getFrameHeight","w","getFrameWidth","gridx","gridy","grid_style","getSvgLineStyle","fGridStyle","grid_color","fGridColor","getColor","x_handle","draw_grid","grid","swap_xy","fGridWidth","y_handle","axisAsText","toUpperCase","toPrecision","_setAxisRange","vmin","vmax","nmin","nmax","nzmin","nzmax","zoomChangedInteractive","setAxesRanges","xaxis","yaxis","zaxis","zmin","zmax","setAxes2Ranges","second_x","second_y","x2axis","y2axis","createXY","self_drawaxes","cleanXY","ndim","v6axes","reverse_x","reverse_y","logx","logy","scales_ndim","extra_y_space","zoom_xmin","zoom_xmax","zoom_ymin","zoom_ymax","clTAxis","create","TAxisPainter","getDom","setPadName","getPadName","symlog_y","symlog_x","logcheckmin","logminfactor","assignFrameMembers","log_min_nz","ymin_nz","hasDrawnAxes","drawAxes","ticksx","ticksy","sidex","sidey","cleanupAxes","draw_swapside","draw_ticks","z_handle","draw_horiz","draw_vertical","pr","_fast_drawing","can_adjust_frame","disable_x_draw","disable_y_draw","disable_ticks","pr1","invert_side","getFrameY","pr2","_frame_x","all","arr","drawAxes2","zoom_x2min","zoom_x2max","scale_x2min","scale_x2max","x2min","x2max","x2_handle","zoom_y2min","zoom_y2max","scale_y2min","scale_y2max","y2min","y2max","y2_handle","getGrFuncs","use_x2","grx2","use_y2","gry2","grx","gry","revertAxis","sizeChanged","clean","grname","cleanFrameDrawings","create3DScene","window","removeEventListener","_click_handler","_dblclick_handler","frame_painter_ref","lm","tm","trans","top_rect","main_svg","rotate","fixpos","options","RotateFrame","FixFrame","_frame_y","_frame_width","_frame_height","_frame_rotate","_frame_fixpos","getLayerSvg","rx","ry","addInteractivity","getFrameX","getFrameRect","hint_delta_x","hint_delta_y","configureUserClickHandler","configureUserDblclickHandler","zoom","zoom_x","zoom_y","zoom_z","unzoom_x","unzoom_y","unzoom_z","r_x","r_y","r_z","is_any_check","flags","checkZooming","canZoomInside","zoom_zmin","zoom_zmax","forEachPainter","ranges","interactiveRedraw","zoomSingle","zoom_v","unzoom_v","isAxisZoomed","dox","doy","doz","zoom_changed_x","zoom_changed_y","zoom_changed_z","fld","fillObjectOfflineMenu","changeFrameAttr","fillContextMenu","alone","isTooltipAllowed","setTooltipAllowed","addAttributesMenu","forEach","fmt","saveAs","revertPoint","showAxisStatus","axis_name","hint_name","axis_value","showObjectStatus","addKeysHandler","FrameInteractive","addFrameKeysHandler","for_second_axes","addBasicInteractivity","addFrameInteractivity","setRootPadRange","toggleAxisLog","RPadPainter","pad","iscan","this_pad_name","fObjectID","internals","id_counter","painters","has_canvas","forEachPainterInPad","selectDom","batch_mode","isRoot6","isEditable","svg_this_pad","getPadSvg","getMainPainter","main_painter_ref","setMainPainter","_doing_draw","svg_p","pads_cache","_pad_x","_pad_y","_pad_width","_pad_height","draw_object","pad_frame","selectActivePad","active","getPadWidth","getPadLog","szx","szy","getRootPad","cleanPrimitives","splice","removePrimitive","prim","resindx","isSecondary","findInPrimitives","objname","objtype","findPainterFor","selobj","selname","seltype","find","pobj","fName","fDfltPalette","fColors","fOrdinal","fColor","fInterpolate","fNormalized","addMethods","getNumPainters","userfunc","sub","registerForPadEvents","receiver","pad_events_receiver","producePadEvent","what","padpainter","position","place","selectObjectPainter","istoppad","getAbsPosInCanvas","setFastDrawing","was_fast","SmallPad","showPadButtons","isGrayscale","setGrayscale","createCanvasSvg","check_resize","new_size","btns","frect","factor","svg","_fixed_size","getCanvSvg","testMainResize","render_to","setTopPainter","online_canvas","enlargePad","padContextMenu","ToolBarSide","ToolBarVert","fWinSize","getElementRect","DarkMode","alignButtons","drawItemNameOnCanvas","is_dblclick","is_escape","enlargeMain","svg_can","pad_enlarged","hasObjectsToDraw","checkResize","createPadSvg","only_resize","svg_parent","pad_name","pad_visible","svg_pad","svg_rect","fSize","addPadInteractive","color0","fBorderMode","constants","Embed3D","Overlay","$userInteractive","fPrimitives","syncDraw","entry","findIndex","e","resolveFunc","confirmDraw","shift","drawObject","drawPrimitives","_start_tm","Date","getTime","op","isObject","_primitive","spenttm","processPadTooltipEvent","hints","processTooltipEvent","nproc","hint","user_info","changeDarkMode","mode","addSettingsMenu","hasMenuBar","actiavteMenuBar","hasEventStatus","activateStatusBar","canStatusBar","fname","fillObjectExecMenu","reason","sync_promise","showsubitems","redrawNext","isPromise","getActivePad","needRedrawByResize","elem","checkCanvasResize","_ignore_resize","getPromise","embed_canvas","_resize_tmout","clearTimeout","setTimeout","cw","ch","sendWebsocket","updateObject","addObjectPainter","objpainter","lst","extractTObjectProp","snap","fColIndex","fColValue","colors","root_colors","getRootColors","pattr","fObject","assignObject","fCssType","fOption","extract_color","member_name","attr_name","addColor","fLineColor","fLineWidth","fLineStyle","fFillColor","fFillStyle","fMarkerColor","fMarkerStyle","fMarkerSize","fTextColor","fTextAlign","fTextAngle","fTextSize","drawNextSnap","_snaps_map","next_rstyle","fDummy","redrawPadSnap","ppainter","fDrawable","subpad","decodeOptions","addToPadPrimitives","addPadButtons","prev_name","selectCurrentPad","webSnapIds","kNone","kObject","kColors","kStyle","kPalette","fKind","ListOfColors","fString","palette","custom_palette","ColorPalette","clTFrame","$dummy","findSnap","onlyid","check","checkid","document","title","mainid","use_openui","brlayout","BrowserLayout","setDom","drawing_divid","registerForResize","isanyfound","isanyremove","removePadButtons","createImage","produceImage","separ","itemContextMenu","rrr","getBoundingClientRect","clientX","left","clientY","top","postponePromise","selkind","selp","isInteger","full_canvas","filename","imgdata","saveFile","encodeURIComponent","findActivePad","file_format","use_frame","items","defs","prnt","insertBefore","firstChild","btns_node","btns_prnt","parentNode","btns_next","nextSibling","main","render3D","access3dKind","can3d","Embed","sz2","getSizeFor3d","canvas","renderer","domElement","dataUrl","toDataURL","foreign","clname","svg_frame","frame_node","frame_next","img","insert","reset_tranform","compressSVG","innerHTML","svgToImage","clickPadButton","funcname","closeMenu","getDimension","shown","getClassName","getObjectName","done","prs","clickButton","addPadButton","btn","tooltip","keyname","ToolBar","_buttons","cp","is_online","PadButtonsHandler","frame_painter","sign","getV","getRect","user","DrawOptions","GlobalColors","LocalColors","IgnorePalette","fLogx","fLogy","fLogz","fGridx","fGridy","fTickx","fTicky","draw","matchObjectType","clTPad","HEX_CHARS","split","EXTRA","SHIFT","K","Sha256","is224","blocks","h0","h3","h4","h5","h6","h7","start","bytes","hBytes","finalized","hashed","message","notString","code","index","charCodeAt","lastByteIndex","hash","finalize","j","s0","s1","maj","t1","t2","ab","da","cd","bc","a","b","c","f","g","chromeBugWorkAround","digest","hex","toString","sha256_2","as_hex","sessionKey","HMAC","key","o","kbis","sha256","ko","ki","Uint8Array","LongPollSocket","addr","_raw","_handle","_counter","path","connid","raw","counter","nextRequest","data","url","reqmode","post","getConnArgs","browser","qt5","btoa_func","createHttpRequest","processRequest","u8Arr","str","String","fromCharCode","trim","getResponseHeader","extra_hdr","send","_offset","onerror","onclose","dummy_tmout","onopen","onmessage","close","FileDumpSocket","protocol","httpRequest","getProtocol","parse","nextOperation","wait_for_file","chid","provideData","WebWindowHandle","socket_kind","credits","state","cansend","ackn","send_seq","recv_seq","getUserArgs","field","user_args","setUserArgs","args","setReceiver","invokeReceiver","brdcst","arg2","channels","ks","keys","msg","wait_first_recv","channel","force_queue","msgqueue","ready","reserveQueueItem","markQueueItemDone","_msg","_len","processQueue","_loop_msgqueue","front","master","channelid","timerid","canSend","numsend","getRelCanSend","keepAlive","sendLast","tmout","_delayed","inject","immediate","bind","Array","isArray","resizeWindow","cef3","resizeTo","createChannel","freechannelid","isConnected","getChannelId","setHRef","href","decodeUrl","get","token","getHRef","relative_path","ddd","lastIndexOf","ntry","connect","retry_open","first_time","location","showProgress","replace","WebSocket","next_binary","binchid","server_hash","next_binary_hash","Blob","reader","FileReader","qitem","onload","event","result","target","ArrayBuffer","readAsArrayBuffer","i0","i1","seq_id","i2","credit","i3","i4","newkey","URL","history","replaceState","sessionStorage","setItem","reload","err","askReload","addReloadKeyHandler","addEventListener","ctrlKey","RCanvasPainter","tooltip_allowed","Tooltip","v7canvas","_submreq","_changed_layout","setLayoutKind","getLayoutKind","origin","main_selector","changeLayout","layout_kind","sidebar2","sidebar","removeChild","html","appendChild","GridDisplay","getGridFrame","resize","toggleProjection","proj_painter","X","Y","showUI5ProjectionArea","layout","drawProjection","drawInSidePanel","canv","sel","testUI5","showMessage","saveCanvasAsFile","sendSaveCommand","closeWebsocket","useWebsocket","websocketTimeout","_tmouts","onWebsocketOpened","onWebsocketClosed","closeCurrentWindow","onWebsocketMsg","p1","resizeBrowser","redrawObject","processDrawableReply","cmdid","cmd","reply","showUI5Panel","conn","cpainter","panel_handle","panel_name","onWebsocketError","hist","that","showSection","_requests","prevreq","_tm","_nextreq","_nextreqid","reqid","_kind","_painter","_method","submitMenuRequest","menukind","menureqid","submitExec","exec","subelem","processChanges","activateGed","hasStatus","hp","getHPainter","hasStatusLine","createStatusLine","showCanvasStatus","br","msgs","_key","showStatus","hasGed","hasContent","removeGed","ged_view","getController","cleanupGed","destroy","deleteContent","getUi5PanelData","jsroot","toJSON","loadScript","EAxisBits","getColorExec","createBrowserBtns","ToolbarIcons","createSVG","diamand","toggleKind","circle","cross","setBrowserContent","setBrowserTitle","toggleBrowserKind","loadOpenui5","sap","ui","require","JSONModel","XMLView","oModel","viewName","viewData","oGed","setModel","placeAt","padEventsReceiver","produceJSON","fullW","fullH","can","nocanvas","normal_canvas","drawRPadSnapshot","async","ensureRCanvas","frame_kind","reject","Error","drawRFrameTitle","fx","fy","fw","ph","title_width","textFont","title_margin","title_height","fText","minwidth","minheight","no_change_x","drawRFont","font","fSrc","p2","base64","fDefault","drawRAxis","drawRFrame","registerMethods","extractRColor","rcolor","getContourIndex","zc","cntr","fContour","mid","l","r","fCustomContour","getContourColor","zindx","getContour","deleteContour","calcColor","entry1","entry2","dist","r1","r2","col1","d3_rgb","col2","createPaletteColors","setFullRange","createContour","nlevels","zminpositive","colzmin","colzmax","logmin","dz","level"],"sourceRoot":""}