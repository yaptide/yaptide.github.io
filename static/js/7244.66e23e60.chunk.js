"use strict";(self.webpackChunkthreejs_editor_react=self.webpackChunkthreejs_editor_react||[]).push([[7244],{7244:(t,e,s)=>{s.r(e),s.d(e,{TSplinePainter:()=>r});var i=s(9490),n=s(1597),o=s(6950),a=s(2848);class r extends o.JW{updateObject(t,e){const s=this.getObject();return s._typename===t._typename&&(s!==t&&Object.assign(s,t),void 0!==e&&this.decodeOptions(e),!0)}eval(t,e){const s=e-t.fX;return"TSplinePoly3"===t._typename?t.fY+s*(t.fB+s*(t.fC+s*t.fD)):"TSplinePoly5"===t._typename?t.fY+s*(t.fB+s*(t.fC+s*(t.fD+s*(t.fE+s*t.fF)))):t.fY+s}findX(t){const e=this.getObject();let s=0,i=e.fNp-1;if(t<=e.fXmin)return 0;if(t>=e.fXmax)return i;if(e.fKstep)s=Math.round((t-e.fXmin)/e.fDelta),t<e.fPoly[s].fX?s=Math.max(s-1,0):s<i&&t>e.fPoly[s+1].fX&&++s;else for(;i-s>1;){const n=Math.round((s+i)/2);t>e.fPoly[n].fX?s=n:i=n}return s}createDummyHisto(){const t=this.getObject();let e=0,s=1,n=0,o=1;t.fPoly&&(e=s=t.fPoly[0].fX,n=o=t.fPoly[0].fY,t.fPoly.forEach((t=>{e=Math.min(t.fX,e),s=Math.max(t.fX,s),n=Math.min(t.fY,n),o=Math.max(t.fY,o)})),o>0&&(o*=1+i.gStyle.fHistTopMargin),n<0&&(n*=1+i.gStyle.fHistTopMargin));const a=(0,i.createHistogram)(i.clTH1I,10);return a.fName=t.fName+"_hist",a.fTitle=t.fTitle,a.fBits|=i.kNoStats,a.fXaxis.fXmin=e,a.fXaxis.fXmax=s,a.fYaxis.fXmin=n,a.fYaxis.fXmax=o,a}processTooltipEvent(t){const e=this.getObject(),s=this.getFramePainter()?.getGrFuncs(this.options.second_x,this.options.second_y);let o,a,r=!1,l=null,f=0;null!==t&&e&&s?(o=s.revertAxis("x",t.x),f=this.findX(o),l=e.fPoly[f],a=this.eval(l,o),f<e.fN-1&&Math.abs(e.fPoly[f+1].fX-o)<Math.abs(o-l.fX)&&(l=e.fPoly[++f]),Math.abs(s.grx(l.fX)-t.x)<.5*this.knot_size?(o=l.fX,a=l.fY):(l=null,(o<e.fXmin||o>e.fXmax)&&(r=!0))):r=!0;let h=this.draw_g?.selectChild(".tooltip_bin");const c=this.lineatt.width+3;if(r||!this.draw_g)return h?.remove(),null;h.empty()&&(h=this.draw_g.append("svg:circle").attr("class","tooltip_bin").style("pointer-events","none").attr("r",c).style("fill","none").call(this.lineatt.func));const p={name:this.getObject().fName,title:this.getObject().fTitle,x:s.grx(o),y:s.gry(a),color1:this.lineatt.color,lines:[],exact:null!==l||Math.abs(s.gry(a)-t.y)<c};p.changed=h.property("current_xx")!==o,p.menu=p.exact,p.menu_dist=Math.sqrt((p.x-t.x)**2+(p.y-t.y)**2),p.changed&&h.attr("cx",Math.round(p.x)).attr("cy",Math.round(p.y)).property("current_xx",o);const g=this.getObjectHint();return g&&p.lines.push(g),p.lines.push(`x = ${s.axisAsText("x",o)}`,`y = ${s.axisAsText("y",a)}`),null!==l&&(p.lines.push(`knot = ${f}`,`B = ${(0,n.lg)(l.fB,i.gStyle.fStatFormat)}`,`C = ${(0,n.lg)(l.fC,i.gStyle.fStatFormat)}`,`D = ${(0,n.lg)(l.fD,i.gStyle.fStatFormat)}`),void 0!==l.fE&&void 0!==l.fF&&p.lines.push(`E = ${(0,n.lg)(l.fE,i.gStyle.fStatFormat)}`,`F = ${(0,n.lg)(l.fF,i.gStyle.fStatFormat)}`)),p}redraw(){const t=this.getObject(),e=this.getFramePainter(),s=e.getGrFuncs(this.options.second_x,this.options.second_y),i=e.getFrameWidth(),o=e.getFrameHeight();if(this.createG(!0),this.knot_size=5,this.createAttLine({attr:t}),this.options.Line||this.options.Curve){const i=Math.max(10,t.fNpx),o=[];let a=Math.max(e.scale_xmin,t.fXmin),r=Math.min(e.scale_xmax,t.fXmax),l=this.findX(a);e.logx&&(a=Math.log(a),r=Math.log(r));for(let n=0;n<i;++n){let f=a+(r-a)/i*(n-1);for(e.logx&&(f=Math.exp(f));l<t.fNp-1&&f>t.fPoly[l+1].fX;)++l;const h=this.eval(t.fPoly[l],f);o.push({x:f,y:h,grx:s.grx(f),gry:s.gry(h)})}this.draw_g.append("svg:path").attr("class","line").attr("d",(0,n.Mw)(o)).style("fill","none").call(this.lineatt.func)}if(this.options.Mark){let e="";this.createAttMarker({attr:t}),this.markeratt.resetPos(),this.knot_size=this.markeratt.getFullSize();for(let n=0;n<t.fPoly.length;n++){const a=t.fPoly[n],r=s.grx(a.fX);if(r>-this.knot_size&&r<i+this.knot_size){const t=s.gry(a.fY);t>-this.knot_size&&t<o+this.knot_size&&(e+=this.markeratt.create(r,t))}}e&&this.draw_g.append("svg:path").attr("d",e).call(this.markeratt.func)}}canZoomInside(t){return"x"===t&&!!this.getObject()}decodeOptions(t){const e=new n.nC(t);this.options||(this.options={});const s=!!this.getMainPainter();Object.assign(this.options,{Same:e.check("SAME"),Line:e.check("L"),Curve:e.check("C"),Mark:e.check("P"),Hopt:"",second_x:!1,second_y:!1}),this.options.Line||this.options.Curve||this.options.Mark||(this.options.Curve=!0),e.check("X+")&&(this.options.Hopt+="X+",this.options.second_x=s),e.check("Y+")&&(this.options.Hopt+="Y+",this.options.second_y=s),this.storeDrawOpt(t)}static async draw(t,e,s){const i=new r(t,e);i.decodeOptions(s);const n=!i.getMainPainter();let o=Promise.resolve();if(n||i.options.second_x||i.options.second_y){if(i.options.Same&&n)return console.warn("TSpline painter requires histogram to be drawn"),null;const e=i.createDummyHisto();o=a.TH1Painter.draw(t,e,i.options.Hopt)}return o.then((()=>(i.addToPadPrimitives(),i.redraw(),i)))}}}}]);
//# sourceMappingURL=7244.66e23e60.chunk.js.map