{"version":3,"file":"static/js/336.5554c7f6.chunk.js","mappings":"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","sources":["../node_modules/jsroot/modules/draw/TArrowPainter.mjs","../node_modules/jsroot/modules/draw/TLinePainter.mjs"],"sourcesContent":["import { TLinePainter } from './TLinePainter.mjs';\nimport { ensureTCanvas } from '../gpad/TCanvasPainter.mjs';\n\n\n/** @summary Drawing TArrow\n  * @private */\nclass TArrowPainter extends TLinePainter {\n\n   /** @summary Create line segment with rotation */\n   rotate(angle, x0, y0) {\n      let dx = this.wsize * Math.cos(angle), dy = this.wsize * Math.sin(angle), res = '';\n      if ((x0 !== undefined) && (y0 !== undefined))\n         res = `M${Math.round(x0-dx)},${Math.round(y0-dy)}`;\n      else {\n         dx = -dx; dy = -dy;\n      }\n      res += `l${Math.round(dx)},${Math.round(dy)}`;\n      if (x0 && (y0 === undefined)) res += 'z';\n      return res;\n   }\n\n   /** @summary Create SVG path for the arrow */\n   createPath() {\n      const angle = Math.atan2(this.y2 - this.y1, this.x2 - this.x1),\n            dlen = this.wsize * Math.cos(this.angle2),\n            dx = dlen*Math.cos(angle), dy = dlen*Math.sin(angle);\n\n      let path = '';\n      if (this.beg) {\n         path += this.rotate(angle - Math.PI - this.angle2, this.x1, this.y1) +\n                 this.rotate(angle - Math.PI + this.angle2, this.beg > 10);\n      }\n\n      if (this.mid % 10 === 2) {\n         path += this.rotate(angle - Math.PI - this.angle2, (this.x1+this.x2-dx)/2, (this.y1+this.y2-dy)/2) +\n                 this.rotate(angle - Math.PI + this.angle2, this.mid > 10);\n      }\n\n      if (this.mid % 10 === 1) {\n         path += this.rotate(angle - this.angle2, (this.x1+this.x2+dx)/2, (this.y1+this.y2+dy)/2) +\n                 this.rotate(angle + this.angle2, this.mid > 10);\n      }\n\n      if (this.end) {\n         path += this.rotate(angle - this.angle2, this.x2, this.y2) +\n                 this.rotate(angle + this.angle2, this.end > 10);\n      }\n\n      return `M${Math.round(this.x1 + (this.beg > 10 ? dx : 0))},${Math.round(this.y1 + (this.beg > 10 ? dy : 0))}` +\n             `L${Math.round(this.x2 - (this.end > 10 ? dx : 0))},${Math.round(this.y2 - (this.end > 10 ? dy : 0))}` +\n              path;\n   }\n\n   /** @summary calculate all TArrow coordinates */\n   prepareDraw() {\n      super.prepareDraw();\n\n      const arrow = this.getObject(),\n            oo = arrow.fOption,\n            rect = this.getPadPainter().getPadRect();\n\n      this.wsize = Math.max(3, Math.round(Math.max(rect.width, rect.height) * arrow.fArrowSize * 0.8));\n      this.angle2 = arrow.fAngle/2/180 * Math.PI;\n      this.beg = this.mid = this.end = 0;\n\n      if (oo.indexOf('<') === 0)\n         this.beg = (oo.indexOf('<|') === 0) ? 12 : 2;\n      if (oo.indexOf('->-') >= 0)\n         this.mid = 1;\n      else if (oo.indexOf('-|>-') >= 0)\n         this.mid = 11;\n      else if (oo.indexOf('-<-') >= 0)\n         this.mid = 2;\n      else if (oo.indexOf('-<|-') >= 0)\n         this.mid = 12;\n\n      const p1 = oo.lastIndexOf('>'), p2 = oo.lastIndexOf('|>'), len = oo.length;\n      if ((p1 >= 0) && (p1 === len-1))\n         this.end = ((p2 >= 0) && (p2 === len-2)) ? 11 : 1;\n\n      this.createAttFill({ attr: arrow });\n   }\n\n   /** @summary Add extras to path for TArrow */\n   addExtras(elem) {\n      if ((this.beg > 10) || (this.end > 10))\n         elem.call(this.fillatt.func);\n      else\n         elem.style('fill', 'none');\n   }\n\n   /** @summary Draw TArrow object */\n   static async draw(dom, obj, opt) {\n      const painter = new TArrowPainter(dom, obj, opt);\n      return ensureTCanvas(painter, false).then(() => painter.redraw());\n   }\n\n} // class TArrowPainter\n\nexport { TArrowPainter };\n","import { BIT } from '../core.mjs';\nimport { ObjectPainter } from '../base/ObjectPainter.mjs';\nimport { ensureTCanvas } from '../gpad/TCanvasPainter.mjs';\nimport { addMoveHandler } from '../gui/utils.mjs';\nimport { assignContextMenu, kToFront } from '../gui/menu.mjs';\n\n\nconst kLineNDC = BIT(14);\n\nclass TLinePainter extends ObjectPainter {\n\n   /** @summary Start interactive moving */\n   moveStart(x, y) {\n      const fullsize = Math.sqrt((this.x1-this.x2)**2 + (this.y1-this.y2)**2),\n          sz1 = Math.sqrt((x-this.x1)**2 + (y-this.y1)**2)/fullsize,\n          sz2 = Math.sqrt((x-this.x2)**2 + (y-this.y2)**2)/fullsize;\n      if (sz1 > 0.9)\n         this.side = 1;\n      else if (sz2 > 0.9)\n         this.side = -1;\n      else\n         this.side = 0;\n   }\n\n   /** @summary Continue interactive moving */\n   moveDrag(dx, dy) {\n      if (this.side !== 1) { this.x1 += dx; this.y1 += dy; }\n      if (this.side !== -1) { this.x2 += dx; this.y2 += dy; }\n      this.draw_g.select('path').attr('d', this.createPath());\n   }\n\n   /** @summary Finish interactive moving */\n   moveEnd(not_changed) {\n      if (not_changed) return;\n      const line = this.getObject();\n      let exec = '';\n      line.fX1 = this.svgToAxis('x', this.x1, this.isndc);\n      line.fX2 = this.svgToAxis('x', this.x2, this.isndc);\n      line.fY1 = this.svgToAxis('y', this.y1, this.isndc);\n      line.fY2 = this.svgToAxis('y', this.y2, this.isndc);\n      if (this.side !== 1) exec += `SetX1(${line.fX1});;SetY1(${line.fY1});;`;\n      if (this.side !== -1) exec += `SetX2(${line.fX2});;SetY2(${line.fY2});;`;\n      this.submitCanvExec(exec + 'Notify();;');\n   }\n\n   /** @summary Calculate line coordinates */\n   prepareDraw() {\n      const line = this.getObject();\n\n      this.isndc = line.TestBit(kLineNDC);\n\n      const func = this.getAxisToSvgFunc(this.isndc, true, true);\n\n      this.x1 = func.x(line.fX1);\n      this.y1 = func.y(line.fY1);\n      this.x2 = func.x(line.fX2);\n      this.y2 = func.y(line.fY2);\n\n      this.createAttLine({ attr: line });\n   }\n\n   /** @summary Create path */\n   createPath() {\n      const x1 = Math.round(this.x1), x2 = Math.round(this.x2), y1 = Math.round(this.y1), y2 = Math.round(this.y2);\n      return `M${x1},${y1}` + (x1 === x2 ? `V${y2}` : (y1 === y2 ? `H${x2}` : `L${x2},${y2}`));\n   }\n\n   /** @summary Add extras - used for TArrow */\n   addExtras() {}\n\n   /** @summary Redraw line */\n   redraw() {\n      this.createG();\n\n      this.prepareDraw();\n\n      const elem = this.draw_g.append('svg:path')\n                       .attr('d', this.createPath())\n                       .call(this.lineatt.func);\n\n      if (this.getObject()?.$do_not_draw)\n         elem.remove();\n      else {\n         this.addExtras(elem);\n         addMoveHandler(this);\n         assignContextMenu(this, kToFront);\n      }\n\n      return this;\n   }\n\n   /** @summary Draw TLine object */\n   static async draw(dom, obj, opt) {\n      const painter = new TLinePainter(dom, obj, opt);\n      return ensureTCanvas(painter, false).then(() => painter.redraw());\n   }\n\n} // class TLinePainter\n\n\nexport { TLinePainter };\n"],"names":["TArrowPainter","TLinePainter","rotate","angle","x0","y0","dx","this","wsize","Math","cos","dy","sin","res","undefined","round","createPath","atan2","y2","y1","x2","x1","dlen","angle2","path","beg","PI","mid","end","prepareDraw","super","arrow","getObject","oo","fOption","rect","getPadPainter","getPadRect","max","width","height","fArrowSize","fAngle","indexOf","p1","lastIndexOf","p2","len","length","createAttFill","attr","addExtras","elem","call","fillatt","func","style","draw","dom","obj","opt","painter","ensureTCanvas","then","redraw","kLineNDC","BIT","ObjectPainter","moveStart","x","y","fullsize","sqrt","sz1","sz2","side","moveDrag","draw_g","select","moveEnd","not_changed","line","exec","fX1","svgToAxis","isndc","fX2","fY1","fY2","submitCanvExec","TestBit","getAxisToSvgFunc","createAttLine","createG","append","lineatt","$do_not_draw","remove","addMoveHandler","assignContextMenu","kToFront"],"sourceRoot":""}